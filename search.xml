<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>增加一个速查表</title>
    <url>/addwiki/</url>
    <content><![CDATA[<p>删除了一些命令记录，转移到速查表里面去了<a id="more"></a>，最近半年的资料会在近期更新，之前的一些运维文档也会搬运过来，速查表点右边WIKI。</p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
  </entry>
  <entry>
    <title>alertmanager配合钉钉</title>
    <url>/alertmanager/</url>
    <content><![CDATA[<p>alertmanager配合钉钉机器人进行告警<a id="more"></a>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/prometheus/alertmanager/releases/download/v0.21.0/alertmanager-0.21.0.linux-amd64.tar.gz</span><br><span class="line">tar -zxf alertmanager-0.21.0.linux-amd64.tar.gz</span><br><span class="line">mv  alertmanager-0.21.0.linux-amd64  /usr/local/alertmanager</span><br><span class="line">cd  /usr/local/alertmanager/</span><br><span class="line">vim alertmanager.yml</span><br><span class="line">--------------------</span><br><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line"></span><br><span class="line">route:</span><br><span class="line">  group_by: ['alertname']</span><br><span class="line">  group_wait: 10s</span><br><span class="line">  group_interval: 10s</span><br><span class="line">  repeat_interval: 1h</span><br><span class="line">  receiver: 'web.hook'</span><br><span class="line">receivers:</span><br><span class="line">- name: 'web.hook'</span><br><span class="line">  webhook_configs:</span><br><span class="line">  - url: 'http://localhost:8060/dingtalk/ops_dingding/send'</span><br><span class="line">    send_resolved: false</span><br><span class="line">inhibit_rules:</span><br><span class="line">  - source_match:</span><br><span class="line">      alertname: 'ApplicationDown'</span><br><span class="line">      severity: 'critical'</span><br><span class="line">    target_match:</span><br><span class="line">      severity: 'warning'</span><br><span class="line">    equal: ['alertname', 'target', "job", 'instance']</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">vim /usr/lib/systemd/system/alertmanager.service</span><br><span class="line">------------------------------------------------</span><br><span class="line">[Unit]</span><br><span class="line">Description=alertmanager</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/alertmanager/alertmanager --config.file=/usr/local/alertmanager/alertmanager.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">需要 go  nodejs yarn</span></span><br><span class="line">curl -sL https://rpm.nodesource.com/setup_12.x | bash -</span><br><span class="line">yum -y install nodejs</span><br><span class="line">yum install golang -y</span><br><span class="line">curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo</span><br><span class="line">yum install yarn -y</span><br><span class="line"></span><br><span class="line">wget https://github.com/timonwong/prometheus-webhook-dingtalk/archive/v1.4.0.tar.gz</span><br><span class="line">tar  -zxvf v1.4.0.tar.gz</span><br><span class="line">cd  prometheus-webhook-dingtalk-1.4.0/</span><br><span class="line">make build</span><br><span class="line">mv  prometheus-webhook-dingtalk-1.4.0  /usr/local/prometheus-webhook-dingtalk-1.4.0</span><br><span class="line"></span><br><span class="line">vim /usr/local/prometheus-webhook-dingtalk-1.4.0</span><br><span class="line">------------------------------------------------</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Request timeout</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> timeout: 5s</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Customizable templates path</span></span></span><br><span class="line">templates:</span><br><span class="line">  - /usr/local/prometheus-webhook-dingtalk-1.4.0/template.tmpl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># You can also override default template using `default_message`</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># The following example to use the 'legacy' template from v0.3.0</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> default_message:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   title: <span class="string">'&#123;&#123; template "legacy.title" . &#125;&#125;'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   text: <span class="string">'&#123;&#123; template "legacy.content" . &#125;&#125;'</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Targets, previously was known as "profiles"</span></span></span><br><span class="line">targets:</span><br><span class="line">  ops_dingding:</span><br><span class="line">    url: 钉钉机器人的webhook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim /usr/lib/systemd/system/prometheus-webhook-dingtalk.service</span><br><span class="line">---------------------------------------------------------------</span><br><span class="line">[Unit]</span><br><span class="line">Description=prometheus-webhook-dingtalk</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/prometheus-webhook-dingtalk-1.4.0/prometheus-webhook-dingtalk --config.file=/usr/local/prometheus-webhook-dingtalk-1.4.0/config.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start alertmanager.service</span><br><span class="line">systemctl start prometheus-webhook-dingtalk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">普罗米修斯 打开alertmanagers修改rule_files</span></span><br><span class="line">vim  /usr/local/prometheus-2.19.0.linux-amd64/prometheus.yml</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"><span class="meta">#</span><span class="bash"> my global config</span></span><br><span class="line">global:</span><br><span class="line">  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line">  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line"><span class="meta">  #</span><span class="bash"> scrape_timeout is <span class="built_in">set</span> to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Alertmanager configuration</span></span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - static_configs:</span><br><span class="line">    - targets: ["localhost:9093"]</span><br><span class="line">      # - alertmanager:9093</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Load rules once and periodically evaluate them according to the global <span class="string">'evaluation_interval'</span>.</span></span><br><span class="line">rule_files:</span><br><span class="line">  - rules/*.yml</span><br><span class="line"><span class="meta">  #</span><span class="bash"> - <span class="string">"second_rules.yml"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim  /usr/local/prometheus-2.19.0.linux-amd64/rules/node_alived.yml</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">groups:</span><br><span class="line">- name: 实例存活告警规则</span><br><span class="line">  rules:</span><br><span class="line">  - alert: 实例存活告警</span><br><span class="line">    expr: up == 0</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      user: prometheus</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: "主机宕机 !!!"</span><br><span class="line">      description: "该实例主机已经宕机超过一分钟了。"</span><br></pre></td></tr></table></figure>

<p>rules 模板可以<a href="https://awesome-prometheus-alerts.grep.to/rules" target="_blank" rel="noopener">参考</a>这个，按照需求来写</p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
  </entry>
  <entry>
    <title>ansible安装</title>
    <url>/ansible-01/</url>
    <content><![CDATA[<p>ansible安装记录。<a id="more"></a></p>
<h4 id="Ansible-安装部署"><a href="#Ansible-安装部署" class="headerlink" title="Ansible 安装部署"></a>Ansible 安装部署</h4><ul>
<li>Ansible在epel的yum中有提供，所以配置好epel源，直接使用yum命令安装即可</li>
<li>关闭防火墙和selinux</li>
<li>centso7 演示</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 管理端安装软件</span></span><br><span class="line">yum install -y ansible</span><br><span class="line"><span class="meta">#</span><span class="bash"> 被管理端安装软件(如果关闭selinux，那么被管理端可以不安装,建议安装)</span></span><br><span class="line">yum install -y libselinux-python</span><br></pre></td></tr></table></figure>

<h4 id="安装目录"><a href="#安装目录" class="headerlink" title="安装目录"></a>安装目录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置文件目录：&#x2F;etc&#x2F;ansible&#x2F;</span><br><span class="line">执行文件目录：&#x2F;usr&#x2F;bin&#x2F;</span><br><span class="line">Lib库依赖目录：&#x2F;usr&#x2F;lib&#x2F;pythonX.X&#x2F;site-packages&#x2F;ansible&#x2F;</span><br><span class="line">Help文档目录：&#x2F;usr&#x2F;share&#x2F;doc&#x2F;ansible-X.X.X&#x2F;</span><br><span class="line">Man文档目录：&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;</span><br></pre></td></tr></table></figure>

<h4 id="配置和被管理的主机直接建立基于ssh的密钥认证"><a href="#配置和被管理的主机直接建立基于ssh的密钥认证" class="headerlink" title="配置和被管理的主机直接建立基于ssh的密钥认证"></a>配置和被管理的主机直接建立基于ssh的密钥认证</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 生成密码</span></span><br><span class="line">[root@master~]#ssh-keygen</span><br><span class="line">Generatingpublic/privatersakeypair.</span><br><span class="line">Enterfileinwhichtosavethekey(/root/.ssh/id_rsa):</span><br><span class="line">Createddirectory'/root/.ssh'.</span><br><span class="line">Enterpassphrase(emptyfornopassphrase):</span><br><span class="line">Entersamepassphraseagain:</span><br><span class="line">Youridentificationhasbeensavedin/root/.ssh/id_rsa.</span><br><span class="line">Yourpublickeyhasbeensavedin/root/.ssh/id_rsa.pub.</span><br><span class="line">Thekeyfingerprintis:</span><br><span class="line">2c:b0:df:16:26:8e:c7:e6:b4:c6:6a:22:e1:18:89:e9root@master</span><br><span class="line">Thekey'srandomartimageis:</span><br><span class="line">+--[RSA2048]----+</span><br><span class="line">||</span><br><span class="line">||</span><br><span class="line">|.|</span><br><span class="line">|o.|</span><br><span class="line">|.o.oS|</span><br><span class="line">|*==.|</span><br><span class="line">|+o..Bo|</span><br><span class="line">|oE..=oo|</span><br><span class="line">|.o.oo|</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure>

<h4 id="添加认证"><a href="#添加认证" class="headerlink" title="添加认证"></a>添加认证</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master~]#ssh-copy-id root@192.168.21.8</span><br><span class="line"></span><br><span class="line">[root@master~]#ssh root@192.168.21.8</span><br></pre></td></tr></table></figure>

<h4 id="定义主机"><a href="#定义主机" class="headerlink" title="定义主机"></a>定义主机</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master~]#vim /etc/ansible/hosts</span><br><span class="line">[web]</span><br><span class="line">192.168.21.8</span><br></pre></td></tr></table></figure>

<h4 id="执行ping存活检测"><a href="#执行ping存活检测" class="headerlink" title="执行ping存活检测"></a>执行ping存活检测</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@master~]#ansible web -m ping</span><br><span class="line">192.168.21.8|SUCCESS=&gt;&#123;</span><br><span class="line">"changed":false,</span><br><span class="line">"ping":"pong"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>ansible</category>
      </categories>
  </entry>
  <entry>
    <title>ansible常规介绍</title>
    <url>/ansible-02/</url>
    <content><![CDATA[<p>ansible常规配置命令记录。<a id="more"></a></p>
<h4 id="Ansible-主要组成部分功能说明"><a href="#Ansible-主要组成部分功能说明" class="headerlink" title="Ansible 主要组成部分功能说明"></a>Ansible 主要组成部分功能说明</h4><ul>
<li><p>PLAYBOOKS：任务剧本（任务集），编排定义Ansible任务集的配置文件，由Ansible顺序依次执行，通常是JSON格式的YML文件</p>
</li>
<li><p>INVENTORY：Ansible管理主机的清单/etc/anaible/hosts</p>
</li>
<li><p>MODULES：Ansible执行命令的功能模块，多数为内置的核心模块，也可自定义,ansible-doc –l 可查看模块</p>
</li>
<li><p>PLUGINS：模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等，该功能不常用</p>
</li>
<li><p>API：供第三方程序调用的应用程序编程接口</p>
</li>
<li><p>ANSIBLE：组合INVENTORY、 API、 MODULES、PLUGINS的绿框，可以理解为是ansible命令工具，其为核心执行工具</p>
</li>
</ul>
<h4 id="Ansible-配置文件详解"><a href="#Ansible-配置文件详解" class="headerlink" title="Ansible 配置文件详解"></a>Ansible 配置文件详解</h4><p>配置文件优先级如下：</p>
<ul>
<li><p>ANSIBLE_CONFIG （如果设置了环境变量）</p>
</li>
<li><p>ansible.cfg （在当前目录中）</p>
</li>
<li><p>~/.ansible.cfg （在主目录中）</p>
</li>
<li><p>/etc/ansible/ansible.cfg</p>
</li>
</ul>
<hr>
<table>
<thead>
<tr>
<th>配置文件</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>/etc/ansible/ansible.cfg</td>
<td>主配置文件，配置ansible工作特性</td>
</tr>
<tr>
<td>/etc/ansible/hosts</td>
<td>主机清单</td>
</tr>
<tr>
<td>/etc/ansible/roles/</td>
<td>存放角色的目录</td>
</tr>
<tr>
<td>/usr/bin/ansible</td>
<td>主程序，临时命令执行工具</td>
</tr>
<tr>
<td>/usr/bin/ansible-doc</td>
<td>查看配置文档，模块功能查看工具</td>
</tr>
<tr>
<td>/usr/bin/ansible-galaxy</td>
<td>下载、上传优秀代码或Roles模块的官网平台</td>
</tr>
<tr>
<td>/usr/bin/ansible-playbook</td>
<td>定制自动化任务，编排剧本工具</td>
</tr>
<tr>
<td>/usr/bin/ansible-pull</td>
<td>远程执行命令的工具</td>
</tr>
<tr>
<td>/usr/bin/ansible-vault</td>
<td>文件加密工具</td>
</tr>
<tr>
<td>/usr/bin/ansible-console</td>
<td>基于Console界面与用户交互的执行工具</td>
</tr>
</tbody></table>
<hr>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>inventory = /etc/ansible/hosts</td>
<td>主机列表配置文件</td>
</tr>
<tr>
<td>library = /usr/share/my_modules/</td>
<td>库文件存放目录</td>
</tr>
<tr>
<td>remote_tmp = $HOME/.ansible/tmp</td>
<td>临时py命令文件存放在远程主机目录</td>
</tr>
<tr>
<td>local_tmp = $HOME/.ansible/tmp</td>
<td>本机的临时命令执行目录</td>
</tr>
<tr>
<td>forks = 5</td>
<td>默认并发数</td>
</tr>
<tr>
<td>sudo_user = root</td>
<td>默认sudo 用户</td>
</tr>
<tr>
<td>ask_sudo_pass = True</td>
<td>每次执行ansible命令是否询问ssh密码</td>
</tr>
<tr>
<td>ask_pass = True</td>
<td>连接时提示输入ssh密码</td>
</tr>
<tr>
<td>remote_port = 22</td>
<td>远程主机的默认端口，生产中这个端口应该会不同</td>
</tr>
<tr>
<td>log_path = /var/log/ansible.log</td>
<td>日志</td>
</tr>
<tr>
<td>host_key_checking = False</td>
<td>检查对应服务器的host_key，建议取消注释。也就是不会弹出</td>
</tr>
</tbody></table>
<h4 id="Inventory-参数说明"><a href="#Inventory-参数说明" class="headerlink" title="Inventory 参数说明"></a>Inventory 参数说明</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>ansible_ssh_host</td>
<td>远程主机名</td>
</tr>
<tr>
<td>ansible_ssh_port</td>
<td>ssh端口号</td>
</tr>
<tr>
<td>ansible_ssh_user</td>
<td>ssh 用户名</td>
</tr>
<tr>
<td>ansible_ssh_pass</td>
<td>ssh 密码</td>
</tr>
<tr>
<td>ansible_sudo_pass</td>
<td>sudo 密码</td>
</tr>
<tr>
<td>ansible_sudo_exe (new in version 1.8)</td>
<td>sudo 命令路径(适用于1.8及以上版本)</td>
</tr>
<tr>
<td>ansible_connection</td>
<td>与主机的连接类型</td>
</tr>
<tr>
<td>ansible_ssh_private_key_file</td>
<td>ssh 使用的私钥文件</td>
</tr>
<tr>
<td>ansible_shell_type</td>
<td>目标系统的shell类型</td>
</tr>
<tr>
<td>ansible_python_interpreter</td>
<td>目标主机的 python 路径</td>
</tr>
</tbody></table>
<h4 id="Ansible-常用命令语法"><a href="#Ansible-常用命令语法" class="headerlink" title="Ansible 常用命令语法"></a>Ansible 常用命令语法</h4><ul>
<li><p>ansible <host-pattern> [-m module_name] [options]</host-pattern></p>
</li>
<li><p>指令 匹配规则的主机清单 -m 模块名 选项</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>–version</td>
<td>显示版本</td>
</tr>
<tr>
<td>-a</td>
<td>模块参数（如果有）</td>
</tr>
<tr>
<td>-m module</td>
<td>指定模块，默认为command</td>
</tr>
<tr>
<td>-v</td>
<td>详细过程 –vv -vvv更详细</td>
</tr>
<tr>
<td>–list-hosts</td>
<td>显示主机列表，可简写–list</td>
</tr>
<tr>
<td>-k, –ask-pass</td>
<td>提示连接密码，默认Key验证</td>
</tr>
<tr>
<td>-K，–ask-become-pass</td>
<td>提示使用sudo密码</td>
</tr>
<tr>
<td>-C, –check</td>
<td>检查，并不执行</td>
</tr>
<tr>
<td>-T, –timeout=TIMEOUT</td>
<td>执行命令的超时时间，默认10s</td>
</tr>
<tr>
<td>-u, –user=REMOTE_USER</td>
<td>执行远程执行的用户</td>
</tr>
<tr>
<td>-U， SUDO_USER, –sudo-user</td>
<td>指定sudu用户</td>
</tr>
<tr>
<td>-b, –become</td>
<td>代替旧版的sudo 切换</td>
</tr>
</tbody></table>
<h4 id="Ansible-常用参数"><a href="#Ansible-常用参数" class="headerlink" title="Ansible 常用参数"></a>Ansible 常用参数</h4><table>
<thead>
<tr>
<th>参数</th>
<th>功能</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td>ping</td>
<td>尝试连接到主机，验证并返回pong成功</td>
<td>ansible all -m ping</td>
</tr>
<tr>
<td>command</td>
<td>在远程节点上执行命令</td>
<td>ansible all -m command -a ‘echo $PATH’</td>
</tr>
<tr>
<td>shell</td>
<td>在远程节点上执行命令</td>
<td>ansible all -m shell -a df</td>
</tr>
<tr>
<td>script</td>
<td>把脚本复制到远程节点后，在远程节点本地运行脚本</td>
<td>ansible all -m script -a ‘./shell.sh’</td>
</tr>
<tr>
<td>copy</td>
<td>复制文件或目录到远程节点。默认会覆盖目标文件</td>
<td>ansible all -m copy -a ‘src=/tmp/abc.txt  dest=/app backup=yes’<br>ansible all -m copy -a ‘src=/tmp/dir1  dest=/app’</td>
</tr>
<tr>
<td>fetch</td>
<td>从远程节点获取文件(只能是文件)到本地目录</td>
<td>ansible all -m fetch -a ‘src=/var/log/messages dest=/app’</td>
</tr>
<tr>
<td>file</td>
<td>设置远程节点的文件的文件属性</td>
<td>ansible all -m file -a ‘path=/tmp/abc.txt state=touch mode=0666 owner=ftp’<br> ansible all -m file -a ‘path=/tmp/abc state=directory mode=0666 owner=ftp’</td>
</tr>
<tr>
<td>hostname</td>
<td>设置远程节点主机名</td>
<td>ansible all -m hostname -a ‘name=node1’</td>
</tr>
<tr>
<td>cron</td>
<td>管理计划任务</td>
<td>ansible all -m cron -a ‘name=”test” minute=*/2 job=”/etc/init.d/tomcat restart”‘<br>ansible all -m cron -a ‘state=absent name=test’</td>
</tr>
<tr>
<td>yum</td>
<td>使用yum包管理器来管理软件包</td>
<td>ansible all -m yum -a ‘name=tree state=present’</td>
</tr>
<tr>
<td>yum_repository</td>
<td>配置管理yum源</td>
<td>ansible all -m yum_repository -a ‘state=present name=epel enabled=yes gpgcheck=yes description=”Aliyun EPEL” baseurl=”http://…,http://…” gpgkey=”https://…”‘</td>
</tr>
<tr>
<td>service</td>
<td>配置管理服务</td>
<td>ansible all -m service -a ‘name=httpd state=started’</td>
</tr>
<tr>
<td>setup</td>
<td>收集关于远程主机的信息</td>
<td>ansible all -m setup -a ‘filter=ansible_distribution_version’ –tree /tmp/</td>
</tr>
<tr>
<td>user</td>
<td>管理用户账号</td>
<td>ansible all -m user -a ‘name=hunk4 shell=/sbin/nologin system=yes comment=”name is hunk”‘<br>ansible all -m user -a ‘name=hunk3 state=absent remove=yes’</td>
</tr>
<tr>
<td>group</td>
<td>添加组或删除组</td>
<td>groupadd, groupdel, groupmod</td>
</tr>
<tr>
<td>get_url</td>
<td>从 HTTP, HTTPS, FTP 下载文件</td>
<td>ansible all -m get_url -a ‘dest=/tmp/ url=”https://….”‘</td>
</tr>
<tr>
<td>fail</td>
<td>自定义消息失败</td>
<td>默认返回 ‘Failed as requested from task’</td>
</tr>
<tr>
<td>lineinfile</td>
<td>替换一个文件中特定的行，或者使用一个反引用的正则表达式替换一个现有的行</td>
<td></td>
</tr>
<tr>
<td>replace</td>
<td>替换一个文件中符合匹配的所有行，或者使用一个反引用的正则表达式替换所有的行</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>ansible</category>
      </categories>
  </entry>
  <entry>
    <title>ansible-playbook</title>
    <url>/ansible-03/</url>
    <content><![CDATA[<p>ansible-playbook记录。<a id="more"></a></p>
<h4 id="Ansible-playbook"><a href="#Ansible-playbook" class="headerlink" title="Ansible-playbook"></a>Ansible-playbook</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ansible-playbook &lt;filename.yml&gt; ... [options]</span><br></pre></td></tr></table></figure>
<hr>
<table>
<thead>
<tr>
<th>常见选项</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>–check</td>
<td>只检测可能会发生的改变，但不真正执行操作</td>
</tr>
<tr>
<td>–list-hosts</td>
<td>列出运行任务的主机</td>
</tr>
<tr>
<td>–list-tasks</td>
<td>列出此playbook中的所有任务</td>
</tr>
<tr>
<td>–list-tags</td>
<td>列出此playbook中的所有的tags</td>
</tr>
<tr>
<td>–limit</td>
<td>主机列表 只针对主机列表中的主机执行</td>
</tr>
<tr>
<td>–step</td>
<td>一步一步执行脚本</td>
</tr>
<tr>
<td>–flush-cache</td>
<td>清除fact缓存</td>
</tr>
<tr>
<td>-C</td>
<td>文件名     执行前先检查语法</td>
</tr>
<tr>
<td>-D</td>
<td>显示出执行前后的变化内容</td>
</tr>
<tr>
<td>-v</td>
<td>显示过程 -vv -vvv 更详细</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">整个playbook是以task为中心，表明要执行的任务。hosts和remote_user表明在哪些远程主机以何种身份执行。其他组件让其能够更加灵活。</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>基础组件</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Hosts</td>
<td>运行执行任务（task）的目标主机</td>
</tr>
<tr>
<td>remote_user</td>
<td>在远程主机上执行任务的用户</td>
</tr>
<tr>
<td>tasks</td>
<td>任务列表</td>
</tr>
<tr>
<td>handlers</td>
<td>任务，与tasks不同的是只有在接受到通知时才会被触发</td>
</tr>
<tr>
<td>templates</td>
<td>使用模板语言的文本文件，使用jinja2语法</td>
</tr>
<tr>
<td>variables</td>
<td>变量，变量替换</td>
</tr>
</tbody></table>
<hr>
<blockquote>
<p>hello.yml例子</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">- hosts: all</span><br><span class="line">  remote_user: root</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: test yml</span><br><span class="line">      command: /usr/bin/wall "hello world"</span><br></pre></td></tr></table></figure>

<h4 id="YAML语法"><a href="#YAML语法" class="headerlink" title="YAML语法"></a>YAML语法</h4><p>在单一档案中，可用连续三个连字号(—)区分多个档案。另外，还有选择性的连续三个点号( … )用来表示档案结尾</p>
<ul>
<li><p>次行开始正常写Playbook的内容，一般建议写明该Playbook的功能</p>
</li>
<li><p>使用#号注释代码</p>
</li>
<li><p>缩进必须是统一的，不能空格和tab混用,一般缩进2个空格</p>
</li>
<li><p>缩进的级别也必须是一致的，同样的缩进代表同样的级别，程序判别配置的级别是通过缩进结合换行来实现的</p>
</li>
<li><p>YAML文件内容和Linux系统大小写判断方式保持一致，是区别大小写的，key/value的值均需大小写敏感</p>
</li>
<li><p>key/value的值可以写在同一行，也可换行写。同一行使用 , 逗号分隔</p>
</li>
<li><p>value可是个字符串，也可是另一个列表</p>
</li>
<li><p>一个完整的代码块功能需最少元素需包括 name和task</p>
</li>
<li><p>一个name只能包括一个task</p>
</li>
<li><p>使用| 和 &gt; 来分隔多行，实际上这只是一行</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include_newlines: |</span><br><span class="line">    exactly as you see</span><br><span class="line">    will appear these three</span><br><span class="line">    lines of poetry</span><br><span class="line"></span><br><span class="line">ignore_newlines: &gt;</span><br><span class="line">    this is really a</span><br><span class="line">    single line of text</span><br><span class="line">    despite appearances</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Yaml中不允许在双引号中出现转义符号，所以都是以单引号来避免转义符错误           </p>
</li>
<li><p>YAML文件扩展名通常为yml或yaml</p>
</li>
</ul>
<hr>
<h4 id="Playbook核心元素"><a href="#Playbook核心元素" class="headerlink" title="Playbook核心元素"></a>Playbook核心元素</h4><ul>
<li>1.hosts</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: web,app</span><br><span class="line">  remote_user: root</span><br></pre></td></tr></table></figure>

<blockquote>
<p>hosts 行的内容是一个或多个组或主机的 patterns,以逗号为分隔符。通常是/etc/ansible/hosts定义的主机列表</p>
</blockquote>
<blockquote>
<p>remote_user 就是远程执行任务的账户名:</p>
</blockquote>
<ul>
<li>2.tasks 任务集</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tasks:</span><br><span class="line">  - name: install httpd</span><br><span class="line">    yum: name&#x3D;httpd</span><br><span class="line"></span><br><span class="line">  - name: start httpd</span><br><span class="line">    service: name&#x3D;httpd state&#x3D;started</span><br><span class="line"></span><br><span class="line">  - name: check http port</span><br><span class="line">    shell: ss -ntl|grep 80 &gt; &#x2F;tmp&#x2F;httpd.txt</span><br><span class="line"></span><br><span class="line">  - name: fetch</span><br><span class="line">    fetch: src&#x3D;&#x2F;tmp&#x2F;httpd.txt dest&#x3D;&#x2F;tmp</span><br></pre></td></tr></table></figure>

<ul>
<li>3.Handlers 和 notity</li>
</ul>
<blockquote>
<p>在 notify 中定义内容一定要和handlers中定义的 - name 内容一样，这样才能达到触发的效果，否则会不生效。<br>只有接收到通知才会执行这里的任务<br>由特定条件触发的操作，满足条件方才执行，否则不执行。<br>Handlers也是task列表，这些task与前述的tasks并没有本质上的不同,用于当关注的资源发生变化时，才会采取一定的操作</p>
</blockquote>
]]></content>
      <categories>
        <category>ansible</category>
      </categories>
  </entry>
  <entry>
    <title>get请求调用ansible</title>
    <url>/ansible-04/</url>
    <content><![CDATA[<p>get请求flask调用ansible进行更新<a id="more"></a>，由于SSH Publishers不能使用Jenkins变量，这里用curl的方式请求远程ansible服务器，然后用os来调用本机命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">import os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route('/',methods=['GET', 'POST'])</span><br><span class="line">def get_ansible():</span><br><span class="line">    data_info=request.args.get("mane")</span><br><span class="line">    ansible_cmd="ansible-playbook /etc/ansible/yaml/&#123;&#125;.yml".format(data_info)</span><br><span class="line">    ansible_val=os.popen(ansible_cmd)</span><br><span class="line">    return ansible_val.read()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">if __name__ == '__main__':</span><br><span class="line">    app.run(host="0.0.0.0", port=31666, debug=True)</span><br></pre></td></tr></table></figure>
<p>Jenkins服务器直接 <code>curl http://192.168.2.110:666/?mane=${git_app}</code>就可以了，git_app为ansible的yml名字，在贴个服务脚本</p>
<pre><code class="shell">[Unit]
Description=ansible-demo

[Service]
User=root
Group=root
Type=simple
ExecStart=/bin/python3 /data/ansible_demo.py
Restart=on-failure
RestartSec=20s
LimitNOFILE=infinity

[Install]
WantedBy=multi-user.target
</code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>百度统计API</title>
    <url>/baidu-api/</url>
    <content><![CDATA[<p>记录百度统计api使用，方便后期查询。<a id="more"></a></p>
<h4 id="百度统计api的实例"><a href="#百度统计api的实例" class="headerlink" title="百度统计api的实例"></a>百度统计api的实例</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Baidu</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, siteId, username, password, token)</span>:</span></span><br><span class="line">        self.siteId = siteId</span><br><span class="line">        self.username = username</span><br><span class="line">        self.password = password</span><br><span class="line">        self.token = token</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getresult</span><span class="params">(self, metrics=<span class="string">'ip_count'</span>)</span>:</span></span><br><span class="line">        base_url = <span class="string">"https://api.baidu.com/json/tongji/v1/ReportService/getData"</span></span><br><span class="line">        today = datetime.date.today()</span><br><span class="line">        yesterday = today - datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">        start_date, end_date = str(yesterday).replace(<span class="string">"-"</span>, <span class="string">""</span>), str(today).replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">        body = &#123;<span class="string">"header"</span>: &#123;<span class="string">"account_type"</span>: <span class="number">1</span>,</span><br><span class="line">                           <span class="string">"password"</span>: self.password,</span><br><span class="line">                           <span class="string">"token"</span>: self.token,</span><br><span class="line">                           <span class="string">"username"</span>: self.username</span><br><span class="line">                           &#125;,</span><br><span class="line">                <span class="string">"body"</span>: &#123;<span class="string">"siteId"</span>: self.siteId,</span><br><span class="line">                         <span class="string">"method"</span>: <span class="string">"overview/getTimeTrendRpt"</span>,  <span class="comment"># 趋势数据</span></span><br><span class="line">                         <span class="string">"start_date"</span>: start_date,</span><br><span class="line">                         <span class="string">"end_date"</span>: end_date,</span><br><span class="line">                         <span class="string">"metrics"</span>: metrics</span><br><span class="line">                         &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url=base_url, json=body)</span><br><span class="line">            data_info = json.loads(r.text)</span><br><span class="line">            ip_num = data_info[<span class="string">'body'</span>][<span class="string">'data'</span>][<span class="number">0</span>][<span class="string">'result'</span>][<span class="string">'items'</span>][<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> ip_num[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    bd = Baidu(yousiteId, username, password, youtoken)</span><br><span class="line">    result = bd.getresult()</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p><code>yousiteId</code>网站siteid，获取方式如下图所示。<br><code>username</code>百度统计账号。<br><code>password</code>百度统计密码。<br><code>youtoken</code>网站token，获取方式如下图所示。 </p>
<hr>
<p> 以上只简单的查询了网站的昨日的ip访问，如果还需要其他的信息添加metrics即可，如多添加一个pv，<code>metrics=&#39;ip_count,pv_count&#39;</code>即可，如果有多添加的信息，下面的数据获取也需要调整。<a href="https://tongji.baidu.com/dataapi/file/TongjiApiFile.pdf" target="_blank" rel="noopener">官方API说明</a> </p>
<img src="/baidu-api/001.png" class title="This is siteid">

<img src="/baidu-api/002.png" class title="This is token">

]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>百度网盘</title>
    <url>/bypy/</url>
    <content><![CDATA[<p>linux版本的百度网盘<a id="more"></a></p>
<h4 id="linux百度网盘"><a href="#linux百度网盘" class="headerlink" title="linux百度网盘"></a>linux百度网盘</h4><h5 id="需要以下条件"><a href="#需要以下条件" class="headerlink" title="需要以下条件"></a>需要以下条件</h5><ul>
<li>需要 python2.7或者3.3</li>
<li>需要  <code>requests</code>和<code>setuptools</code> </li>
<li>2018年5月验证，后期请参考官方文档</li>
</ul>
<hr>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost python_2.7]# pip2.7 install requests</span><br><span class="line">[root@localhost python_2.7]# wget --no-check-certificate https://pypi.python.org/packages/source/s/setuptools/setuptools-1.4.2.tar.gz</span><br><span class="line">[root@localhost python_2.7]# tar xf setuptools-1.4.2.tar.gz</span><br><span class="line">[root@localhost python_2.7]# ls</span><br><span class="line">setuptools-1.4.2  setuptools-1.4.2.tar.gz</span><br><span class="line">[root@localhost python_2.7]# cd setuptools-1.4.2</span><br><span class="line">[root@localhost setuptools-1.4.2]# python setup.py install</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h5><img src="/bypy/20180526155515.png" class title="This is an example image">

<p>这里直接输入一个 <code>bypy info</code>会返回一个url的验证信息 ，在浏览器输入  <code>https://openapi.baidu.com/oauth/2.0/authorize?scope=basic+netdisk&amp;redirect_uri=oob&amp;response_type=code&amp;client_id=q8WE4EpCsau1oS0MplgMKNBn</code>浏览器这里会返回<code>ef4a923834ab2eb68ff7aa88a03bceef</code>这个key，输入后会显示当前账号的网盘空间和使用容量。</p>
<hr>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bypy list							#查看 我的应用数据  bypy 里面的文件夹</span><br><span class="line">bypy mkdir laddin						#新建一个laddin的文件夹</span><br><span class="line">bypy upload /home/mysql_backup_all_2018-05-20.sql.gz laddin/	#将home下面的数据库备份文件上传到网盘的laddin目录下</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>cat的妙用</title>
    <url>/cat/</url>
    <content><![CDATA[<p>偶然发现cat还有合并文件的功能<a id="more"></a>，今天帮朋友处理1寸的相片，有个特殊要求，相片大小必须为1M以上，裁剪后发现相片越来越小了，在百度找资料发现可以用cat来配合使用，代码如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fallocate -l 874k test</span><br><span class="line">cat  20201015095427.jpg test &gt; 1015.jpg</span><br></pre></td></tr></table></figure>
<p>1寸相片这里大概是130K，生成一个874K的文件，然后用cat合并起来，这样可以不失真还达到大小要求。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>centos6 yum 源</title>
    <url>/centos6-yum/</url>
    <content><![CDATA[<p>由于要测试centos6，发现自带的源和阿里的源都无法使用，记录一下后期使用。<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://file.kangle.odata.cc/repo/Centos-6.repo</span><br><span class="line">curl -o /etc/yum.repos.d/epel.repo http://file.kangle.odata.cc/repo/epel-6.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>chrome time 解释</title>
    <url>/chrome-time/</url>
    <content><![CDATA[<p>chrome F12 time说明<a id="more"></a>，今天产品说网站请求很慢，对比了一下浏览器时间和日志时间发现相差很多，找了一下浏览器时间的说明，特此记录。</p>
<img src="/chrome-time/001.jpg" class title="This is time">

<ul>
<li>Queueing：请求文件顺序的排序。浏览器是有线程限制的，发请求也不能所有的请求同时发送，会将请求加入队列中。此参数表示从添加到待处理队列，到实际开始处理的时间间隔标示。</li>
<li>Stalled: 浏览器得到要发出这个请求的指令，到请求可以发出的等待时间，一般是代理协商、以及等待可复用的TCP连接释放的时间，不包括DNS查询、建立TCP连接等时间等。浏览器对同一个主机域名的并发连接数有限制，因此如果当前的连接数已经超过上限，那么其余请求就会被阻塞，等待新的可用连接，此外脚本也会阻塞其他组件的下载。</li>
<li>Proxy negotiation：浏览器正在与代理服务器协商请求。</li>
<li>Request sent：正在发送请求。</li>
<li>Waiting (TTFB)：浏览器正在等待响应的第一个字节。TTFB代表到第一个字节的时间。此时间包括一次往返延迟和服务器准备响应所花费的时间。</li>
<li>Content Download：浏览器正在接收响应。</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>vmware挂载win共享目录</title>
    <url>/cifs/</url>
    <content><![CDATA[<p>vmware linux虚拟机挂载局域网 win 共享服务器<a id="more"></a>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install cifs-utils -y</span><br><span class="line">mkdir /mnt/video</span><br><span class="line">mount.cifs //192.168.2.11/video2021  /mnt/video   -o username=administrator,password=1235678</span><br><span class="line">vim  /etc/fstab</span><br><span class="line">---------------</span><br><span class="line">//192.168.2.11/video2021  /mnt/video  cifs   username=administrator,password=1235678   0   0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# df  -h</span><br><span class="line">Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda2             7.7G  5.7G  1.7G  78% /</span><br><span class="line">/dev/sda1             9.7G  3.2G  6.0G  35% /data</span><br><span class="line">//192.168.2.11/video2021</span><br><span class="line">                       71T   70T  1.4T  99% /mnt/video</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>clamav 杀毒</title>
    <url>/clamav/</url>
    <content><![CDATA[<p>开源病毒扫描程序<a id="more"></a>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line">yum install –y clamav clamav-update</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">更新</span></span><br><span class="line">freshclam</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查杀</span></span><br><span class="line">[root@localhost src]# clamscan -ri /data/data  -l clamscan.log --remove</span><br><span class="line"></span><br><span class="line">----------- SCAN SUMMARY -----------</span><br><span class="line">Known viruses: 8527249</span><br><span class="line">Engine version: 0.103.2</span><br><span class="line">Scanned directories: 3901</span><br><span class="line">Scanned files: 26793</span><br><span class="line">Infected files: 0</span><br><span class="line">Data scanned: 1382.41 MB</span><br><span class="line">Data read: 781.71 MB (ratio 1.77:1)</span><br><span class="line">Time: 567.707 sec (9 m 27 s)</span><br><span class="line">Start Date: 2021:05:08 11:30:11</span><br><span class="line">End Date:   2021:05:08 11:39:38</span><br></pre></td></tr></table></figure>
<p><code>Infected files</code> 受感染的文件<br><code>-r</code> 递归扫面子文件<br><code>-i</code> 只显示被感染的文件<br><code>-l</code> 指定日志文件<br><code>--remove</code> 删除被感染文件<br><code>--move</code> 隔离被感染文件</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>py文件配置</title>
    <url>/configparser/</url>
    <content><![CDATA[<p>记录使用，方便后期查询。<a id="more"></a>文件配置模板 configparser 使用方法。</p>
<h4 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> configparser <span class="keyword">import</span> ConfigParser</span><br><span class="line">cfg = ConfigParser()</span><br><span class="line">cfg[<span class="string">'TEST_A'</span>] = &#123;<span class="string">'test_a1'</span>: <span class="number">21</span>, <span class="string">'test_b2'</span>: <span class="literal">False</span>, <span class="string">'test_c3'</span>: <span class="number">35.6</span>&#125;</span><br><span class="line">cfg.add_section(<span class="string">'TEST_B'</span>)</span><br><span class="line">cfg.set(<span class="string">'TEST_B'</span>, <span class="string">'ip'</span>, <span class="string">'127.0.0.1'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'config.ini'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> df:</span><br><span class="line">    cfg.write(df)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[TEST_A]</span><br><span class="line">test_a1 = <span class="number">21</span></span><br><span class="line">test_b2 = <span class="literal">False</span></span><br><span class="line">test_c3 = <span class="number">35.6</span></span><br><span class="line"></span><br><span class="line">[TEST_B]</span><br><span class="line">ip = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> configparser <span class="keyword">import</span> ConfigParser</span><br><span class="line">cfg = ConfigParser()</span><br><span class="line">cfg.read(<span class="string">"config.ini"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">cfg.remove_option(<span class="string">'TEST_A'</span>, <span class="string">'test_c3'</span>) <span class="comment">#即使没有test_c3 也不会报错</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'config.ini'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> df:</span><br><span class="line">    cfg.write(df)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[TEST_A]</span><br><span class="line">test_a1 = <span class="number">21</span></span><br><span class="line">test_b2 = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">[TEST_B]</span><br><span class="line">ip = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> configparser <span class="keyword">import</span> ConfigParser</span><br><span class="line">cfg = ConfigParser()</span><br><span class="line">cfg.read(<span class="string">"config.ini"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">cfg.set(<span class="string">'TEST_A'</span>, <span class="string">'test_b2'</span>, <span class="string">'old'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'config.ini'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> df:</span><br><span class="line">    cfg.write(df)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[TEST_A]</span><br><span class="line">test_a1 = <span class="number">21</span></span><br><span class="line">test_b2 = old</span><br><span class="line"></span><br><span class="line">[TEST_B]</span><br><span class="line">ip = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#文件</span></span><br><span class="line">[TEST_A]</span><br><span class="line">test_a1 = <span class="number">21</span></span><br><span class="line">test_b2 = <span class="literal">False</span></span><br><span class="line">test_c3 = <span class="number">35.6</span></span><br><span class="line"></span><br><span class="line">[TEST_B]</span><br><span class="line">ip = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> configparser <span class="keyword">import</span> ConfigParser</span><br><span class="line">cfg = ConfigParser()</span><br><span class="line">cfg.read(<span class="string">"config.ini"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">print(cfg.sections())                       <span class="comment">#获取所有sections</span></span><br><span class="line"><span class="comment"># 这里如果没有test_a1会抛异常</span></span><br><span class="line">print(cfg.getint(<span class="string">'TEST_A'</span>, <span class="string">'test_a1'</span>))      <span class="comment">#int类型</span></span><br><span class="line">print(cfg.getboolean(<span class="string">'TEST_A'</span>,<span class="string">'test_b2'</span>))   <span class="comment">#Boolean类型</span></span><br><span class="line">print(cfg.getfloat(<span class="string">'TEST_A'</span>,<span class="string">'test_c3'</span>))     <span class="comment">#float类型</span></span><br><span class="line">print(cfg.get(<span class="string">'TEST_B'</span>,<span class="string">'ip'</span>))               <span class="comment">#str类型</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">'TEST_A'</span>, <span class="string">'TEST_B'</span>]</span><br><span class="line"><span class="number">21</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="number">35.6</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>crontab其他用法</title>
    <url>/crontab/</url>
    <content><![CDATA[<p>重启系统时，执行任务，秒级执行任务<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@reboot    :    Run once after reboot.      重启时执行一次</span><br><span class="line">@yearly    :    Run once a year, ie.  "0 0 1 1 *".  一年执行一次，1月1号0点0分执行</span><br><span class="line">@annually  :    Run once a year, ie.  "0 0 1 1 *". 一年执行一次，1月1号0点0分执行</span><br><span class="line">@monthly   :    Run once a month, ie. "0 0 1 * *". 一月执行一次，每月1号0点0分执行</span><br><span class="line">@weekly    :    Run once a week, ie.  "0 0 * * 0". 一周执行一次</span><br><span class="line">@daily     :    Run once a day, ie.   "0 0 * * *".  一天执行一次</span><br><span class="line">@hourly    :    Run once an hour, ie. "0 * * * *".  一小时执行一次</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* * * * * sleep 5; /usr/bin/curl http://baidu.com</span><br></pre></td></tr></table></figure>
<p>reboot这个有一个问题，不能执行网络交互，是先执行crontab在连接网络的，可以配合sleep来进行处理。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>docker-compose</title>
    <url>/docker-compose/</url>
    <content><![CDATA[<p>docker-compose是docker的一种编排服务，可以让用户在集群中部署分布式应用。<a id="more"></a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -L https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.22.0&#x2F;docker-compose-$(uname -s)-$(uname -m) -o &#x2F;usr&#x2F;bin&#x2F;docker-compose</span><br><span class="line">chmod 755 &#x2F;usr&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure>

<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><code>docker-compose -f docker-compose-file.yml  up -d</code></p>
<p><code>-f</code>:使用指定的compose模板文件<br><code>-d</code>：后台启动</p>
<h4 id="compose-file-常用配置"><a href="#compose-file-常用配置" class="headerlink" title="compose-file 常用配置"></a>compose-file 常用配置</h4><p>以线上配置为例:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version: &#39;2&#39;</span><br><span class="line">services:</span><br><span class="line">  nginx:</span><br><span class="line">    container_name: nginx</span><br><span class="line">    image: nginx:stable-alpine</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      TZ: &quot;Asia&#x2F;Shanghai&quot;</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;80:80&quot;</span><br><span class="line">      - &quot;443:443&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - &#39;..&#x2F;nginx&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf&#39;</span><br><span class="line">      - &#39;..&#x2F;nginx&#x2F;conf.d:&#x2F;etc&#x2F;nginx&#x2F;conf.d&#39;</span><br><span class="line">      - &#39;&#x2F;home&#x2F;data&#x2F;logs&#x2F;nginx&#x2F;:&#x2F;var&#x2F;log&#x2F;nginx&#x2F;&#39;</span><br></pre></td></tr></table></figure>

<p><code>version</code>:语法使用版本2<br><code>services</code>:创建一个应用<br><code>nginx</code>:自定义名称，这里标注为服务名<br><code>container_name</code>:容器的名称<br><code>image</code>:使用的镜像<br><code>restart</code>:重启策略为始终重启<br><code>environment</code>:环境变量，这里设置了时区<br><code>ports</code>:端口映射<br><code>volumes</code>:挂载点</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>docker 镜像优化</title>
    <url>/docker-images/</url>
    <content><![CDATA[<p>docker镜像优化<a id="more"></a>，根据自己经验和网上资料整理，分为镜像体积优化和镜像构建速度优化。</p>
<h5 id="体积优化"><a href="#体积优化" class="headerlink" title="体积优化"></a>体积优化</h5><ol>
<li>选择精简的基础镜像，比如<code>alpine</code>类型版本的镜像，但是这种镜像一般会有一些问题，比如缺少动态连接库、运行bash脚本异常、域名解析行为和glibc有差异（alpine底层是musl libc需要做特殊的修复）、部分选项在resolv.conf中不支持和时区等问题，这里建议用alpine为底层基础镜像，然后根据自身业务进行初始化，用初始化后的镜像为通用镜像。</li>
<li>合理的规划镜像层数，编写dockerfile合并一些指令，1.10之前每提交一个指令就会保存一个修改，这个修改会保存一个只读层挂载到联和文件系统，上面的文件如果和下的文件有冲突或者不同会覆盖隐藏底层的文件，所以每增加一层镜像大小就会增加，1.10之后只有<code>run</code> <code>copy</code> <code>add</code>会创建新层。</li>
</ol>
<h5 id="速度优化"><a href="#速度优化" class="headerlink" title="速度优化"></a>速度优化</h5><ol>
<li>编写<code>.dockerignore</code>文件，过滤不必要的文件和目录比如<code>.git</code> <code>README.md</code>等,从而减小镜像大小。</li>
<li>优化网络，调整网络质量使用就近节点，从而使镜像下载、依赖安装、代码下载加快。</li>
<li>构建缓存，每次构建都会有本地缓存，最好使用同一台机器来进行构建。</li>
<li>分层缓存，镜像的分层缓存，比如可以将cp目录进行拆解，将不变的文件如依赖库静态文件等单独摘出来当一个指令。</li>
</ol>
<p>在dockerfile中使用多个from语句，每个from语句都可以使用不同的基础镜像并且配置出独立的子构建阶段，达到构建安全、 构建速度快且镜像文件小的目的。</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>docker-install</title>
    <url>/docker-install/</url>
    <content><![CDATA[<p>记录安装过程，方便后期查询。<a id="more"></a></p>
<h4 id="docker安装脚本"><a href="#docker安装脚本" class="headerlink" title="docker安装脚本"></a>docker安装脚本</h4><ul>
<li>centos 7.5</li>
<li>docker 17.03</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. remove old version</span></span><br><span class="line">yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine-selinux \</span><br><span class="line">                  docker-engine</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. install utils and repo</span></span><br><span class="line">yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">yum-config-manager --disable docker-ce-edge</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. install docker-ce-17.03.2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> install docker-ce-selinux first</span></span><br><span class="line">yum install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm -y</span><br><span class="line">yum install docker-ce-17.03.2.ce -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. install docker-compose</span></span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/bin/docker-compose</span><br><span class="line">chmod 755 /usr/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5. install Docker Registry (centso7)</span></span><br><span class="line"></span><br><span class="line">vim /lib/systemd/system/docker.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> ExecStart后面添加仓库地址</span></span><br><span class="line">ExecStart=/usr/bin/dockerd --insecure-registry http://私人仓库.com</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>docker-network</title>
    <url>/docker-network/</url>
    <content><![CDATA[<p>记录docker网络。<a id="more"></a></p>
<h4 id="网络模式"><a href="#网络模式" class="headerlink" title="网络模式"></a>网络模式</h4><p>Docker中的网络主要解决容器与容器、容器与外部网络、外部网络与容器之间的相互通信的问题，默认情况下，Docker使用网桥（bridge）+NAT的通信模式。docker网络大致可以分为以下5种。</p>
<img src="/docker-network/2-1.png" class>

<h5 id="Bridge模式"><a href="#Bridge模式" class="headerlink" title="Bridge模式"></a>Bridge模式</h5><p>Bridge桥接模式的实现步骤主要如下：</p>
<ul>
<li><p>Docker Daemon利用veth pair技术，在宿主机上创建两个虚拟网络接口设备，假设为veth0和veth1。而veth pair技术的特性可以保证无论哪一个veth接收到网络报文，都会将报文传输给另一方。</p>
</li>
<li><p>Docker Daemon将veth0附加到Docker Daemon创建的docker0网桥上。保证宿主机的网络报文可以发往veth0。</p>
</li>
<li><p>Docker Daemon将veth1添加到Docker Container所属的namespace下，并被改名为eth0。如此一来，保证宿主机的网络报文若发往veth0，则立即会被eth0接收，实现宿主机到Docker Container网络的联通性；同时，也保证Docker Container单独使用eth0，实现容器网络环境的隔离性。</p>
</li>
</ul>
<hr>
<h5 id="Host模式"><a href="#Host模式" class="headerlink" title="Host模式"></a>Host模式</h5><p>该模式将禁用Docker容器的网络隔离。因为容器共享了宿主机的网络命名空间，直接暴露在公共网络中。</p>
<p>优势：</p>
<ul>
<li>可以直接使用宿主机的IP地址与外界进行通信，若宿主机的eth0是一个公有IP，那么容器也拥有这个公有IP。</li>
<li>同时容器内服务的端口也可以使用宿主机的端口，无需额外进行NAT转换。</li>
</ul>
<p>缺陷：</p>
<ul>
<li>最明显的是Docker Container网络环境隔离性的弱化，即容器不再拥有隔离、独立的网络栈。</li>
<li>使用host模式的Docker Container虽然可以让容器内部的服务和传统情况无差别、无改造的使用，但是由于网络隔离性的弱化，该容器会与宿主机共享竞争网络栈的使用；</li>
<li>容器内部将不再拥有所有的端口资源，原因是部分端口资源已经被宿主机本身的服务占用，还有部分端口已经用以bridge网络模式容器的端口映射。</li>
</ul>
<hr>
<h5 id="Container模式"><a href="#Container模式" class="headerlink" title="Container模式"></a>Container模式</h5><p>Docker Container的container网络模式在实现过程中，不涉及网桥，同样也不需要创建虚拟网卡veth pair。<br>  完成container网络模式的创建只需要两个步骤：</p>
<ul>
<li>查找container（即需要被共享网络环境的容器）的网络namespace；</li>
<li>将新创建的Docker Container（也是需要共享其他网络的容器）的namespace，使用container的namespace</li>
</ul>
<p>优势：</p>
<ul>
<li>在这种模式下的Docker Container可以通过localhost来访问namespace下的其他容器，传输效率较高。</li>
<li>虽然多个容器共享网络环境，但是多个容器形成的整体依然与宿主机以及其他容器形成网络隔离。</li>
<li>这种模式还节约了一定数量的网络资源。</li>
</ul>
<p>缺陷：</p>
<ul>
<li>没有改善容器与宿主机以外世界通信的情况。</li>
</ul>
<hr>
<h5 id="None模式"><a href="#None模式" class="headerlink" title="None模式"></a>None模式</h5><p>获取独立的network namespace，但不为容器进行任何网络配置，之后用户可以自己进行配置，容器内部只能使用loopback网络设备，不会再有其他的网络资源。none网络就是什么都没有的网络。挂在这个网络下的容器除了lo，没有其他任何网卡。容器run时，可以通过添加–network=none参数来指定该容器使用none网络。</p>
<p>用途</p>
<ul>
<li>none网络应用与隔离场景，一些对安全性要求高并且不需要联网的应用可以使用none网络。</li>
<li>比如某个容器的唯一用途是生成随机密码，就可以放到none网络中避免密码被窃取。</li>
</ul>
<hr>
<h5 id="User-defined模式"><a href="#User-defined模式" class="headerlink" title="User-defined模式"></a>User-defined模式</h5><p>有时候可能用户需要指定自己的网络，以此来适应某些配置，如ip地址规划等等。自定义网桥，默认与bridge网络一样。docker提供三种user-defined网络驱动：bridge，overlay和macvlan。overlay和macvlan用于创建跨主机的网络</p>
<p>创建bridge自定义网络</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker network create -d bridge --subnet 172.10.0.0/24 --gateway 172.10.0.1 my_net</span><br><span class="line">docker network inspect my_net</span><br><span class="line">docker run -it --network my_net --ip 172.10.0.3 busybox</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="网络访问原理"><a href="#网络访问原理" class="headerlink" title="网络访问原理"></a>网络访问原理</h4><p>Docker主要通过netfilter/iptables实现网络通信。iptables由netfilter和iptables组成，netfilter组件是Linux内核集成的信息包过滤系统，它维护一个信息包过滤表，这个表用于控制信息包过滤处理的规则集。而iptables只是一个在用户空间的工具，用于增删改查这个过滤表的规则。</p>
<img src="/docker-network/3-1.png" class>

<hr>
<h5 id="容器访问外部"><a href="#容器访问外部" class="headerlink" title="容器访问外部"></a>容器访问外部</h5><p>容器默认是能访问外部网络的。通过NAT，docker实现了容器对外网（此处外网不一定是互联网）的访问。容器将数据报发送给容器网关，即docker0虚拟网桥，然后虚拟网桥再转发到实际的网卡并由实际网卡转发到物理网关，然后向目标进行层层转发直到抵达目标地址。</p>
<hr>
<h5 id="外部访问容器"><a href="#外部访问容器" class="headerlink" title="外部访问容器"></a>外部访问容器</h5><p>通过端口映射的方式实现外部网络访问容器，即通过-p参数实现将容器的端口映射到外部端口。容器通过将服务的实际端口在宿主机上进行端口映射，外部客户端通过连接宿主机的映射端口来访问容器内的服务。</p>
<img src="/docker-network/3-2.png" class>

<hr>
<h5 id="容器之间互通"><a href="#容器之间互通" class="headerlink" title="容器之间互通"></a>容器之间互通</h5><p>如果是ip通信，保证2个容器在同一个网络环境即可，如果不在同一个网络环境，需要在其中一个容器添加另外一个容器的网络，命令如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker network connect my_net httpd</span><br></pre></td></tr></table></figure>

<p>connect命令能够为httpd容器再添加一个my_net网络（假设httpd原来只有默认的bridge网络）。这样前面创建的busybox容器就能与此次connect的httpd容器进行通信。</p>
<hr>
<h5 id="Docker-DNS-Server"><a href="#Docker-DNS-Server" class="headerlink" title="Docker DNS Server"></a>Docker DNS Server</h5><p>通过 IP 访问容器虽然满足了通信的需求，但还是不够灵活。因为我们在部署应用之前可能无法确定IP，部署之后再指定要访问的IP会比较麻烦。对于这个问题，可以通过docker自带的DNS服解决。从Docker 1.10 版本开始，docker daemon 实现了一个内嵌的DNS server，使容器可以直接通过“容器名”通信。方法很简单，只要在启动时用–name为容器命名就可以了。下面的命令启动两个容器bbox1和bbox2：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it --network=my_net --name=bbox1 busybox</span><br><span class="line">docker run -it --network=my_net --name=bbox2 busybox</span><br></pre></td></tr></table></figure>

<p>然后，bbox2就可以直接ping到bbox1了，但是使用docker DNS有个限制，只能在user-defined网络中使用。默认的bridge网络是无法使用的。</p>
<hr>
<h4 id="Docker-网络管理"><a href="#Docker-网络管理" class="headerlink" title="Docker 网络管理"></a>Docker 网络管理</h4><h5 id="网络空间虚拟化"><a href="#网络空间虚拟化" class="headerlink" title="网络空间虚拟化"></a>网络空间虚拟化</h5><p>Docker网络虚拟化是基于Linux下的网络命名空间（net namespace）实现的。使用ip netns命令，可以创建自己的虚拟网络环境。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ip netns add net0</span><br><span class="line">ip netns list</span><br><span class="line"><span class="meta">#</span><span class="bash">ip netns <span class="built_in">exec</span> 为net0网络空间中的网络设备eth0设置IP地址</span></span><br><span class="line">ip netns exec net0 ip addr add 172.17.42.99/16 dev eth0</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="网络设备虚拟化"><a href="#网络设备虚拟化" class="headerlink" title="网络设备虚拟化"></a>网络设备虚拟化</h5><p>网络接口和网络设备不一定是物理设备，也可以是虚拟设备，比如系统中的lo回环接口就是一个虚拟的网络接口。当我们在主机上启动Docker服务时，Docker引擎会在系统上创建一个名为docker0的虚拟以太网桥，并且为之随机分配一个未使用的私有IP地址和子网掩码。这个网桥将连接在它上面的所有容器组织成一个虚拟子网，并提供数据包转发功能。可以认为这个虚拟网桥是连接容器、容器和主机之间的路由中枢。Docker容器的网络互联依赖Linux底层的veth机制。每当启动一个容器时，Docker引擎会在主机上创建一个虚拟的以太网卡接口,并且会将这个接口一端放在主机网络空间并连接到docker0网桥，另一端放入Docker容器的网络空间中。容器退出时，虚拟网卡也会被销毁，下次启动容器时将创建一个新的虚拟网络接口并和docker0重新连接。</p>
<hr>
<h5 id="4种网络模式"><a href="#4种网络模式" class="headerlink" title="4种网络模式"></a>4种网络模式</h5><ul>
<li><p>–net=bridge，容器默认的网络模式（连接到docker0网桥上）。可以通过DOCKER_OPTS=’-b=docker1’参数来指定默认网桥，docker1必须是合法的网桥。</p>
</li>
<li><p>–net=host，必会拥有自己的网络空间，与主机共享网络。</p>
</li>
<li><p>–net=container:NAME_or_ID，指定已经创建好的容器网络环境。两个容器将共享IP地址及端口等网络资源，可通过本地回环进行访问。</p>
</li>
<li><p>–net=none，不会配置网络环境，没有任何网络访问能力。可以手动配置一个网络环境。</p>
</li>
</ul>
<hr>
<h5 id="主机名配置"><a href="#主机名配置" class="headerlink" title="主机名配置"></a>主机名配置</h5><ul>
<li>-h，修改容器/etc/hostname文件，同时也会修改/etc/hosts主机的ip对应的主机名</li>
</ul>
<hr>
<h5 id="NDS配置"><a href="#NDS配置" class="headerlink" title="NDS配置"></a>NDS配置</h5><ul>
<li>–dns=IP，修改容器/etc/resolv.conf文件</li>
</ul>
<hr>
<h5 id="容器互联配置"><a href="#容器互联配置" class="headerlink" title="容器互联配置"></a>容器互联配置</h5><ul>
<li><p>–icc=&lt;true|false&gt;,true使用ACCEPT策略进行配置。false使用DROP策略进行配置。该参数可通过DOCKER_OPTS=”–icc=(true|false)”来默认添加。</p>
</li>
<li><p>-P|–publish-all=&lt;true|false&gt;,Dockerfile文件中EXPOSE命令所指定的端口随机映射到主机49153~65535的端口范围。</p>
</li>
<li><p>-p SPEC|–publish=SPEC,指定可访问的端口。</p>
</li>
<li><p>–ip-forward=&lt;true|false&gt;,Docker服务每次启动时，都会修改/proc/sys/net/ipv4/ip_forward为1。如果是false，则不修改。大多数是true，以确保与外部网络以及其他容器正常通信。</p>
</li>
</ul>
<hr>
<h5 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h5><p>映射端口，直接操作防火墙对docker是无效的，根据官方文档应该对docker-user进行处理，官方文档对iptables的相关内容大致为：</p>
<ul>
<li>docker会把iptables规则写到DOCKER链里面 </li>
<li>如果需要增加自己的规则，请写到DOCKER-USER链中操作</li>
<li>默认docker是会自动管理iptables规则，我们可以选择关闭它，然后手动管理 （建议不要）</li>
</ul>
<p>初级方案：</p>
<p> 手动创建容器网络，给容器指定网段，到时候开通规则直接网段间允许所有。</p>
<p>升级方案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在表nat中创建新的链DOCKER-FILTER</span></span><br><span class="line">iptables -t nat -N DOCKER-FILTER</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止所有nat表中的访问，然后将所有LOCAL流量导到DOCKER-FILTER中</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当我们在一个内置的链中使用了RETURN，那么，默认的策略会应用到这个包上，PREROUTING默认的策略是ACCEPT，不过不用担心，因为只要它不去DOCKER链，依然是无法访问程序的</span></span><br><span class="line">iptables -t nat -I PREROUTING -m addrtype --dst-type LOCAL -j RETURN </span><br><span class="line">iptables -t nat -I PREROUTING -m addrtype --dst-type LOCAL -j DOCKER-FILTER</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加规则</span></span><br><span class="line">iptables -t nat -A DOCKER-FILTER -p tcp -m tcp --dport 80 -m state --state NEW,ESTABLISHED -j DOCKER</span><br></pre></td></tr></table></figure>

<ul>
<li>nat表中的允许的流量变成了PREROUTING -&gt; DOCKER-FILTER -&gt; DOCKER</li>
<li>nat表中禁止的流量变成了PREROUTING -&gt; DOCKER-FILTER -&gt; 禁止。 </li>
</ul>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>sysctl提示没有文件或者目录</title>
    <url>/err0112/</url>
    <content><![CDATA[<p>sysctl -p 提示 No such file or directory<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 提示异常</span></span><br><span class="line">[root@192-168-1-241 ~]# sysctl -p</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">kernel.sysrq = 1</span><br><span class="line">net.ipv4.neigh.default.gc_stale_time = 120</span><br><span class="line">net.ipv4.conf.all.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.arp_announce = 2</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 5000</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class="line">net.ipv4.tcp_synack_retries = 2</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 1</span><br><span class="line">sysctl: cannot stat /proc/sys/net/netfilter/nf_conntrack_max: No such file or directory</span><br><span class="line">sysctl: cannot stat /proc/sys/net/netfilter/nf_conntrack_tcp_timeout_established: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查conntrack加载状况</span></span><br><span class="line">[root@192-168-1-241 ~]# lsmod |grep conntrack</span><br><span class="line">[root@192-168-1-241 ~]# modprobe ip_conntrack</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重试</span></span><br><span class="line">[root@192-168-1-241 ~]# sysctl -p</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">kernel.sysrq = 1</span><br><span class="line">net.ipv4.neigh.default.gc_stale_time = 120</span><br><span class="line">net.ipv4.conf.all.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.arp_announce = 2</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 5000</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class="line">net.ipv4.tcp_synack_retries = 2</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 1</span><br><span class="line">net.netfilter.nf_conntrack_max = 655350</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_established = 1200</span><br><span class="line">[root@192-168-1-241 ~]#</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>hexo同步github异常</title>
    <url>/err0113/</url>
    <content><![CDATA[<p>hexo 同步到git出现<code>ssh: connect to host github.com Port : 22 Connection refused</code>异常。<a id="more"></a>解决方法如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ./.ssh</span><br><span class="line">vim config</span><br><span class="line">----------</span><br><span class="line">Host github.com  </span><br><span class="line">User xxx@xxx.com  	//你注册github的邮箱</span><br><span class="line">Hostname ssh.github.com  </span><br><span class="line">PreferredAuthentications publickey  </span><br><span class="line">IdentityFile ~/.ssh/id_rsa  </span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>mysql GTID同步报错1236</title>
    <url>/err0305/</url>
    <content><![CDATA[<p>GTID同步出现Got fatal error 1236 from master when reading data from binary log: ‘The slave is connecting using CHANGE MASTER TO MASTER_AUTO_POSITION = 1, but the master has purged binary logs containing GTIDs that the slave requires.’<a id="more"></a>，今天按照之前gtid同步rds出现1236错误，研究了一些这个错误发生在slave的IO线程从master拉取日志时，发现gtid_next在master的binlog.index中第一个文件中不存在，或者slave由于某些原因停止了一段时间，而这段时间master上的binlog被purge掉了，导致从库获取不到对应的binlog文件。<br>其实这个很好解决，要是要求数据一致性就等rds使用比较少的时候进行备份，然后重新跑一次就可以了，要是不要求数据一致性，直接按照下面的方式处理</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">主库</span></span><br><span class="line">show global variables like '%gtid_executed';</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">从库</span></span><br><span class="line">stop slave;</span><br><span class="line">reset master;</span><br><span class="line">set global gtid_purged='主库gtid_executed';</span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ERR_SSL_VERSION_OR_CIPHER_MISMATCH</title>
    <url>/err0531/</url>
    <content><![CDATA[<p>https 提示 ERR_SSL_VERSION_OR_CIPHER_MISMATCH<a id="more"></a>，同一台服务器使用同一个证书文件，另外的域名正常，最后发现是阿里云CDN没有解析HTTPS，开启HTTPS证书解决。说明使用CDN你nginx配置https根本没有生效。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>umount target is busy</title>
    <url>/err0601/</url>
    <content><![CDATA[<p>卸载文件提示<code>umount: /data: target is busy.
        (In some cases useful info about processes that use
         the device is found by lsof(8) or fuser(1))</code><a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">是由于待卸载磁盘正在使用导致无法直接卸载,将当前使用数据盘的进程杀掉才能卸载.</span></span><br><span class="line">[root@192.168.1.100 ~]# umount /data</span><br><span class="line">umount: /data: target is busy.</span><br><span class="line">        (In some cases useful info about processes that use</span><br><span class="line">         the device is found by lsof(8) or fuser(1))</span><br><span class="line"></span><br><span class="line">[root@192.168.1.100 ~]# fuser -mv  /data</span><br><span class="line">                     USER        PID ACCESS COMMAND</span><br><span class="line">/data:               root     kernel mount /data</span><br><span class="line">                     admin      5385 ..c.. bash</span><br><span class="line"></span><br><span class="line">[root@192.168.1.100 ~]# kill  -9   5385</span><br><span class="line"></span><br><span class="line">[root@192.168.1.100 ~]# umount /data</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>no library called &quot;cairo&quot; was found</title>
    <url>/err0607/</url>
    <content><![CDATA[<p>win安装<code>cairosvg</code>出现<code>cairo</code>异常<a id="more"></a>，详细如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">OSError: no library called "cairo" was found</span><br><span class="line">no library called "libcairo-2" was found</span><br><span class="line">cannot load library 'libcairo.so.2': error 0x7e</span><br><span class="line">cannot load library 'libcairo.2.dylib': error 0x7e</span><br><span class="line">cannot load library 'libcairo-2.dll': error 0x7e</span><br></pre></td></tr></table></figure>
<p>这个需要安装GTK2，<a href="https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2021-01-30/gtk2-runtime-2.24.33-2021-01-30-ts-win64.exe" target="_blank" rel="noopener">下载</a>，<a href="https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer" target="_blank" rel="noopener">github</a>，安装完后会自动加入环境变量，然后重启pycharm即可。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>NFS网络正常showmount异常</title>
    <url>/err0608/</url>
    <content><![CDATA[<p>同企业账号不同阿里云账号，showmount提示<code>clnt_create: RPC: Port mapper failure - Timed out</code><a id="more"></a>，网络正常，防火墙开启，最后直接挂载刷新完成。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 以下都是客户端操作</span></span><br><span class="line">[root@47 ~]# telnet 172.168.141.188   2049</span><br><span class="line">Trying 172.168.141.188...</span><br><span class="line">Connected to 172.168.141.188.</span><br><span class="line">Escape character is '^]'.</span><br><span class="line">^CConnection closed by foreign host.</span><br><span class="line">[root@47 ~]# telnet 172.168.141.188   111</span><br><span class="line">Trying 172.168.141.188...</span><br><span class="line">Connected to 172.168.141.188.</span><br><span class="line">Escape character is '^]'.</span><br><span class="line">^CConnection closed by foreign host.</span><br><span class="line">[root@47 ~]# rpcinfo -p   172.168.141.188</span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100024    1   udp  44237  status</span><br><span class="line">    100024    1   tcp  41705  status</span><br><span class="line">    100005    1   udp  20048  mountd</span><br><span class="line">    100005    1   tcp  20048  mountd</span><br><span class="line">    100005    2   udp  20048  mountd</span><br><span class="line">    100005    2   tcp  20048  mountd</span><br><span class="line">    100005    3   udp  20048  mountd</span><br><span class="line">    100005    3   tcp  20048  mountd</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100021    1   udp  55412  nlockmgr</span><br><span class="line">    100021    3   udp  55412  nlockmgr</span><br><span class="line">    100021    4   udp  55412  nlockmgr</span><br><span class="line">    100021    1   tcp  36417  nlockmgr</span><br><span class="line">    100021    3   tcp  36417  nlockmgr</span><br><span class="line">    100021    4   tcp  36417  nlockmgr</span><br><span class="line">[root@47 ~]# showmount -e   172.168.141.188</span><br><span class="line">clnt_create: RPC: Port mapper failure - Timed out</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决方式</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line">-------------</span><br><span class="line">172.168.141.188:/nfs			/nfs	nfs	defaults	0	0</span><br><span class="line"></span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Mount CIFS Host is down</title>
    <url>/err0622/</url>
    <content><![CDATA[<p>linux cifs 挂载win2008，提示<code>Host is down</code><a id="more"></a>，最初以为是SMB版本的问题，发现win2008的启动或关闭Windows功能没有SMB选项，后面调整注册表<code>SYSTEM\CurrentControlSet\services\LanmanServer\Parameters</code>的SMBv1 重启也没有效果，最后发现文件夹没有共享属性，开启service.msc里面的<code>Server</code>服务，然后开启目录的共享，linux mount挂载正常。</p>
]]></content>
      <categories>
        <category>win</category>
      </categories>
  </entry>
  <entry>
    <title>routines:ssl_choose_client_version:unsupported protocol</title>
    <url>/err0627/</url>
    <content><![CDATA[<p>centos连接SqlServer提示<code>routines:ssl_choose_client_version:unsupported protocol</code>，是应为openssl的版本过高，这里修改配置调整为支持V1。<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@47 ~]# find /etc/ -name "openssl*"</span><br><span class="line">/etc/pki/tls/openssl.cnf</span><br><span class="line">/etc/pki/openssl10.cnf</span><br><span class="line">/etc/pki/ca-trust/extracted/openssl</span><br><span class="line">/etc/crypto-policies/back-ends/openssl.config</span><br><span class="line">/etc/crypto-policies/back-ends/opensslcnf.config</span><br><span class="line">[root@47 ~]# vim  /etc/pki/tls/openssl.cnf</span><br><span class="line">----------------------------------------------------</span><br><span class="line"><span class="meta">#</span><span class="bash">这里有引用</span></span><br><span class="line">.include /etc/crypto-policies/back-ends/opensslcnf.config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@47 ~]# vim   /etc/crypto-policies/back-ends/opensslcnf.config</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">CipherString = @SECLEVEL=2:kEECDH:kRSA:kEDH:kPSK:kDHEPSK:kECDHEPSK:-aDSS:-3DES:!DES:!RC4:!RC2:!IDEA:-SEED:!eNULL:!aNULL:!MD5:-SHA384:-CAMELLIA:-ARIA:-AESCCM8 </span><br><span class="line">Ciphersuites = TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_SHA256</span><br><span class="line">TLS.MinProtocol = TLSv1.2</span><br><span class="line">TLS.MaxProtocol = TLSv1.3</span><br><span class="line">DTLS.MinProtocol = DTLSv1.2</span><br><span class="line">DTLS.MaxProtocol = DTLSv1.2</span><br><span class="line">SignatureAlgorithms = ECDSA+SHA256:ECDSA+SHA384:ECDSA+SHA512:ed25519:ed448:rsa_pss_pss_sha256:rsa_pss_rsae_sha256:rsa_pss_pss_sha384:rsa_pss_rsae_sha384:rsa_pss_pss_sha512:rsa_pss_rsae_sha512:RSA+SHA256:RSA+SHA384:RSA+SHA512:ECDSA+SHA224:RSA+SHA224:ECDSA+SHA1:RSA+SHA1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">这里将MinProtocol修改为V1</span></span><br><span class="line">TLS.MinProtocol = TLSv1</span><br><span class="line">DTLS.MinProtocol = DTLSv1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>php请求https502</title>
    <url>/err0705/</url>
    <content><![CDATA[<p>Alibaba Cloud 3自带OpenSSL 1.1.1k，php 5.6提示openssl异常，编译低版本调用发现php自带curl插件不能请求https返回502<a id="more"></a>，nginx error 提示<code>[error] 79425#0: *2 recv() failed (104: Unknown error) while reading response header from upstream</code>，系统日志提示<code>php[230717]: segfault at 7f8c642c0d60 ip 00007f8c642c0d60 sp 00007ffc5ba75878 error 15 in libssl.so.1.1.1k[7f8c642b9000+9000]</code>，解决方案如下，编译php不进行<code>--with-openssl</code>和<code>--with-curl</code>的编译，然后编译低版本的openssl，在编译系统curl，在编译php的curl模块，history记录如下。</p>
<pre><code class="shell"> 1  yum install -y epel-release
 2  yum install -y mtr iftop rsync telnet lrzsz
 3  systemctl disable firewalld
 4  systemctl stop firewalld
 5  service rpcbind stop
 6  systemctl disable  rpcbind.service
 7  service postfix stop
 8  systemctl disable  postfix.service
 9  systemctl stop  systemd-resolved
10  systemctl disable  systemd-resolved
11  systemctl stop rpcbind.socket
12  systemctl stop rpcbind
13  systemctl disable  rpcbind
14  systemctl disable  rpcbind.socket
15  systemctl stop  nfs-server.service
16  systemctl disable  nfs-server.service
17  netstat -lnpt
18  cd /usr/local/src
19  rz
20  tar -zxvf openssl1_97fd0dc5b78942.gz
21  cd  openssl-1.0.2s
22  ./config shared --openssldir=/usr/local/openssl-1.0.2s --prefix=/usr/local/openssl-1.0.2s
23  echo   $?
24  make  -j  2
25  make  install  
26  echo   $?
27  yum   remove   openssl   -y
28  ln -s  /usr/local/openssl-1.0.2s/lib/libssl.so.1.0.0   /usr/lib64/libssl.so.1.0.0
29  ln -s  /usr/local/openssl-1.0.2s/lib/libcrypto.so.1.0.0 /usr/lib64/libcrypto.so.1.0.0
30  ln -s  /usr/local/openssl-1.0.2s/bin/openssl /usr/bin/openssl
31  ln -s  /usr/local/openssl-1.0.2s/include/openssl   /usr/include/openssl
32  ln -s  /usr/local/openssl-1.0.2s/lib/libssl.so   /usr/lib/libssl.so
33  echo "PATH=$PATH:/usr/local/openssl-1.0.2s/bin"  &gt;&gt; /etc/profile
34  vim   /etc/ld.so.conf
35  ldconfig -v
36  ll  /usr/lib64/
37  openssl version
38  cd /usr/local/src/
39  mv /home/php-5.6.9.tar.gz 
40  mv /home/php-5.6.9.tar.gz    ./
41  ls
42  tar   -zxvf php-5.6.9.tar.gz 
43  yum install -y libxml2  libxml2-devel bzip2 bzip2-devel curl-devel libjpeg-devel libpng-devel freetype-devel libicu-devel gcc-c++ libxslt libxslt-devel  pcre-devel
44  cd  php-5.6.9/
45  ./configure  --prefix=/usr/local/php --with-mhash  --with-config-file-path=/usr/local/php/etc --disable-short-tags --enable-fpm --with-fpm-user=www --with-fpm-group=www --enable-xml --with-libxml-dir --enable-bcmath --enable-calendar --enable-intl --enable-mbstring --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-zip --enable-mbregex --enable-mysqlnd --enable-mysqlnd-compression-support --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-gd --enable-ftp  --with-xsl --with-iconv --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --enable-sysvsem --enable-inline-optimization --with-xmlrpc --disable-debug --with-pcre-regex --with-sqlite3 --with-bz2 --enable-exif --with-zlib-dir --enable-opcache --with-gettext
46  echo $?
47  make -j  2
48  make install
49  cd /usr/local/src/
50  wget https://curl.haxx.se/download/curl-7.65.3.tar.gz
51  tar   -xf  curl-7.65.3.tar.gz
52  cd  curl-7.65.3/
53  ./configure --prefix=/usr/local/curl --with-ssl=/usr/local/openssl-1.0.2s
54  echo $?
55  make  -j  2
56  echo $?
57  make  install 
58  /usr/local/curl/bin/curl  --version
59  cd  /usr/local/src/php-5.6.9/ext/curl/
60  /usr/local/php/bin/phpize 
61   ./configure --with-php-config=/usr/local/php/bin/php-config --with-curl=/usr/local/curl
62  echo   $?
63  make  
64  echo   $?
65  make  install 
66  cd  /usr/local/php/etc/
67  ls
68  vim   php-fpm.conf
69  mkdir   php-fpm.d
70  vim    php-fpm.d/www.conf
71  vim   php.ini
72  vim   /etc/init.d/php-fpm
73  chmod +x   /etc/init.d/php-fpm 
74  cd 
75  vim   /etc/profile.d/php.sh 
76  source /etc/profile
77  cd 
78  vim   /etc/profile
79  vim   /etc/profile.d/php.sh 
80  source /etc/profile.d/php.sh 
81  php   -m
82  vim  tet.php
83  php  tet.php 
84  netstat -lnpt
85  /etc/init.d/php-fpm start 
86  useradd -M -s /sbin/nologin www
87  /etc/init.d/php-fpm start 
88  netstat -lnpt
89  php  tet.php 

</code></pre>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>无法请求ECS端口</title>
    <url>/err0714/</url>
    <content><![CDATA[<p>办公室服务器无法请求固定ECS端口，ping正常，请求其他ECS正常<a id="more"></a>，最近办公室Jenkins服务器无法推送文件到某一台服务器，ping正常，mtr正常，telnet端口异常，阿里云云盾已开放白名单，安全组已经开放端口，防火墙已经允许，selinux已经关闭，最后抓包发现syn没有服务端的回报，咨询工单，查看<a href="https://help.aliyun.com/knowledge_detail/41334.html" target="_blank" rel="noopener">文档</a>，发现客户端是NAT模式的网络，远端服务器看到来自不同客户端的源IP相同，但NAT前每一台客户端的时间可能会有偏差，报文中的Timestamp就不是递增的情况。即视为无效，相应的数据包会被丢弃。意思就是同一个源IP来连接同一个目的端口的数据包时间戳必须是递增的。解决方法如下，在服务端修改内核参数。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/sysctl.conf</span><br><span class="line">----------------</span><br><span class="line">net.ipv4.tcp_tw_recycle=0</span><br><span class="line">net.ipv4.tcp_timestamps=0</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>docker pull 异常</title>
    <url>/err1020/</url>
    <content><![CDATA[<p>docker pull出现<code>error pulling image configuration</code><a id="more"></a>，详细如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost elk]# docker pull docker.elastic.co/beats/filebeat:7.4.2</span><br><span class="line">7.4.2: Pulling from beats/filebeat</span><br><span class="line">b38629870fdb: Pulling fs layer </span><br><span class="line">75be05ffe35e: Pulling fs layer </span><br><span class="line">dffd1d7cfaa8: Pulling fs layer </span><br><span class="line">5bbe50c368b7: Waiting </span><br><span class="line">808d161a92e9: Waiting </span><br><span class="line">92b6ae535ea5: Waiting </span><br><span class="line">31026370e7c4: Waiting </span><br><span class="line">error pulling image configuration: Get https://d2iks1dkcwqcbx.cloudfront.net/docker/registry/v2/blobs/sha256/bd/bdd5a76d3891056571d32567b3576d04f3bdd626a66c80cab8777108b09c6ca0/data?Expires=1666174087&amp;Signature=oMbFkL~ISUeikYvBk-Jt9rE0ewJTuPI3NfSgu6fSIituoNVLdVUd2-CL~YsZ2OIlXqheyXYHWTDuee5mgugpoHoeg89fXJ51hskxwykTR3m-U5OD5Ktn-cXjtUD9XJQIfspInCnhy~COHZeNtq0dvDcA0SCUatsV0WVANHDq9wr0nSMycas2cCq3BC37RI6N4NuGmBgreToP4aCl3VP7C~GKJZXDK9ujQ2CJImv2iNVfvfD3OXfsWrcYWJ8oVGKfj6E33RUP-Ywb0qBBBj6mN3I4-XRB6fYfG2nOIuV48Fu6lW-rVv1QtRaGkiEvkcYFIRbLWD0H7URNhh4CEC2Oag__&amp;Key-Pair-Id=APKAIVAVKHB6SNHJAJQQ: dial tcp: lookup d2iks1dkcwqcbx.cloudfront.net on 114.114.114.114:53: read udp 192.168.0.144:57238-&gt;114.114.114.114:53: i/o timeout</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">添加DNS 8.8.8.8</span></span><br><span class="line">[root@localhost elk]# vim /etc/resolv.conf</span><br><span class="line">------------------------------------------</span><br><span class="line"><span class="meta">#</span><span class="bash"> Generated by NetworkManager</span></span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重启docker 然后在pull 恢复正常</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
  </entry>
  <entry>
    <title>gitlab升级后CI/CD报500</title>
    <url>/err1024/</url>
    <content><![CDATA[<p>跨版本升级完成后发现项目的CI/ CD页面打不开了，提示500错误，CI/ CD不能运行。<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gitlab-rails dbconsole</span><br><span class="line"><span class="meta">#</span><span class="bash"> 要等一会才响应  apidb是项目名称</span></span><br><span class="line">SELECT name, runners_token_encrypted FROM Projects WHERE Name = 'apidb';</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">   name    |             runners_token_encrypted</span><br><span class="line">-----------+--------------------------------------------------</span><br><span class="line"> apidb     | x1it3fYVm1w91p6tL3utv9ncnekZ1Js/Sj3Kgl9V0h2Z55IA</span><br><span class="line"> apidb     | 8Fiq7/4HvVl67sqvd1mo59LF6I9DqPxO6a3BPEHd1ZdRXx+3</span><br><span class="line">(2 rows)</span><br><span class="line"></span><br><span class="line">update Projects set runners_token_encrypted = null where Name = 'apidb';</span><br><span class="line">   name    |             runners_token_encrypted</span><br><span class="line">-----------+--------------------------------------------------</span><br><span class="line"> apidb     |</span><br></pre></td></tr></table></figure>
<p>刷新页面CI/ CD就可以用了。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ls提示输入输出错误</title>
    <url>/err1030/</url>
    <content><![CDATA[<p>ls 提示:无法打开目录.: 输入/输出错误<a id="more"></a>，可能是磁盘老化导致坏道，异常操作导致文件node错乱等。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ls  /dev/mapper/centos-home</span><br><span class="line">ls: 无法打开目录.: 输入/输出错误</span><br><span class="line">[root@localhost ~]# mount  /dev/mapper/centos-home /home</span><br><span class="line">mount: 将 /dev/mapper/centos-home 挂载到 /home 失败: 结构需要清理</span><br><span class="line">[root@localhost ~]# df -TH</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs   34G     0   34G    0% /dev</span><br><span class="line">tmpfs                   tmpfs      34G     0   34G    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs      34G  9.4M   34G    1% /run</span><br><span class="line">tmpfs                   tmpfs      34G     0   34G    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        54G  1.5G   53G    3% /</span><br><span class="line">/dev/sda1               xfs       1.1G  157M  908M   15% /boot</span><br><span class="line">/dev/mapper/centos-home xfs       1.1T  108G  903G   11% /home</span><br><span class="line">tmpfs                   tmpfs     6.8G     0  6.8G    0% /run/user/0</span><br><span class="line">[root@localhost ~]# umount  /dev/mapper/centos-home</span><br><span class="line">[root@localhost ~]# xfs_repair /dev/mapper/centos-home</span><br><span class="line">[root@localhost ~]# reboot</span><br></pre></td></tr></table></figure>
<p>取消挂载，用xfs_repair修复（这里是xfs类型的），重启机器，然后在挂载，修复成功。<br>ps：过了几天又出现这个问题，更换硬盘彻底解决</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>nginx反向代理接口403</title>
    <url>/err1113/</url>
    <content><![CDATA[<p>nginx 反向代理接口显示403<a id="more"></a>，一个特定的url需要代理到后端的接口上面，我写了个常规的配置，结果显示403 Forbidden.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        listen      443;</span><br><span class="line">        server_name xxxxxx.com.cn;</span><br><span class="line">        access_log  /usr/local/nginx/logs/xxxxxx.com.cn.access.log;</span><br><span class="line">        error_log   /usr/local/nginx/logs/xxxxxx.com.cn.error.log;</span><br><span class="line">        ssl_certificate /usr/local/nginx/ssl/xxxxxx.com.cn.pem;</span><br><span class="line">        ssl_certificate_key /usr/local/nginx/ssl/xxxxxx.com.cn.key;</span><br><span class="line">        root /data/static_gg;</span><br><span class="line">        index  index.html;</span><br><span class="line">        location ^~ /api/ &#123;</span><br><span class="line">                proxy_pass http://test.com.cn/;</span><br><span class="line">                proxy_set_header Host   $host;</span><br><span class="line">                proxy_set_header   X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>最后将<code>proxy_set_header</code>的<code>$host</code>改为<code>$proxy_host</code>解决问题，<code>proxy_set_header Host $host</code>这一行的作用是把原http请求的Header中的Host字段也放到转发的请求里。改成<code>$proxy_host</code>将http请求的Header中的Host字段改为被代理服务的ip和端口号。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>vmware-tools 安装异常</title>
    <url>/err1230/</url>
    <content><![CDATA[<p>vmware-tools 安装出现内核异常，升级<code>kernel-devel</code>无效<a id="more"></a>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# cat /etc/redhat-release </span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 插件安装</span></span><br><span class="line">yum -y install perl gcc gcc-c++ make cmake kernel kernel-headers kernel-devel net-tools</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vmware-tools异常</span></span><br><span class="line">Enter the path to the kernel header files for the 3.10.0-1062.el7.x86_64 </span><br><span class="line">kernel? </span><br><span class="line"></span><br><span class="line">The path "" is not a valid path to the 3.10.0-1062.el7.x86_64 kernel headers.</span><br><span class="line">Would you like to change it? [yes]</span><br></pre></td></tr></table></figure>
<p>最后发现<code>yum -y install kernel-devel</code>无效，是内核<code>version.h</code>文件位置的问题，因为3.x版本的内核version.h的路径变了，导致vmtools无法找到，所以抛异常了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-1160.49.1.el7.x86_64&#x2F;include&#x2F;generated&#x2F;uapi&#x2F;linux&#x2F;version.h &#x2F;usr&#x2F;src&#x2F;kernels&#x2F;3.10.0-1160.49.1.el7.x86_64&#x2F;include&#x2F;linux&#x2F;version.h</span><br><span class="line"></span><br><span class="line"># 调整完文件共享后</span><br><span class="line">yum install open-vm-tools -y</span><br><span class="line"></span><br><span class="line">[root@localhost vmware-tools-distrib]# vmware-hgfsclient</span><br><span class="line">F</span><br><span class="line">[root@localhost ~]# vmhgfs-fuse .host:&#x2F;F &#x2F;data&#x2F;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>rm提示Argument list too long</title>
    <url>/err1231/</url>
    <content><![CDATA[<p>删除文件提示<code>-bash: /bin/rm: Argument list too long</code> <a id="more"></a>，这个是由于目录文件数过多，需要使用分割删除</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls | xargs -n 10 rm -fr ls</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -n  每十个为一组，以空格为切割符</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>python检测ES集群状态</title>
    <url>/es/</url>
    <content><![CDATA[<p>elasticsearch 8.5.2查询集群状态，版本8和之前的有区别，默认添加证书 <a id="more"></a>，如下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">from elasticsearch import Elasticsearch</span><br><span class="line">import requests</span><br><span class="line">import redis</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ES绿黄检测</span></span><br><span class="line">def GetES():</span><br><span class="line">    es = Elasticsearch(</span><br><span class="line">        "https://192.168.1.100:9200",</span><br><span class="line">        ca_certs="/home/elsearch/certs/elasticsearch-ca.pem",</span><br><span class="line">        basic_auth=('elastic','ES密码'))</span><br><span class="line">    es_health=es.cluster.health()</span><br><span class="line">    if es_health["status"] == "green":</span><br><span class="line">        result_dic = &#123;"sertype": "es_status", "host": '192.168.122.211', "port": '9200', "status": 1&#125;</span><br><span class="line">    else:</span><br><span class="line">        result_dic = &#123;"sertype": "es_status", "host": '192.168.122.211', "port": '9200', "status": 2&#125;</span><br><span class="line"></span><br><span class="line">    return result_dic</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 钉钉通知</span></span><br><span class="line">def DingMessage(tex):</span><br><span class="line">    webhook = "钉钉的webhook"</span><br><span class="line"></span><br><span class="line">    header = &#123;</span><br><span class="line">        "Content-Type": "application/json",</span><br><span class="line">        "Charset": "UTF-8"</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    message = &#123;</span><br><span class="line">        "msgtype": "markdown",</span><br><span class="line">        "markdown": &#123;</span><br><span class="line">            "title": "端口检测",</span><br><span class="line">            "text": tex</span><br><span class="line">        &#125;,</span><br><span class="line">        "at": &#123;</span><br><span class="line">            "atMobiles": ["运维电话"],</span><br><span class="line">            "isAtAll": False</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    message_json = json.dumps(message)</span><br><span class="line">    requests.post(url=webhook, data=message_json, headers=header)</span><br><span class="line"></span><br><span class="line">def RedisSet(result_dic):</span><br><span class="line">    pool = redis.ConnectionPool(host='redis地址', port=6379, db=2, password='redis密码')</span><br><span class="line">    r = redis.StrictRedis(connection_pool=pool)</span><br><span class="line">    dingding_warning = r.lrange("dingding",0,-1)</span><br><span class="line"></span><br><span class="line">    rkey = "&#123;&#125;-&#123;&#125;-&#123;&#125;".format(result_dic['sertype'], result_dic['host'], result_dic['port'])</span><br><span class="line">    rvalue = result_dic['status']</span><br><span class="line"></span><br><span class="line">    # 结果为正常的更新redis</span><br><span class="line">    if rvalue == 1:</span><br><span class="line">        r.set(rkey, rvalue, ex=600)</span><br><span class="line"></span><br><span class="line">    # 查找600秒没有记录的报警</span><br><span class="line">    if r.exists(rkey) == 0:</span><br><span class="line">        tex = "##### 端口检测异常 \n 服务:&#123;&#125; \n ip:&#123;&#125; \n 端口: &#123;&#125;".format(result_dic['sertype'], result_dic['host'], result_dic['port'])</span><br><span class="line">        DingMessage(tex)</span><br><span class="line">        r.set(rkey, rvalue, ex=900)</span><br><span class="line">        if rkey not in dingding_warning:</span><br><span class="line">            r.rpush("dingding",rkey)</span><br><span class="line"></span><br><span class="line">    if  r.llen("dingding") != 0:</span><br><span class="line">        for  i  in dingding_warning:</span><br><span class="line">            if r.get(i) == "1":</span><br><span class="line">                tex = "##### 端口检测恢复 \n 服务:&#123;&#125; ".format(i)</span><br><span class="line">                DingMessage(tex)</span><br><span class="line">                r.lrem("dingding", 0,i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__=="__main__":</span><br><span class="line">    result_dic=GetES()</span><br><span class="line">    RedisSet(result_dic)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>expect交互</title>
    <url>/expect/</url>
    <content><![CDATA[<p>由于线上服务器是非root账号登陆的，需要在root用户下启动一个服务，这里采用expect来处理<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install expect</span><br><span class="line"></span><br><span class="line">vim test.sh</span><br><span class="line">-----------</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh </span></span><br><span class="line">expect -c " </span><br><span class="line">spawn su - root </span><br><span class="line">expect \"Password:\" </span><br><span class="line">send \"cens#!12221\r\"</span><br><span class="line">send \"chmod +x /data/www/$&#123;1&#125;/man\r\"</span><br><span class="line">send \"cd /data/www/$&#123;1&#125;\r\"</span><br><span class="line">send \"./man restart\r\"</span><br><span class="line">expect eof</span><br><span class="line">"</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>常用的exporter</title>
    <url>/exporter/</url>
    <content><![CDATA[<p>常用的普罗米修斯客户端<a id="more"></a></p>
<h4 id="zk"><a href="#zk" class="headerlink" title="zk"></a>zk</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/carlpett/zookeeper_exporter/releases/download/v1.1.0/zookeeper_exporter</span><br><span class="line"></span><br><span class="line">chmod +x  zookeeper_exporter</span><br><span class="line">mv zookeeper_exporter /usr/local/bin/</span><br><span class="line"></span><br><span class="line">vim  /usr/lib/systemd/system/zook_exporter.service</span><br><span class="line">--------------------------------------------------</span><br><span class="line">[Unit]</span><br><span class="line">Description=zook_exporter</span><br><span class="line">Documentation=https://github.com/carlpett/zookeeper_exporter</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/bin/zookeeper_exporter</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start zook_exporter.service</span><br><span class="line">systemctl enable zook_exporter.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">本机查看是否开启了9141端口，也可以用下面的命令验证</span></span><br><span class="line">curl localhost:9141/metrics</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">开启zk的4字命令</span></span><br><span class="line">yum  install  -y  nc</span><br><span class="line">echo "4lw.commands.whitelist=*"  &gt;&gt; /home/zk-3-5-8/conf/zoo.cfg</span><br><span class="line"></span><br><span class="line">/home/zk-3-5-8/bin/zkServer.sh restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试</span></span><br><span class="line">echo mntr | nc 127.0.0.1 2181</span><br></pre></td></tr></table></figure>

<h4 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz</span><br><span class="line">tar xvf mysqld_exporter-0.12.1.linux-amd64.tar.gz  -C /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql的监控账号</span></span><br><span class="line">vim /usr/local/mysqld_exporter-0.12.1.linux-amd64/conf/.192.168.1.30_3306.cnf</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">[client]</span><br><span class="line">user=root</span><br><span class="line">password=root</span><br><span class="line">host=192.168.1.30</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">vim  /usr/lib/systemd/system/mysqld1_exporter.service</span><br><span class="line">------------------------------------------------</span><br><span class="line">[Unit]</span><br><span class="line">Description=mysqld1_exporter</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/mysqld_exporter-0.12.1.linux-amd64/mysqld_exporter --web.listen-address=192.168.1.26:9330 --config.my-cnf=/usr/local/mysqld_exporter-0.12.1.linux-amd64/conf/.192.168.1.30_3306.cnf --collect.auto_increment.columns --collect.binlog_size --collect.global_status --collect.global_variables --collect.info_schema.innodb_metrics --collect.info_schema.innodb_cmp --collect.info_schema.innodb_cmpmem --collect.info_schema.processlist --collect.info_schema.query_response_time --collect.info_schema.tables --collect.info_schema.tablestats --collect.info_schema.userstats --collect.perf_schema.eventswaits --collect.perf_schema.file_events --collect.perf_schema.indexiowaits --collect.perf_schema.tableiowaits --collect.perf_schema.tablelocks --collect.slave_status</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">这里的192.168.1.26:9330 是本机开放9330端口 给prometheus提供数据</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start mysqld1_exporter.service</span><br><span class="line">systemctl enable mysqld1_exporter.service</span><br></pre></td></tr></table></figure>

<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><img src="/exporter/001.jpg" class>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat  requirements.txt</span><br><span class="line">---------------------</span><br><span class="line">prometheus_client==0.7.1</span><br><span class="line">flask==1.1.1</span><br><span class="line"></span><br><span class="line">curl http://192.168.122.126:31672/metrics</span><br><span class="line"><span class="meta">#</span><span class="bash"> HELP server_port_up Api response stats is:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> TYPE server_port_up gauge</span></span><br><span class="line">server_port_up&#123;host="192.168.122.129",port="6379",sertype="redis_129"&#125; 1.0</span><br><span class="line">server_port_up&#123;host="192.168.122.130",port="3307",sertype="mysql_ck"&#125; 1.0</span><br><span class="line">server_port_up&#123;host="192.168.122.130",port="3306",sertype="mysql_ck"&#125; 1.0</span><br><span class="line">server_port_up&#123;host="127.0.0.1",port="9200",sertype="es_status"&#125; 0.0</span><br><span class="line">server_port_up&#123;host="192.168.122.131",port="6379",sertype="redis_131"&#125; 1.0</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> prometheus_client</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> prometheus_client <span class="keyword">import</span> Gauge</span><br><span class="line"><span class="keyword">from</span> prometheus_client.core <span class="keyword">import</span> CollectorRegistry</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Response, Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口列表</span></span><br><span class="line">Getconfigdic=&#123;</span><br><span class="line">    <span class="string">'redis_131'</span>:&#123;<span class="string">'host'</span>:[<span class="string">'192.168.122.131'</span>],<span class="string">'port'</span>:[<span class="number">6379</span>]&#125;,</span><br><span class="line">    <span class="string">'redis_129'</span>:&#123;<span class="string">'host'</span>:[<span class="string">'192.168.122.129'</span>],<span class="string">'port'</span>:[<span class="number">6379</span>]&#125;,</span><br><span class="line">    <span class="string">'mysql_ck'</span>:&#123;<span class="string">'host'</span>:[<span class="string">'192.168.122.130'</span>],<span class="string">'port'</span>:[<span class="number">3306</span>,<span class="number">3307</span>]&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ES 红绿检测</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetES</span><span class="params">()</span>:</span></span><br><span class="line">    es_url=<span class="string">"http://127.0.0.1:9200/_cluster/health?pretty"</span></span><br><span class="line">    <span class="comment"># 登录之后获取Authorization</span></span><br><span class="line">    token_string=<span class="string">"ZWxhc3RpYzpib29rYW4tZXMtY2x1c3Rlcg=="</span></span><br><span class="line">    headers = &#123;<span class="string">"Authorization"</span>:<span class="string">"Basic &#123;&#125;"</span>.format(token_string)&#125;</span><br><span class="line">    r = requests.get(es_url, headers=headers)</span><br><span class="line">    resp = json.loads(r.text)</span><br><span class="line">    <span class="keyword">if</span> resp[<span class="string">"status"</span>] == <span class="string">"green"</span>:</span><br><span class="line">        result_dic = &#123;<span class="string">"sertype"</span>: <span class="string">"es_status"</span>, <span class="string">"host"</span>: <span class="string">'127.0.0.1'</span>, <span class="string">"port"</span>: <span class="string">'9200'</span>, <span class="string">"status"</span>: <span class="number">0</span>&#125;</span><br><span class="line">    <span class="keyword">elif</span> resp[<span class="string">"status"</span>] == <span class="string">"yellow"</span>:</span><br><span class="line">        result_dic = &#123;<span class="string">"sertype"</span>: <span class="string">"es_status"</span>, <span class="string">"host"</span>: <span class="string">'127.0.0.1'</span>, <span class="string">"port"</span>: <span class="string">'9200'</span>, <span class="string">"status"</span>: <span class="number">1</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result_dic = &#123;<span class="string">"sertype"</span>: <span class="string">"es_status"</span>, <span class="string">"host"</span>: <span class="string">'127.0.0.1'</span>, <span class="string">"port"</span>: <span class="string">'9200'</span>, <span class="string">"status"</span>: <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result_dic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查端口是否存在</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exploreport</span><span class="params">(sertype,ip,port)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        tel = socket.socket()</span><br><span class="line">        tel.connect((ip, int(port)))</span><br><span class="line">        socket.setdefaulttimeout(<span class="number">0.5</span>)</span><br><span class="line">        result_dic = &#123;<span class="string">"sertype"</span>: sertype, <span class="string">"host"</span>: ip, <span class="string">"port"</span>: str(port), <span class="string">"status"</span>: <span class="number">1</span>&#125;</span><br><span class="line">        <span class="keyword">return</span> result_dic</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        result_dic = &#123;<span class="string">"sertype"</span>: sertype, <span class="string">"host"</span>: ip, <span class="string">"port"</span>: str(port), <span class="string">"status"</span>: <span class="number">0</span>&#125;</span><br><span class="line">        <span class="keyword">return</span> result_dic</span><br><span class="line"><span class="comment"># 检测</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Checkport</span><span class="params">()</span>:</span></span><br><span class="line">    sdic = Getconfigdic</span><br><span class="line">    result_list = []</span><br><span class="line">    <span class="keyword">for</span> sertype <span class="keyword">in</span> sdic.keys():</span><br><span class="line">        iplist = sdic.get(sertype).get(<span class="string">"host"</span>)</span><br><span class="line">        portlist = sdic.get(sertype).get(<span class="string">"port"</span>)</span><br><span class="line">        <span class="keyword">for</span> ip <span class="keyword">in</span> iplist:</span><br><span class="line">            <span class="keyword">for</span> port <span class="keyword">in</span> portlist:</span><br><span class="line">                result_dic = Exploreport(sertype, ip, port)</span><br><span class="line">                result_list.append(result_dic)</span><br><span class="line">    es_status = GetES()</span><br><span class="line">    result_list.append(es_status)</span><br><span class="line">    <span class="keyword">return</span> result_list</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/metrics")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ApiResponse</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Checkport() 取出来的数据是这样的</span></span><br><span class="line"><span class="string">    checkport = [&#123;"sertype":"zookeeper","host": "192.168.1.22", "port": "2181", "status": 0&#125;,</span></span><br><span class="line"><span class="string">                  &#123;"sertype":"zookeeper","host": "192.168.1.23", "port": "2181", "status": 1&#125;]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    checkport = Checkport()</span><br><span class="line">    <span class="comment"># 定义metrics仓库，存放多条数据</span></span><br><span class="line">    REGISTRY = CollectorRegistry(auto_describe=<span class="literal">False</span>)</span><br><span class="line">    muxStatus = Gauge(<span class="string">"server_port_up"</span>, <span class="string">"Api response stats is:"</span>, [<span class="string">"sertype"</span>,<span class="string">"host"</span>, <span class="string">"port"</span>], registry=REGISTRY)</span><br><span class="line">    <span class="keyword">for</span> datas <span class="keyword">in</span> checkport:</span><br><span class="line">        sertype = <span class="string">""</span>.join(datas.get(<span class="string">"sertype"</span>))</span><br><span class="line">        host = <span class="string">""</span>.join(datas.get(<span class="string">"host"</span>))</span><br><span class="line">        port = <span class="string">""</span>.join(datas.get(<span class="string">"port"</span>))</span><br><span class="line">        status = datas.get(<span class="string">"status"</span>)</span><br><span class="line">        muxStatus.labels(sertype,host, port).set(status)</span><br><span class="line">    <span class="keyword">return</span> Response(prometheus_client.generate_latest(REGISTRY),</span><br><span class="line">                    mimetype=<span class="string">"text/plain"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(host=<span class="string">"192.168.122.126"</span>, port=<span class="number">31672</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
  </entry>
  <entry>
    <title>fdisk 对硬盘扩容</title>
    <url>/fdisk/</url>
    <content><![CDATA[<p>之前有一块200G硬盘只分100G，现在容量不够用了，把之前还没分配的空间分配到<code>data</code>目录。<a id="more"></a>由于是Jenkins服务器我先备份了/data下面的数据。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ]# df -h</span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                 7.8G     0  7.8G    0% /dev</span><br><span class="line">tmpfs                    7.8G     0  7.8G    0% /dev/shm</span><br><span class="line">tmpfs                    7.8G  540M  7.3G    7% /run</span><br><span class="line">tmpfs                    7.8G     0  7.8G    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   13G  9.7G  2.9G   78% /</span><br><span class="line">/dev/sdb1                 99G   87G  6.6G   94% /data</span><br><span class="line">/dev/sda1               1014M  180M  835M   18% /boot</span><br><span class="line">tmpfs                    1.6G     0  1.6G    0% /run/user/0</span><br><span class="line"></span><br><span class="line">[root@localhost ]# netstat -lnpt</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1702/sshd           </span><br><span class="line">tcp6       0      0 :::8081                 :::*                    LISTEN      2427/java           </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1702/sshd           </span><br><span class="line"></span><br><span class="line">[root@localhost ]# /etc/init.d/jenkins stop  </span><br><span class="line">Stopping jenkins (via systemctl):                          [  确定  ]</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# fdisk -l</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：16.1 GB, 16106127360 字节，31457280 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0000e5ef</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    31457279    14679040   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：214.7 GB, 214748364800 字节，419430400 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xfc5bdc2d</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048   209715199   104856576   83  Linux    #这里显示200G空间但是只用了100G 只有一个sdb1</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-root：13.4 GB, 13417578496 字节，26206208 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-swap：1610 MB, 1610612736 字节，3145728 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">开始处理，先删除然后在新建 这里需要记住起始扇区 必须和之前的一致 </span></span><br><span class="line">[root@localhost ~]# fdisk /dev/sdb</span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p		#查看磁盘扇区</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：214.7 GB, 214748364800 字节，419430400 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xfc5bdc2d</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048   209715199   104856576   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：d		#删除</span><br><span class="line">已选择分区 1</span><br><span class="line">分区 1 已删除</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n		#新建</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p			#主分区</span><br><span class="line">分区号 (1-4，默认 1)：1</span><br><span class="line">起始 扇区 (2048-419430399，默认为 2048)：2048		#起始扇区</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-419430399，默认为 419430399)：</span><br><span class="line">将使用默认值 419430399</span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 200 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：214.7 GB, 214748364800 字节，419430400 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xfc5bdc2d</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048   419430399   209714176   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line"></span><br><span class="line">WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.</span><br><span class="line">The kernel still uses the old table. The new table will be used at</span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)</span><br><span class="line">正在同步磁盘。</span><br><span class="line">[root@localhost ~]# partprobe		#刷新分区表</span><br><span class="line">[root@localhost ~]# fdisk -l</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：16.1 GB, 16106127360 字节，31457280 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0000e5ef</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    31457279    14679040   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：214.7 GB, 214748364800 字节，419430400 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xfc5bdc2d</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048   419430399   209714176   83  Linux</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-root：13.4 GB, 13417578496 字节，26206208 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-swap：1610 MB, 1610612736 字节，3145728 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# resize2fs /dev/sdb1		#调整分区大小</span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem at /dev/sdb1 is mounted on /data; on-line resizing required</span><br><span class="line">old_desc_blocks = 13, new_desc_blocks = 25</span><br><span class="line">The filesystem on /dev/sdb1 is now 52428544 blocks long.</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# df  -h</span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                 7.8G     0  7.8G    0% /dev</span><br><span class="line">tmpfs                    7.8G     0  7.8G    0% /dev/shm</span><br><span class="line">tmpfs                    7.8G  540M  7.3G    7% /run</span><br><span class="line">tmpfs                    7.8G     0  7.8G    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   13G  9.7G  2.9G   78% /</span><br><span class="line">/dev/sdb1                197G   87G  101G   47% /data</span><br><span class="line">/dev/sda1               1014M  180M  835M   18% /boot</span><br><span class="line">tmpfs                    1.6G     0  1.6G    0% /run/user/0</span><br><span class="line">[root@localhost ~]# ls  /data/</span><br><span class="line">applogs  docker_kiban  go  jenkins  jenkins_py  lost+found    workdir</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ffmpeg</title>
    <url>/ffmpeg/</url>
    <content><![CDATA[<p>centos7安装ffmpeg<a id="more"></a>，编译安装出现过各种异常错误，最后成功还是差一些参数，可以产考官网的<a href="https://trac.ffmpeg.org/wiki/CompilationGuide/Centos" target="_blank" rel="noopener">说明</a>，也可以产考这个<a href="https://github.com/hostsoft/ffmpegtoolkit/blob/master/function.sh" target="_blank" rel="noopener">GitHub</a>，开始我是编译安装然后出现异常谷歌搜索得不到解决，后来采用yum安装，解决大部分的问题，但是有一些库出现冲突，然后用调整了一下yum的编译参数，重新编译问题得到解决，过程如下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">编译异常略过</span></span><br><span class="line"><span class="meta">#</span><span class="bash">yum安装</span></span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm</span><br><span class="line">yum install ffmpeg ffmpeg-devel</span><br><span class="line">ffmpeg   -v</span><br><span class="line">-----------</span><br><span class="line">ffmpeg version 3.4.8 Copyright (c) 2000-2020 the FFmpeg developers</span><br><span class="line">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-44)</span><br><span class="line">  configuration: --prefix=/usr --bindir=/usr/bin --datadir=/usr/share/ffmpeg --docdir=/usr/share/doc/ffmpeg --incdir=/usr/include/ffmpeg --libdir=/usr/lib64 --mandir=/usr/share/man --arch=x86_64 --optflags='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic' --extra-ldflags='-Wl,-z,relro ' --extra-cflags=' ' --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libvo-amrwbenc --enable-version3 --enable-bzlib --disable-crystalhd --enable-fontconfig --enable-gcrypt  --enable-libass --enable-libbluray --enable-libcdio --enable-libdrm --enable-indev=jack --enable-libfreetype --enable-libfribidi --enable-libgsm --enable-libmp3lame --enable-nvenc --enable-openal --enable-opencl --enable-opengl --enable-libopenjpeg --enable-libopus --disable-encoder=libopus --enable-libpulse --enable-librsvg --enable-libsoxr --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libv4l2 --enable-libvidstab --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-libzvbi --enable-avfilter --enable-avresample --enable-libmodplug --enable-postproc --enable-pthreads --disable-static --enable-shared --enable-gpl --disable-debug --disable-stripping --shlibdir=/usr/lib64 --enable-libmfx --enable-runtime-cpudetect</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">由于之前编译失败过，在使用yum安装会造成ffmpeg与链接的版本不一致，这里出现了--<span class="built_in">enable</span>-libopus --<span class="built_in">disable</span>-encoder=libopus，opus完全无法使用，咨询过开发我们只需要固定的几个参数，然后去GitHub下载了一份3.4.8的版本，参考yum的编译参数进处理，最后完美解决</span></span><br><span class="line">tar -zxvf FFmpeg-n3.4.8.tar.gz</span><br><span class="line">cd   FFmpeg-n3.4.8</span><br><span class="line">PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --prefix=/usr --bindir=/usr/bin --datadir=/usr/share/ffmpeg --docdir=/usr/share/doc/ffmpeg --incdir=/usr/include/ffmpeg --libdir=/usr/lib64 --mandir=/usr/share/man --arch=x86_64 --optflags='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic' --extra-ldflags='-Wl,-z,relro ' --extra-cflags=' '  --enable-libopus  --enable-libvpx --enable-libvorbis  --enable-libfdk_aac</span><br><span class="line"></span><br><span class="line">make -j  4</span><br><span class="line">make install </span><br><span class="line"></span><br><span class="line">ffmpeg -v</span><br><span class="line">---------</span><br><span class="line">ffmpeg version 3.4.8 Copyright (c) 2000-2020 the FFmpeg developers</span><br><span class="line">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-44)</span><br><span class="line">  configuration: --prefix=/usr --bindir=/usr/bin --datadir=/usr/share/ffmpeg --docdir=/usr/share/doc/ffmpeg --incdir=/usr/include/ffmpeg --libdir=/usr/lib64 --mandir=/usr/share/man --arch=x86_64 --optflags='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic' --extra-ldflags='-Wl,-z,relro ' --extra-cflags=' ' --enable-libopus --enable-libvpx --enable-libvorbis --enable-libfdk_aac</span><br><span class="line">  libavutil      55. 78.100 / 55. 78.100</span><br><span class="line">  libavcodec     57.107.100 / 57.107.100</span><br><span class="line">  libavformat    57. 83.100 / 57. 83.100</span><br><span class="line">  libavdevice    57. 10.100 / 57. 10.100</span><br><span class="line">  libavfilter     6.107.100 /  6.107.100</span><br><span class="line">  libswscale      4.  8.100 /  4.  8.100</span><br><span class="line">  libswresample   2.  9.100 /  2.  9.100</span><br><span class="line">Missing argument for option 'v'.</span><br><span class="line">Error splitting the argument list: Invalid argument</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ls du 文件空洞</title>
    <url>/filesizs/</url>
    <content><![CDATA[<p><code>grep</code>出现<code>grep: memory exhausted</code>，<code>ls</code>与<code>du</code>查看的文件不一致<a id="more"></a>，今天有开发同学说grep关键字出现内存耗尽的问题，查看了一下文件信息，状态如下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@172.31.205.198 sync]# ll out.log</span><br><span class="line">-rw-r--r-- 1 root root 6518449440 Oct 27 08:52 out.log</span><br><span class="line">[root@172.31.205.198 sync]# du -sh out.log</span><br><span class="line">472K	out.log</span><br><span class="line">[root@172.31.205.198 sync]# grep err out.log</span><br><span class="line">grep: memory exhausted</span><br></pre></td></tr></table></figure>
<p>其实这里ls相当是逻辑上的文件大小，du是磁盘占用的空间大小，这里估计是出现了文件空洞，咨询了一下他日志文件的指向，他是直接使用&gt;来覆盖文件的，改成&gt;&gt;追加写入解决问题。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>gitlab跨版本升级12到13</title>
    <url>/gitlabup/</url>
    <content><![CDATA[<p>gitlab垮版本升级12.9到13.10<a id="more"></a>，升级路线如下12.9.3 —&gt; 12.10.14 —&gt; 13.0.14 —&gt; 13.1.11 —&gt; 13.5.4 —&gt; 13.10.3，先把安装包下载好<a href="https://packages.gitlab.com/gitlab/gitlab-ce" target="_blank" rel="noopener">下载地址</a>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/opt/gitlab/embedded/bin/psql --version</span><br><span class="line">---------------------------------------</span><br><span class="line">psql (PostgreSQL) 10.7</span><br><span class="line"></span><br><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line">gitlab-ctl stop nginx</span><br><span class="line"></span><br><span class="line">rpm -Uvh gitlab-ce-12.10.14-ce.0.el7.x86_64.rpm</span><br><span class="line">gitlab-ctl restart</span><br><span class="line"></span><br><span class="line">/opt/gitlab/embedded/bin/psql --version</span><br><span class="line">---------------------------------------</span><br><span class="line">psql (PostgreSQL) 11.7</span><br><span class="line"></span><br><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line">gitlab-ctl stop nginx</span><br><span class="line"></span><br><span class="line">rpm -Uvh gitlab-ce-13.0.14-ce.0.el7.x86_64.rpm</span><br><span class="line">gitlab-ctl restart</span><br><span class="line"></span><br><span class="line">cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">13.0.14</span><br><span class="line"></span><br><span class="line">gitlab-rake gitlab:check SANITIZE=true</span><br><span class="line"></span><br><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop puma</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line"></span><br><span class="line">rpm -Uvh gitlab-ce-13.1.11-ce.0.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">gitlab-rake gitlab:check SANITIZE=true</span><br><span class="line"></span><br><span class="line">gitlab-ctl stop puma</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line"></span><br><span class="line">rpm -Uvh gitlab-ce-13.5.4-ce.0.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">gitlab-rake gitlab:check SANITIZE=true</span><br><span class="line"></span><br><span class="line">gitlab-ctl stop puma</span><br><span class="line">gitlab-ctl stop sidekiq</span><br><span class="line"></span><br><span class="line">rpm -Uvh gitlab-ce-13.10.3-ce.0.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">/opt/gitlab/embedded/bin/psql --version</span><br><span class="line">---------------------------------------</span><br><span class="line">psql (PostgreSQL) 12.6</span><br><span class="line"></span><br><span class="line">cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">13.10.3</span><br><span class="line"></span><br><span class="line">gitlab-rake gitlab:check SANITIZE=true</span><br></pre></td></tr></table></figure>
<p>12升级到13会出现 unicorn 占用端口，puma 无法启动的问题，12版的 unicorn 组件被13版的 puma 取代，这里可以修改<code>/etc/gitlab/gitlab.rb</code> 里面的<code>puma[&#39;port&#39;]</code>，或者关闭puma，对比如下</p>
<table>
<thead>
<tr>
<th>unicorn</th>
<th>puma</th>
</tr>
</thead>
<tbody><tr>
<td>unicorn[‘enable’]</td>
<td>puma[‘enable’]</td>
</tr>
<tr>
<td>unicorn[‘worker_timeout’]</td>
<td>puma[‘worker_timeout’]</td>
</tr>
<tr>
<td>unicorn[‘worker_processes’]</td>
<td>puma[‘worker_processes’]</td>
</tr>
<tr>
<td>不适用</td>
<td>puma[‘ha’]</td>
</tr>
<tr>
<td>不适用</td>
<td>puma[‘min_threads’]</td>
</tr>
<tr>
<td>不适用</td>
<td>puma[‘max_threads’]</td>
</tr>
<tr>
<td>unicorn[‘listen’]</td>
<td>puma[‘listen’]</td>
</tr>
<tr>
<td>unicorn[‘port’]</td>
<td>puma[‘port’]</td>
</tr>
<tr>
<td>unicorn[‘socket’]</td>
<td>puma[‘socket’]</td>
</tr>
<tr>
<td>unicorn[‘pidfile’]</td>
<td>puma[‘pidfile’]</td>
</tr>
<tr>
<td>unicorn[‘tcp_nopush’]</td>
<td>不适用</td>
</tr>
<tr>
<td>unicorn[‘backlog_socket’]</td>
<td>不适用</td>
</tr>
<tr>
<td>unicorn[‘somaxconn’]</td>
<td>puma[‘somaxconn’]</td>
</tr>
<tr>
<td>不适用</td>
<td>puma[‘state_path’]</td>
</tr>
<tr>
<td>unicorn[‘log_directory’]</td>
<td>puma[‘log_directory’]</td>
</tr>
<tr>
<td>unicorn[‘worker_memory_limit_min’]</td>
<td>不适用</td>
</tr>
<tr>
<td>unicorn[‘worker_memory_limit_max’]</td>
<td>puma[‘per_worker_max_memory_mb’]</td>
</tr>
<tr>
<td>unicorn[‘exporter_enabled’]</td>
<td>puma[‘exporter_enabled’]</td>
</tr>
<tr>
<td>unicorn[‘exporter_address’]</td>
<td>puma[‘exporter_address’]</td>
</tr>
<tr>
<td>unicorn[‘exporter_port’]</td>
<td>puma[‘exporter_port’]</td>
</tr>
</tbody></table>
<p>升级到13还会出现一个问题，用root账号无法关闭自动注册，页面提示500，日志提示<code>OpenSSL::Cipher::CipherError ():</code>，这里需要在服务器这样操作，关掉报错</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# gitlab-rails c</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"> Ruby:         ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-linux]</span><br><span class="line"> GitLab:       13.10.3 (b1774ad36a9) FOSS</span><br><span class="line"> GitLab Shell: 13.17.0</span><br><span class="line"> PostgreSQL:   12.6</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">Loading production environment (Rails 6.0.3.4)</span><br><span class="line">irb(main):001:0&gt; settings = ApplicationSetting.last</span><br><span class="line">=&gt; #&lt;ApplicationSetting id: 1, default_projects_limit: 100000, signup_enabled: true, gravatar_enabled: true, sign_in_text: nil, created_at: "2020-04-15...</span><br><span class="line">irb(main):002:0&gt; settings.update_column(:runners_registration_token_encrypted, nil)</span><br><span class="line">=&gt; true</span><br><span class="line">irb(main):004:0&gt; settings.update_column(:encrypted_ci_jwt_signing_key, nil)</span><br><span class="line">=&gt; true</span><br><span class="line">irb(main):006:0&gt; settings.save!</span><br><span class="line">=&gt; true</span><br><span class="line">irb(main):007:0&gt; quit</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>go-install</title>
    <url>/go-install/</url>
    <content><![CDATA[<p>go安装<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://studygolang.com/dl/golang/go1.14.4.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf go1.14.4.linux-amd64.tar.gz </span><br><span class="line">mv go /usr/local/go</span><br><span class="line">vim  /etc/profile.d/go.sh</span><br><span class="line">--------------------</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https://goproxy.cn</span><br><span class="line">source /etc/profile.d/go.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>linux install gocv</title>
    <url>/gocv/</url>
    <content><![CDATA[<p>阿里云安装gocv<a id="more"></a>，<a href="https://gocv.io/getting-started/linux/" target="_blank" rel="noopener">官方教程</a>，系统是centos 7.8，go 1.18.1，gocv 0.30.0。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">需要先yum安装cmake，然后在编译安装替代</span></span><br><span class="line">yum  install   cmake  -y</span><br><span class="line"></span><br><span class="line">tar -zxvf  cmake-3.19.1.tar.gz </span><br><span class="line">cd cmake-3.19.1</span><br><span class="line">./bootstrap --prefix=/usr/local/cmake</span><br><span class="line">make </span><br><span class="line">make install </span><br><span class="line">echo  "export PATH=$PATH:/usr/local/cmake/bin" &gt; /etc/profile.d/cmake.sh</span><br><span class="line">source  /etc/profile.d/cmake.sh</span><br><span class="line">cmake -version</span><br><span class="line"></span><br><span class="line">rm -rf  /bin/cmake</span><br><span class="line">ln  -s  /usr/local/cmake/bin/cmake   /bin/cmake</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir  -p   $GOPATH/src/gocv.io/x/gocv</span><br><span class="line">cd  $GOPATH/src/gocv.io/x/</span><br><span class="line">git clone -b v0.30.0  --depth=1 https://github.com/hybridgroup/gocv.git</span><br><span class="line">cd gocv/</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 出现异常修复</span></span><br><span class="line">export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib64/pkgconfig</span><br><span class="line">vim  /etc/ld.so.conf.d/opencv.conf</span><br><span class="line">-----</span><br><span class="line">/usr/local/lib64/</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>golang_001</title>
    <url>/golang-001/</url>
    <content><![CDATA[<p>自动生成小学算数题<a id="more"></a>给侄子弄的算术题…</p>
<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"flag"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/unidoc/unioffice/document"</span></span><br><span class="line">	<span class="string">"github.com/unidoc/unioffice/schema/soo/wml"</span></span><br><span class="line">	<span class="string">"math/rand"</span></span><br><span class="line">	<span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机删除key</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deletemapkey</span><span class="params">(mapinfo <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>, mapnum <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> listinfo []<span class="keyword">string</span></span><br><span class="line">	r := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line">	<span class="keyword">for</span> k, _ := <span class="keyword">range</span> mapinfo &#123;</span><br><span class="line">		listinfo = <span class="built_in">append</span>(listinfo, k)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; mapnum; i++ &#123;</span><br><span class="line"></span><br><span class="line">		x := r.Intn(<span class="built_in">len</span>(listinfo))</span><br><span class="line">		k := listinfo[x]</span><br><span class="line">		listinfo = <span class="built_in">append</span>(listinfo[:x], listinfo[x+<span class="number">1</span>:]...)</span><br><span class="line">		<span class="built_in">delete</span>(mapinfo, k)</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">生成数据	返回字典</span></span><br><span class="line"><span class="comment">topci_num	生成题目的数量</span></span><br><span class="line"><span class="comment">topic_scope	生成题目的范围</span></span><br><span class="line"><span class="comment">topic_type	生成题目的类型 0-正常加减 1-连加连减	2-凑十法  3-破十法 4-凑十法和破十法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">operation</span><span class="params">(topic_num, topic_scope, topic_type <span class="keyword">int</span>)</span> <span class="title">map</span>[<span class="title">string</span>]<span class="title">int</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> mapinfo = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">	<span class="comment">//随机数time刷新</span></span><br><span class="line">	r := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> topic_type &#123;</span><br><span class="line">	<span class="comment">//正常加减</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">		<span class="keyword">for</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">len</span>(mapinfo) == topic_num &#123;</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">			x := r.Intn(topic_scope)</span><br><span class="line">			y := r.Intn(topic_scope)</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">				k := fmt.Sprint(x, <span class="string">"-"</span>, y, <span class="string">"="</span>)</span><br><span class="line">				v := x - y</span><br><span class="line">				mapinfo[k] = v</span><br><span class="line"></span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> x+y &lt; topic_scope &#123;</span><br><span class="line">				k := fmt.Sprint(x, <span class="string">"+"</span>, y, <span class="string">"="</span>)</span><br><span class="line">				v := x + y</span><br><span class="line">				mapinfo[k] = v</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//连加连减</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		<span class="keyword">for</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> <span class="built_in">len</span>(mapinfo) == topic_num &#123;</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">			x := r.Intn(topic_scope)</span><br><span class="line">			y := r.Intn(topic_scope)</span><br><span class="line">			z := r.Intn(topic_scope)</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> x+y+z &lt; topic_scope &#123;</span><br><span class="line">				k := fmt.Sprint(x, <span class="string">"+"</span>, y, <span class="string">"+"</span>, z, <span class="string">"="</span>)</span><br><span class="line">				v := x + y + z</span><br><span class="line">				mapinfo[k] = v</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> x+y-z &lt; topic_scope &amp;&amp; x+y &gt; z &amp;&amp; x+y &lt; topic_scope &#123;</span><br><span class="line">				k := fmt.Sprint(x, <span class="string">"+"</span>, y, <span class="string">"-"</span>, z, <span class="string">"="</span>)</span><br><span class="line">				v := x + y - z</span><br><span class="line">				mapinfo[k] = v</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> x-y-z &lt; topic_scope &amp;&amp; x-y &gt; z &#123;</span><br><span class="line">				k := fmt.Sprint(x, <span class="string">"-"</span>, y, <span class="string">"-"</span>, z, <span class="string">"="</span>)</span><br><span class="line">				v := x - y - z</span><br><span class="line">				mapinfo[k] = v</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> x-y+z &lt; topic_scope &amp;&amp; x &gt; y &#123;</span><br><span class="line">				k := fmt.Sprint(x, <span class="string">"-"</span>, y, <span class="string">"+"</span>, z, <span class="string">"="</span>)</span><br><span class="line">				v := x - y + z</span><br><span class="line">				mapinfo[k] = v</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//凑十法</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		<span class="comment">// 由于最多只有36个这里采用直接生成的方法</span></span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">1</span>; x &lt; <span class="number">10</span>; x++ &#123;</span><br><span class="line">			<span class="keyword">for</span> y := <span class="number">1</span>; y &lt; <span class="number">10</span>; y++ &#123;</span><br><span class="line">				<span class="keyword">if</span> x+y &gt; <span class="number">10</span> &#123;</span><br><span class="line">					k := fmt.Sprint(x, <span class="string">"+"</span>, y, <span class="string">"="</span>)</span><br><span class="line">					v := x + y</span><br><span class="line">					mapinfo[k] = v</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> topic_num &lt; <span class="number">36</span> &#123;</span><br><span class="line">			listnum := <span class="number">36</span> - topic_num</span><br><span class="line">			deletemapkey(mapinfo, listnum)</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//破十法</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">		<span class="comment">// 由于最多只有36个这里采用直接生成的方法</span></span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">11</span>; x &lt; <span class="number">20</span>; x++ &#123;</span><br><span class="line">			<span class="keyword">for</span> y := <span class="number">1</span>; y &lt; <span class="number">10</span>; y++ &#123;</span><br><span class="line">				<span class="keyword">if</span> x-y &lt; <span class="number">10</span> &#123;</span><br><span class="line">					k := fmt.Sprint(x, <span class="string">"-"</span>, y, <span class="string">"="</span>)</span><br><span class="line">					v := x - y</span><br><span class="line">					mapinfo[k] = v</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> topic_num &lt; <span class="number">36</span> &#123;</span><br><span class="line">			listnum := <span class="number">36</span> - topic_num</span><br><span class="line">			deletemapkey(mapinfo, listnum)</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//混合模式</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">1</span>; x &lt; <span class="number">10</span>; x++ &#123;</span><br><span class="line">			<span class="keyword">for</span> y := <span class="number">1</span>; y &lt; <span class="number">10</span>; y++ &#123;</span><br><span class="line">				<span class="keyword">if</span> x+y &gt; <span class="number">10</span> &#123;</span><br><span class="line">					k := fmt.Sprint(x, <span class="string">"+"</span>, y, <span class="string">"="</span>)</span><br><span class="line">					v := x + y</span><br><span class="line">					mapinfo[k] = v</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">11</span>; x &lt; <span class="number">20</span>; x++ &#123;</span><br><span class="line">			<span class="keyword">for</span> y := <span class="number">1</span>; y &lt; <span class="number">10</span>; y++ &#123;</span><br><span class="line">				<span class="keyword">if</span> x-y &lt; <span class="number">10</span> &#123;</span><br><span class="line">					k := fmt.Sprint(x, <span class="string">"-"</span>, y, <span class="string">"="</span>)</span><br><span class="line">					v := x - y</span><br><span class="line">					mapinfo[k] = v</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> topic_num &lt; <span class="number">72</span> &#123;</span><br><span class="line">			listnum := <span class="number">72</span> - topic_num</span><br><span class="line">			deletemapkey(mapinfo, listnum)</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//高级模式</span></span><br><span class="line">	<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">		p := <span class="number">20</span></span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">1</span>+p; x &lt; <span class="number">10</span>+p; x++ &#123;</span><br><span class="line">			<span class="keyword">for</span> y := <span class="number">1</span>; y &lt; <span class="number">10</span>; y++ &#123;</span><br><span class="line">				<span class="keyword">if</span> x+y &gt; p &#123;</span><br><span class="line">					k := fmt.Sprint(x, <span class="string">"+"</span>, y, <span class="string">"="</span>)</span><br><span class="line">					v := x + y</span><br><span class="line">					mapinfo[k] = v</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">1</span>+p; x &lt; <span class="number">10</span>+p; x++ &#123;</span><br><span class="line">			<span class="keyword">for</span> y := <span class="number">1</span>; y &lt; <span class="number">10</span>; y++ &#123;</span><br><span class="line">				<span class="keyword">if</span> x-y &lt; p &#123;</span><br><span class="line">					k := fmt.Sprint(x, <span class="string">"-"</span>, y, <span class="string">"="</span>)</span><br><span class="line">					v := x - y</span><br><span class="line">					mapinfo[k] = v</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> topic_num &lt; <span class="number">72</span> &#123;</span><br><span class="line">			listnum := <span class="number">72</span> - topic_num</span><br><span class="line">			deletemapkey(mapinfo, listnum)</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		fmt.Print(<span class="string">"topic_type is  err"</span>)</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> mapinfo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成文件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">writeword</span><span class="params">(mapinfo <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>, wordtype <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">	new_time := time.Now().Format(<span class="string">"2006-01-02"</span>)</span><br><span class="line">	<span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line">	<span class="keyword">var</span> runinfo <span class="keyword">string</span></span><br><span class="line">	<span class="keyword">var</span> docxname <span class="keyword">string</span></span><br><span class="line">	doc := document.New()</span><br><span class="line">	<span class="comment">//定义标题属性</span></span><br><span class="line">	para := doc.AddParagraph()</span><br><span class="line">	run := para.AddRun()</span><br><span class="line">	para.SetStyle(<span class="string">"Title"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> wordtype &#123;</span><br><span class="line">		runinfo = new_time + <span class="string">"数学习题"</span></span><br><span class="line">		docxname = new_time + <span class="string">"习题.docx"</span></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		runinfo = new_time + <span class="string">"数学习题答案"</span></span><br><span class="line">		docxname = new_time + <span class="string">"答案.docx"</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	run.AddText(runinfo)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//定义表格属性</span></span><br><span class="line">	table := doc.AddTable()</span><br><span class="line">	table.Properties().SetLayout(wml.ST_TblLayoutTypeFixed)</span><br><span class="line">	table.Properties().SetWidthPercent(<span class="number">100</span>)</span><br><span class="line">	table.Properties().SetStyle(<span class="string">"MyTableStyle"</span>)</span><br><span class="line">	look := table.Properties().TableLook()</span><br><span class="line">	look.SetFirstColumn(<span class="literal">true</span>)</span><br><span class="line">	look.SetFirstRow(<span class="literal">true</span>)</span><br><span class="line">	look.SetHorizontalBanding(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//表格数据填充</span></span><br><span class="line">	<span class="keyword">for</span> r := <span class="number">0</span>; r &lt; <span class="number">40</span>; r++ &#123;</span><br><span class="line">		row := table.AddRow()</span><br><span class="line">		<span class="keyword">for</span> c := <span class="number">0</span>; c &lt; <span class="number">3</span>; c++ &#123;</span><br><span class="line">			cell := row.AddCell()</span><br><span class="line">			<span class="keyword">if</span> i &lt; <span class="built_in">len</span>(mapinfo) &amp;&amp; wordtype == <span class="literal">true</span> &#123;</span><br><span class="line">				<span class="keyword">for</span> k, _ := <span class="keyword">range</span> mapinfo &#123;</span><br><span class="line">					cell.AddParagraph().AddRun().AddText(k)</span><br><span class="line">					<span class="built_in">delete</span>(mapinfo, k)</span><br><span class="line">					<span class="keyword">break</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> i &lt; <span class="built_in">len</span>(mapinfo) &amp;&amp; wordtype == <span class="literal">false</span> &#123;</span><br><span class="line">				<span class="keyword">for</span> k, v := <span class="keyword">range</span> mapinfo &#123;</span><br><span class="line">					cell.AddParagraph().AddRun().AddText(fmt.Sprintf(<span class="string">"%s %d"</span>, k, v))</span><br><span class="line">					<span class="built_in">delete</span>(mapinfo, k)</span><br><span class="line">					<span class="keyword">break</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//生成文档</span></span><br><span class="line"></span><br><span class="line">	doc.SaveToFile(docxname)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	topic_num := flag.Int(<span class="string">"topic_num"</span>, <span class="number">50</span>, <span class="string">"输入打印题目的数量"</span>)   <span class="comment">//题目的数量（默认120）</span></span><br><span class="line">	topic_scope := flag.Int(<span class="string">"topic_scope"</span>, <span class="number">20</span>, <span class="string">"输入题目的范围"</span>) <span class="comment">//题目的范围（默认20以内的加减法）</span></span><br><span class="line">	topic_bool := flag.Int(<span class="string">"topic_bool"</span>, <span class="number">5</span>, <span class="string">"输入题目的类型"</span>)   <span class="comment">//题目的类型 0-正常加减 1-连加连减	2-凑十法  3-破十法 4-凑十法和破十法</span></span><br><span class="line">	flag.Parse()</span><br><span class="line"></span><br><span class="line">	yy := operation(*topic_num, *topic_scope, *topic_bool)</span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> yy &#123;</span><br><span class="line">		fmt.Print(k, v, <span class="string">"\n"</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	writeword(yy,<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>google身份验证器</title>
    <url>/google-authen/</url>
    <content><![CDATA[<p>配合google身份验证器使用的代码片段。<a id="more"></a></p>
<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p> Google Authenticator有2种模式 </p>
<ul>
<li>一种是基于时间，三十秒自动变化一次 </li>
<li>一种是基于计数器，一个计数器变化一次 </li>
</ul>
<p>具体原理算法请自行google， 下面的片段将演示这2种模式。 </p>
<hr>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成秘钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_base32</span><span class="params">(length=<span class="number">16</span>, random=random.SystemRandom<span class="params">()</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                  chars=list<span class="params">(<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'</span>)</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(random.choice(chars)<span class="keyword">for</span> _ <span class="keyword">in</span> range(length))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于计数器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hotp_token</span><span class="params">(secret, intervals_no)</span>:</span></span><br><span class="line">    key = base64.b32decode(secret, <span class="literal">True</span>)</span><br><span class="line">    msg = struct.pack(<span class="string">"&gt;Q"</span>, intervals_no)</span><br><span class="line">    h = hmac.new(key, msg, hashlib.sha1).digest()</span><br><span class="line">    o = ord(h[<span class="number">19</span>]) &amp; <span class="number">15</span></span><br><span class="line">    h = (struct.unpack(<span class="string">"&gt;I"</span>, h[o:o+<span class="number">4</span>])[<span class="number">0</span>] &amp; <span class="number">0x7fffffff</span>) % <span class="number">1000000</span></span><br><span class="line">    <span class="keyword">return</span> h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于时间</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_totp_token</span><span class="params">(secret)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> get_hotp_token(secret, intervals_no=int(time.time())//<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment">#print random_base32()</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"账号：2AQPBIGYZ6SE2X4Y"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"基于时间，30秒一变：%s"</span> %get_totp_token(<span class="string">"2AQPBIGYZ6SE2X4Y"</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"基于计数器，第一个：%s"</span> %get_hotp_token(<span class="string">"2AQPBIGYZ6SE2X4Y"</span>,intervals_no=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"基于计数器，第二个：%s"</span> %get_hotp_token(<span class="string">"2AQPBIGYZ6SE2X4Y"</span>,intervals_no=<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"基于计数器，第三个：%s"</span> %get_hotp_token(<span class="string">"2AQPBIGYZ6SE2X4Y"</span>,intervals_no=<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<img src="/google-authen/yzq.gif" class title="This is an example image">
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云RDS gtid同步</title>
    <url>/gtid/</url>
    <content><![CDATA[<p>阿里云RDS与IDC机房MYSQL机房同步，由于RDS的是主从同步的，可能会在运行的状态中自动切换主从，这里采用GTID来同步。<a id="more"></a>，<br>1.前期工作IDC机房服务器正常安装mysql，调试好白名单等问题。<br>2.<code>my.cnf</code>里面加上以下配置，由于同步后会抛很多的1062和1032的异常，这里我们直接选择跳过（skip-grant-tables是跳过密码的）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gtid_mode = ON</span><br><span class="line">enforce_gtid_consistency  = ON</span><br><span class="line">log_slave_updates = 1</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">slave_skip_errors = 1062,1032</span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure>
<p>3.在RDS获取GTID。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">show global variables like 'gtid_purged';</span><br></pre></td></tr></table></figure>
<p>4.将RDS的备份数据拉倒我们自建的mysql里面，解压，恢复（实例—备份恢复—数据备份—下载）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -izxvf  hins4944419_data_20200727150435.tar.gz -C /data/mysql3307/</span><br><span class="line">innobackupex --defaults-file=/data/mysql3307/backup-my.cnf --apply-log /data/mysql3307</span><br><span class="line">chown -R mysql:mysql  /data/mysql3307/</span><br><span class="line">/etc/init.d/mysqld3307   start</span><br></pre></td></tr></table></figure>
<p>5.配置好账号权限<br>6.IDC机房MYSQL数据库初始化binlog，清理主从复制信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reset master;</span><br><span class="line">reset slave;</span><br></pre></td></tr></table></figure>
<p>7.将之前RDS的数据导入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set global gtid_purged = '030cf7e6-02c7-11e7-aa4d-7cd30abdabea:1-15732691,</span><br><span class="line">523a4214-73c3-11e8-9065-6c92bf623eda:1-80119554,</span><br><span class="line">57a0edd5-d874-11e5-90fd-1051721d3a6c:1-9685265,</span><br><span class="line">6675f762-d874-11e5-90fd-288023a0e49c:1-2325279,</span><br><span class="line">6a0664ac-73c3-11e8-9066-6c92bf613734:1-37792907,</span><br><span class="line">af0cbffc-d253-11e6-ae5d-008cfaf4cbf4:1-2086660,</span><br><span class="line">c12cab13-d253-11e6-ae5d-008cfaf4cc80:1-1095476,</span><br><span class="line">e8ff948c-026b-11e7-a7fb-7cd30abda70c:1-7647943';</span><br></pre></td></tr></table></figure>
<p>8.配置同步信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">change master to MASTER_HOST='RDS域名',</span><br><span class="line">master_user='RDS账号',</span><br><span class="line">master_password='RDS密码',</span><br><span class="line">master_port=3306,</span><br><span class="line">master_auto_position=1;</span><br><span class="line"></span><br><span class="line">start slave;</span><br><span class="line">show slave status\G</span><br></pre></td></tr></table></figure>

<p>以上就是大概的配置流程，根据各自环境要求不同会遇到很多的问题，以下这些就是我在同步中遇到的异常，给大家一个参考。<br>1.gtid同步出现<code>ERROR 1682 (HY000): Native table &#39;performance_schema&#39;.&#39;session_variables&#39; has the wrong structure</code>，这个是由于rds是5.6，自建的mysql为5.7，兼容性的问题，需要mysql_upgrade进行更新，然后同步的时候需要重启mysql服务，由于之前数据库同步的时候我们没有重启，但是已经开始同步了，现在进行修复（建议使用一样的版本）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.关闭msyql服务</span><br><span class="line">2.将data下面的 *-relay-bin.*  和 master.info 移动出去</span><br><span class="line">3.启动mysql服务</span><br><span class="line">4.mysql命令行操作</span><br><span class="line"></span><br><span class="line">reset master;</span><br><span class="line">reset slave;</span><br><span class="line"></span><br><span class="line">set global gtid_purged ='030cf7e6-02c7-11e7-aa4d-7cd30abdabea:1-15732691,</span><br><span class="line">523a4214-73c3-11e8-9065-6c92bf623eda:1-87223373,</span><br><span class="line">57a0edd5-d874-11e5-90fd-1051721d3a6c:1-9685265,</span><br><span class="line">6675f762-d874-11e5-90fd-288023a0e49c:1-2325279,</span><br><span class="line">6a0664ac-73c3-11e8-9066-6c92bf613734:1-37792907,</span><br><span class="line">af0cbffc-d253-11e6-ae5d-008cfaf4cbf4:1-2086660,</span><br><span class="line">c12cab13-d253-11e6-ae5d-008cfaf4cc80:1-1095476,</span><br><span class="line">e8ff948c-026b-11e7-a7fb-7cd30abda70c:1-7647943';</span><br><span class="line"></span><br><span class="line">change master to MASTER_HOST='RDS域名',</span><br><span class="line">master_user='RDS账号',</span><br><span class="line">master_password='RDS密码',</span><br><span class="line">master_port=3306,</span><br><span class="line">master_auto_position=1;</span><br><span class="line"></span><br><span class="line">start slave;</span><br><span class="line">show slave status\G</span><br></pre></td></tr></table></figure>

<p>2.rds与mysql同步中的异常跳过</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show slave status\G</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: RDS域名</span><br><span class="line">                  Master_User: RDS账号</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.003248</span><br><span class="line">          Read_Master_Log_Pos: 150629235</span><br><span class="line">               Relay_Log_File: 47-105-200-5-relay-bin.000004</span><br><span class="line">                Relay_Log_Pos: 81557710</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.003244</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: No</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 1060</span><br><span class="line">                   Last_Error: Error 'Duplicate column name 'app_count'' on query. Default database: 'app'. Query: 'ALTER TABLE bkvoiced_task ADD COLUMN `app_count` INT (11) NOT NULL DEFAULT '0' COMMENT '审核失败次数''</span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 81557777</span><br><span class="line">              Relay_Log_Space: 836866993</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: NULL</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 1060</span><br><span class="line">               Last_SQL_Error: Error 'Duplicate column name 'app_count'' on query. Default database: 'app'. Query: 'ALTER TABLE bkvoiced_task ADD COLUMN `app_count` INT (11) NOT NULL DEFAULT '0' COMMENT '审核失败次数''</span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 2114110641</span><br><span class="line">                  Master_UUID: 523a4214-73c3-11e8-9065-6c92bf623eda					#master的uuid</span><br><span class="line">             Master_Info_File: /data/mysql3307/master.info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: </span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: 200804 10:43:45</span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: 523a4214-73c3-11e8-9065-6c92bf623eda:87166387-87293024			#已经获取事务id</span><br><span class="line">            Executed_Gtid_Set: 030cf7e6-02c7-11e7-aa4d-7cd30abdabea:1-15732691,				#已经执行事务id</span><br><span class="line">523a4214-73c3-11e8-9065-6c92bf623eda:1-87189416,</span><br><span class="line">57a0edd5-d874-11e5-90fd-1051721d3a6c:1-9685265,</span><br><span class="line">6675f762-d874-11e5-90fd-288023a0e49c:1-2325279,</span><br><span class="line">6a0664ac-73c3-11e8-9066-6c92bf613734:1-37792907,</span><br><span class="line">af0cbffc-d253-11e6-ae5d-008cfaf4cbf4:1-2086660,</span><br><span class="line">c12cab13-d253-11e6-ae5d-008cfaf4cc80:1-1095476,</span><br><span class="line">e8ff948c-026b-11e7-a7fb-7cd30abda70c:1-7647943</span><br><span class="line">                Auto_Position: 1</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">出现异常需要跳过一下，GTID的方式不一样，命令如下</span></span><br><span class="line">stop slave;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置GTID_NEXT为出错的gtid</span></span><br><span class="line">set GTID_NEXT= '523a4214-73c3-11e8-9065-6c92bf623eda:87189416';</span><br><span class="line"><span class="meta">#</span><span class="bash"> 向gtid写空事务</span></span><br><span class="line">BEGIN; COMMIT;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置GTID_NEXT为自动获取</span></span><br><span class="line">SET SESSION GTID_NEXT = AUTOMATIC;</span><br><span class="line"><span class="meta">#</span><span class="bash">开启slave复制</span></span><br><span class="line">START SLAVE;</span><br><span class="line">show slave status\G	</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">还有一种方式</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> SET @@SESSION.GTID_NEXT=<span class="string">'523a4214-73c3-11e8-9065-6c92bf623eda:87189417'</span>;				<span class="comment">#原有的事务加一，注意是没有前面的1的</span></span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> begin;commit;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Query OK, 0 rows affected (0.21 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">set</span> gtid_next=<span class="string">'automatic'</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> start slave;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>这里看Retrieved_Gtid_Set记录的信息是523a4214-73c3-11e8-9065-6c92bf623eda，因为是同步RDS所以有多个Executed_Gtid_Set，我们只用处理Executed_Gtid_Set里面的523a4214-73c3-11e8-9065-6c92bf623eda的下一个即可。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>gtid同步</title>
    <url>/gtid2/</url>
    <content><![CDATA[<p>由于rds到期，要重新处理一下rds到ecs的同步，基本是基于之前的<a href="https://laddin.me/gtid/">gtid同步</a>，一些细节有变动，这边再次记录一下过程（PS：2021-01-24）<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">阿里云MDS获取gtid</span></span><br><span class="line">show global variables like 'gtid_purged';</span><br><span class="line">----------------------------------------</span><br><span class="line">56313c59-226e-11eb-8e0b-506b4bd3fc90:1-210313,</span><br><span class="line">7b62133c-2c21-11eb-8d4b-7cd30aeb11ba:1-39763764</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">阿里云备份恢复临时生成一个最新的备份</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">ECS操作</span></span><br><span class="line">/etc/init.d/mysqld3306 stop</span><br><span class="line">rm  -rf  /data/mysql3306/*</span><br><span class="line"></span><br><span class="line">wget -O hins16723237_data_20210121084114_qp.xb "http://rdsbak-qd-v2.oss-cn-qingdao-internal.aliyuncs.com/custins39100168/hins16723237_data_20210121084114_qp.xb?XXXXXXX"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">这里根据不同的压缩包来用不同的方式处理，我们这里是qp.xb格式</span></span><br><span class="line"><span class="meta">#</span><span class="bash">详细参考 https://help.aliyun.com/knowledge_detail/41817.html?spm=5176.11065259.1996646101.searchclickresult.5e8b1f2acUYTXL</span></span><br><span class="line">cat hins16723237_data_20210121084114_qp.xb |xbstream -x -v -C /data/mysql3306/</span><br><span class="line">yum install  qpress -y</span><br><span class="line">innobackupex --decompress --remove-original  /data/mysql3306/</span><br><span class="line">innobackupex --defaults-file=/data/mysql3306/backup-my.cnf --apply-log /data/mysql3306/</span><br><span class="line">chown -R mysql:mysql  /data/mysql3306</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">账号处理</span></span><br><span class="line">vim   /etc/my3306.cnf </span><br><span class="line">-------------------</span><br><span class="line">skip-grant-tables</span><br><span class="line"></span><br><span class="line">/etc/init.d/mysqld3306 start</span><br><span class="line">mysql  -h127.0.0.1 -P 3306</span><br><span class="line">--------------------------</span><br><span class="line">update mysql.user set password=password('123456') where user='root';</span><br><span class="line">flush privileges;</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">去掉skip-grant-tables，然后重启</span></span><br><span class="line">/etc/init.d/mysqld3306  restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">由于rds是5.6，mysql是5.7会有兼容性问题</span></span><br><span class="line">mysql_upgrade -uroot -p -h127.0.0.1 -P3306</span><br><span class="line">/etc/init.d/mysqld3306  restart</span><br><span class="line"></span><br><span class="line">mysql  -h127.0.0.1 -P 3306 -u root -p</span><br><span class="line">--------------------------</span><br><span class="line">reset master;</span><br><span class="line">reset slave;	</span><br><span class="line">set global gtid_purged = '56313c59-226e-11eb-8e0b-506b4bd3fc90:1-210313,</span><br><span class="line">7b62133c-2c21-11eb-8d4b-7cd30aeb11ba:1-39763764';</span><br><span class="line">change master to MASTER_HOST='rds地址',</span><br><span class="line">master_user='账号',</span><br><span class="line">master_password='密码',</span><br><span class="line">master_port=3306,</span><br><span class="line">master_auto_position=1;</span><br><span class="line"></span><br><span class="line">start slave;</span><br><span class="line">show slave status\G</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">这里应该就完成了，但是会有许多异常需要手动跳过，这里gtid以实际为准</span></span><br><span class="line">stop  slave;</span><br><span class="line">SET @@SESSION.GTID_NEXT='7b62133c-2c21-11eb-8d4b-7cd30aeb11ba:39806115';				</span><br><span class="line">begin;commit;</span><br><span class="line">set gtid_next='automatic';</span><br><span class="line">start slave;</span><br><span class="line">show slave status\G</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>gzip引起404</title>
    <url>/gzip/</url>
    <content><![CDATA[<p>nignx反向代理默认的是http 1.0，开启gzip的默认版本是1.1，就会出现从代理过来的请求404，直接请求后端就是200.<a id="more"></a></p>
<h5 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h5><ul>
<li>nginx添加 –with-http_gzip_static_module 模块</li>
<li>nginx配置调整为 gzip_http_version 1.0;</li>
<li>nignx reload  </li>
</ul>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
  </entry>
  <entry>
    <title>hello-blog</title>
    <url>/hello-blog/</url>
    <content><![CDATA[<p>好记性不如烂笔头，博客还是要写的⚆_⚆，顺便更新一下之前记录瑕疵，换一个主题，换一种心情，Let’s go!</p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
  </entry>
  <entry>
    <title>ipv6请求https异常</title>
    <url>/ipv6-https/</url>
    <content><![CDATA[<p>项目开启ipv6，https请求异常提示<code>Unable to parse TLS packet header</code>，http请求正常<a id="more"></a>。开始以为是app请求的问题，或者是SSL版本的问题，后面curl https 显示的是<code>ssl_error_rx_record_too_long</code> nginx log也没有请求信息，只有http的请求信息，网上说的更新证书版本到1.3，或者使用http请求，都不能满足要求，最后发现调整nginx ipv6的443端口加上ssl即可解决，样本如下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">	listen [::]:80;</span><br><span class="line">	listen [::]:443 ssl;</span><br><span class="line">	......</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云开启ipv6</title>
    <url>/ipv6/</url>
    <content><![CDATA[<p>因为有个项目要响应IPV6的政策，这里记录一下阿里云开启ipv6过程。<a id="more"></a></p>
<ul>
<li>阿里云专有网络开启ipv6</li>
<li>交换机开启ipv6（有多个交换机，自己规划好网段）</li>
<li>ECS网络信息开启ipv6，然后服务器运行<a href https: help.aliyun.com document_detail 108465.html"">脚本</a></li>
<li>nginx 安装<code>--with-ipv6</code>模块，配置加上<code>listen [::]:80;</code></li>
<li>安全组开启<code>源为::/0</code>的授权</li>
<li>域名添加<code>AAAA</code>记录（cdn直接开启ipv6选项）</li>
<li>专有网络购买IPV6网关，关联上</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@47 conf]# curl   -c 6 -v https://aliyun.com</span><br><span class="line">* About to connect() to aliyun.com port 443 (#0)</span><br><span class="line">*   Trying 2401:b180:1:60::5...</span><br><span class="line">* Connected to aliyun.com (2401:b180:1:60::5) port 443 (#0)</span><br><span class="line">* Initializing NSS with certpath: sql:/etc/pki/nssdb</span><br><span class="line">*   CAfile: /etc/pki/tls/certs/ca-bundle.crt</span><br><span class="line">  CApath: none</span><br><span class="line">* SSL connection using TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</span><br><span class="line">* Server certificate:</span><br><span class="line">* 	subject: CN=*.aliyun.com,O="Alibaba (China) Technology Co., Ltd.",L=HangZhou,ST=ZheJiang,C=CN</span><br><span class="line">* 	start date: Nov 17 03:21:03 2022 GMT</span><br><span class="line">* 	expire date: Dec 19 02:11:06 2023 GMT</span><br><span class="line">* 	common name: *.aliyun.com</span><br><span class="line">* 	issuer: CN=GlobalSign Organization Validation CA - SHA256 - G2,O=GlobalSign nv-sa,C=BE</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> GET / HTTP/1.1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> User-Agent: curl/7.29.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Host: aliyun.com</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Accept: */*</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line">&lt; HTTP/1.1 301 Moved Permanently</span><br><span class="line">&lt; Server: Tengine</span><br><span class="line">&lt; Date: Tue, 28 Feb 2023 08:44:45 GMT</span><br><span class="line">&lt; Content-Type: text/html</span><br><span class="line">&lt; Content-Length: 278</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Location: https://www.aliyun.com/</span><br><span class="line">&lt; EagleEye-TraceId: 0be3e0c616775738852658297e48b8</span><br><span class="line">&lt; Strict-Transport-Security: max-age=0</span><br><span class="line">&lt; Timing-Allow-Origin: *</span><br><span class="line">&lt; </span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;301 Moved Permanently&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor="white"&gt;</span><br><span class="line">&lt;h1&gt;301 Moved Permanently&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;The requested resource has been assigned a new permanent URI.&lt;/p&gt;</span><br><span class="line">&lt;hr/&gt;Powered by Tengine&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">* Connection #0 to host aliyun.com left intact</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@47 conf]# ping -6 aliyun.com</span><br><span class="line">PING aliyun.com(2401:b180:1:60::5 (2401:b180:1:60::5)) 56 data bytes</span><br><span class="line">64 bytes from 2401:b180:1:60::5 (2401:b180:1:60::5): icmp_seq=1 ttl=94 time=20.6 ms</span><br><span class="line">64 bytes from 2401:b180:1:60::5 (2401:b180:1:60::5): icmp_seq=2 ttl=94 time=20.5 ms</span><br><span class="line">^C</span><br><span class="line">--- aliyun.com ping statistics ---</span><br><span class="line">3 packets transmitted, 2 received, 33% packet loss, time 2002ms</span><br><span class="line">rtt min/avg/max/mdev = 20.562/20.592/20.623/0.146 ms</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>aly</category>
      </categories>
  </entry>
  <entry>
    <title>kafka</title>
    <url>/kafka/</url>
    <content><![CDATA[<p>记录使用，方便查询。<a id="more"></a></p>
<h4 id="kafka介绍"><a href="#kafka介绍" class="headerlink" title="kafka介绍"></a>kafka介绍</h4><p>实时流的数据管道和实时流的处理，面向于数据流的生产/转换/存储/消费整体的一个流处理平台。<br>具有以下这些特点：</p>
<ul>
<li>分布式，多分区 多副本 多订阅者 基于zk调度</li>
<li>高性能，高吞吐量 低延迟 高并发 时间复杂度O(1)</li>
<li>持久性与扩展性，数据可持久化 容错性 支持在线水平扩展 消息自动平衡</li>
</ul>
<hr>
<h4 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h4><p><code>producer</code>：消息和数据的生产者，向kakfa一个topic发布消息的进程/代码/服务。<br><code>consumer</code>：消息和数据的消费者，订阅topic并且处理其发布的消息的进程/代码/服务。<br><code>consumer Group</code>：同一个topic，会广播给不同的组（group），一个group中，只有一个consumer可以消费该消息。<br><code>broker</code>：kafka集群中的kafka节点。<br><code>topic</code>：kafka消息的类别，对数据进行分区隔离，每条记录中包含一个key，一个value和一个timestamp（时间戳）。<br><code>partition</code>：每个topic包含一个或多个partition，创建topic时可指定parition数量，每个partition对应一个文件夹，该文件夹下存储该partition的数据和索引文件，一个topic数据会被分散储存到多个partition，每一个partition都是有序的（消费者的数量只能小于或者等于partition的数目，要不然就会重复消费）。<br><code>replication</code>：副本，一个partition可能会有多个replica，多个replica之间数据是一样的（系统默认设置的每一个topic的replication的参数是1，就是没&gt;有副本，为了节省资源，可以在创建topic时设置副本参数）。<br><code>replication leader</code>：一个partition的多个副本上，只有一个leader来负责该partition与 producer和consumer交互，而其他的replication则复制leader信息和选举leader。</p>
<p>如图所示，后面将会用代码实现consumer Group的效果。</p>
<img src="/kafka/001.png" class title="This is cluster">
<hr>
<h4 id="安装介绍"><a href="#安装介绍" class="headerlink" title="安装介绍"></a>安装介绍</h4><ul>
<li>centos 6.9</li>
<li>jdk 1.8.0_144</li>
<li>kafka 2.0.0</li>
</ul>
<table>
<thead>
<tr>
<th>ip地址</th>
<th>服务</th>
</tr>
</thead>
<tbody><tr>
<td>192.168.80.132</td>
<td>zookeeper</td>
</tr>
<tr>
<td>192.168.80.133</td>
<td>kafka</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://mirror.rise.ph/apache/kafka/2.0.0/kafka_2.11-2.0.0.tgz</span><br><span class="line">tar  zxvf kafka_2.11-2.0.0.tgz</span><br><span class="line">mv kafka_2.11-2.0.0 /usr/local/kafka</span><br><span class="line">cd /usr/local/kafka</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义broker.id  log.dirs  zookeeper.connect</span></span><br><span class="line">vim config/server.properties </span><br><span class="line"></span><br><span class="line">mkdir  /home/data</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">/usr/local/kafka/bin/kafka-server-start.sh /usr/local/kafka/config/server.properties</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="单机实例"><a href="#单机实例" class="headerlink" title="单机实例"></a>单机实例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个名为laddin_test的topic，create 创建  replication-factor副本  partitions分区。</span></span><br><span class="line">[root@localhost ~]# ./kafka-topics.sh --create --zookeeper 192.168.80.132:2181 --replication-factor 1 --partitions 1 --topic laddin</span><br><span class="line">Created topic "laddin".</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 用list来查看topic</span></span><br><span class="line">[root@localhost bin]# ./kafka-topics.sh --list --zookeeper 192.168.80.132:2181</span><br><span class="line">laddin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 发送消息</span></span><br><span class="line">[root@localhost bin]# ./kafka-console-producer.sh --broker-list localhost:9092 --topic laddin</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">laddin xxx</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"><span class="built_in">test</span> ppp</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 接收消息 （from-beginning从头开始消费）</span></span><br><span class="line">[root@localhost bin]# ./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic laddin --from-beginning</span><br><span class="line">laddin xxx</span><br><span class="line">test ppp</span><br></pre></td></tr></table></figure>

<h4 id="集群实例"><a href="#集群实例" class="headerlink" title="集群实例"></a>集群实例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个名为laddin1234的topic，partitions设置为2</span></span><br><span class="line">[root@localhost bin]# ./kafka-topics.sh --create --zookeeper 192.168.80.132:2181 --replication-factor 1 --partitions 2 --topic laddin1234</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 发送消息</span></span><br><span class="line">[root@localhost bin]# ./kafka-console-producer.sh --broker-list localhost:9092 --topic laddin1234</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">2</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">3</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">4</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">5</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">6</span></span><br><span class="line"><span class="meta">&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开2个xshell窗口</span></span><br><span class="line">[root@localhost bin]# ./kafka-console-consumer.sh --bootstrap-server localhost:9092 --group testladdin  --topic laddin123 </span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost bin]# ./kafka-console-consumer.sh --bootstrap-server localhost:9092 --group testladdin  --topic laddin123 </span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">5</span><br></pre></td></tr></table></figure>

<img src="/kafka/002.png" class title="This is example">
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看consumer Group 列表</span></span><br><span class="line">[root@localhost bin]# ./kafka-consumer-groups.sh  --bootstrap-server localhost:9092 --list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看具体信息</span></span><br><span class="line">[root@localhost bin]# ./kafka-consumer-groups.sh  --bootstrap-server localhost:9092 --describe --group testladdin</span><br></pre></td></tr></table></figure>

<h5 id="py-demo"><a href="#py-demo" class="headerlink" title="py_demo"></a>py_demo</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生产者</span></span><br><span class="line"><span class="keyword">from</span> pykafka <span class="keyword">import</span> KafkaClient</span><br><span class="line"></span><br><span class="line">client = KafkaClient(hosts=<span class="string">"192.168.80.133:9092"</span>)</span><br><span class="line"></span><br><span class="line">topic = client.topics[<span class="string">'laddin123'</span>]</span><br><span class="line"><span class="comment"># 发送消息</span></span><br><span class="line">producer = topic.get_producer()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    test_message = <span class="string">"message&#123;&#125;"</span>.format(i)</span><br><span class="line">    print(test_message)</span><br><span class="line">    producer.produce(bytes(test_message, encoding=<span class="string">'utf-8'</span>))</span><br><span class="line">producer.stop()</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#消费者</span></span><br><span class="line"><span class="keyword">from</span> pykafka <span class="keyword">import</span> KafkaClient</span><br><span class="line"></span><br><span class="line">client = KafkaClient(hosts=<span class="string">"192.168.80.133:9092"</span>)</span><br><span class="line">topic = client.topics[<span class="string">'laddin123'</span>]</span><br><span class="line"><span class="comment"># 这里的consumer_group是定义那一个组的</span></span><br><span class="line">consumer = topic.get_balanced_consumer(consumer_group=<span class="string">'testladdin'</span>,</span><br><span class="line">                                       auto_commit_enable=<span class="literal">True</span>,</span><br><span class="line">                                       zookeeper_connect=<span class="string">'192.168.80.132:2181'</span></span><br><span class="line">                                       )</span><br><span class="line"><span class="keyword">for</span> message <span class="keyword">in</span> consumer:</span><br><span class="line">    print(<span class="string">"#"</span> * <span class="number">100</span>)</span><br><span class="line">    print(<span class="string">"compression_type"</span>, message.compression_type)</span><br><span class="line">    print(<span class="string">"offset"</span>, message.offset)</span><br><span class="line">    print(<span class="string">"partition_id"</span>, message.partition_id)</span><br><span class="line">    print(<span class="string">"partition_key"</span>, message.partition_key)</span><br><span class="line">    print(<span class="string">"produce_attempt"</span>, message.produce_attempt)</span><br><span class="line">    print(<span class="string">"value"</span>, message.value)</span><br></pre></td></tr></table></figure>






]]></content>
      <categories>
        <category>ELK</category>
      </categories>
  </entry>
  <entry>
    <title>cnetos升级内核</title>
    <url>/kernel/</url>
    <content><![CDATA[<p>安装nfs 内核缺少nfsd。<a id="more"></a>记录一下升级内核，版本Centos7.8</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ ~]# uname -sr</span><br><span class="line">Linux 3.10.0-1127.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装证书 下载</span></span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">yum install -y https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm</span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看可以内核</span></span><br><span class="line">[root@ ~]# awk -F\' '$1=="menuentry " &#123;print i++ " : " $2&#125;' /etc/grub2.cfg</span><br><span class="line">0 : CentOS Linux (5.19.1-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">1 : CentOS Linux (3.10.0-1127.el7.x86_64) 7 (Core)</span><br><span class="line">2 : CentOS Linux (0-rescue-924cd075aa5343aaa7211036d1cc896c) 7 (Core)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置5.19为默认内核</span></span><br><span class="line">grub2-set-default 0</span><br><span class="line"></span><br><span class="line">vim   /etc/default/grub</span><br><span class="line">-----------------------</span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line"></span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">检查nfsd</span></span><br><span class="line">modprobe nfsd</span><br></pre></td></tr></table></figure>
<p>这里检查成功我就没有重启系统，要是可以重启系统还是建议重启一下系统。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>DELL linux系统安装omsa</title>
    <url>/linux-omsa/</url>
    <content><![CDATA[<p>记录一下linux安装omsa<a id="more"></a>,在官网下载客户端的安装包，这里以PowerEdge R740xd2 为例子。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://dl.dell.com/FOLDER06455061M/1/OM-SrvAdmin-Dell-Web-LX-9.5.0-4063_A00.tar.gz</span><br><span class="line">tar -zxvf  OM-SrvAdmin-Dell-Web-LX-9.5.0-4063_A00.tar.gz</span><br><span class="line"></span><br><span class="line">yum  groupinstall Development tools -y</span><br><span class="line">yum -y install net-snmp-utils</span><br><span class="line">yum -y install libcmpiCppImpl0</span><br><span class="line">yum -y install openwsman-server</span><br><span class="line">yum -y install sblim-sfcb</span><br><span class="line">yum -y install libwsman1</span><br><span class="line">yum -y install openwsman-client</span><br><span class="line"></span><br><span class="line">wget -q -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi | bash</span><br><span class="line">yum -y install OpenIPMI srvadmin-all</span><br><span class="line"></span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure>
<p>查看是否开启1311端口.</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>python日志</title>
    <url>/logging/</url>
    <content><![CDATA[<p>python日志功能<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">import logging</span><br><span class="line">LOG_FORMAT= "%(asctime)s - %(levelname)s -%(message)s"</span><br><span class="line">TIME_FORMAT= "%Y-%m-%d %H:%M:%S"</span><br><span class="line">logging.basicConfig(filename='my.log',level=logging.DEBUG,format=LOG_FORMAT,datefmt=TIME_FORMAT)</span><br><span class="line"></span><br><span class="line">logging.debug("debug")</span><br><span class="line">logging.info("info")</span><br><span class="line">logging.warning("warning")</span><br><span class="line">logging.error("error")</span><br><span class="line">logging.critical("criticaling")</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------</span><br><span class="line">2022-06-23 10:03:16 - DEBUG -debug</span><br><span class="line">2022-06-23 10:03:16 - INFO -info</span><br><span class="line">2022-06-23 10:03:16 - WARNING -warning</span><br><span class="line">2022-06-23 10:03:16 - ERROR -error</span><br><span class="line">2022-06-23 10:03:16 - CRITICAL -critical</span><br></pre></td></tr></table></figure>
<p>会在项目根目录生成一个my.log的日志文件。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>macfee安装</title>
    <url>/macfee/</url>
    <content><![CDATA[<p>由于某些jar包版本过低，部分服务器被入侵，这里记录安装过程<a id="more"></a></p>
<h4 id="liunx上安装macfee安装过程"><a href="#liunx上安装macfee安装过程" class="headerlink" title="liunx上安装macfee安装过程"></a>liunx上安装macfee安装过程</h4><h5 id="将脚本和压缩包上传至服务器"><a href="#将脚本和压缩包上传至服务器" class="headerlink" title="将脚本和压缩包上传至服务器"></a>将脚本和压缩包上传至服务器</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">install.sh</span><br><span class="line">McAfeeTP-10.6.8-115-Release-standalone.tar.gz</span><br></pre></td></tr></table></figure>

<h5 id="创建mcafee目录"><a href="#创建mcafee目录" class="headerlink" title="创建mcafee目录"></a>创建mcafee目录</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir linux_mcafee</span><br><span class="line">cd linux_mcafee/</span><br></pre></td></tr></table></figure>

<h5 id="创建mfe的用户和组"><a href="#创建mfe的用户和组" class="headerlink" title="创建mfe的用户和组"></a>创建mfe的用户和组</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupadd macfee</span><br><span class="line">useradd  macfee -g macfee</span><br></pre></td></tr></table></figure>

<h5 id="设定权限"><a href="#设定权限" class="headerlink" title="设定权限"></a>设定权限</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "chmod +x install.sh"</span><br><span class="line">sudo tar -zxvf McAfeeTP-10.6.8-115-Release-standalone.tar.gz</span><br></pre></td></tr></table></figure>

<h5 id="安装macfee-agent"><a href="#安装macfee-agent" class="headerlink" title="安装macfee agent"></a>安装macfee agent</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "./install.sh -i"</span><br></pre></td></tr></table></figure>

<h5 id="安装macfee-threat-prevention-使用空白键一直到100-输入accepet"><a href="#安装macfee-threat-prevention-使用空白键一直到100-输入accepet" class="headerlink" title="安装macfee threat prevention(使用空白键一直到100% 输入accepet)"></a>安装macfee threat prevention(使用空白键一直到100% 输入accepet)</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "./install-mfetp.sh"</span><br></pre></td></tr></table></figure>

<h5 id="安装完成之后到此路径进行扫描"><a href="#安装完成之后到此路径进行扫描" class="headerlink" title="安装完成之后到此路径进行扫描"></a>安装完成之后到此路径进行扫描</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /opt/isec/ens/threatprevention/bin/</span><br><span class="line">sudo sh -c "./isecav --setapstatus enable"</span><br><span class="line">sudo sh -c "./isecav --getapstatus"</span><br></pre></td></tr></table></figure>

<h5 id="设定事件档案大小-可设定1MB-999MB-25即是25MB"><a href="#设定事件档案大小-可设定1MB-999MB-25即是25MB" class="headerlink" title="设定事件档案大小,可设定1MB-999MB 25即是25MB"></a>设定事件档案大小,可设定1MB-999MB 25即是25MB</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "./isecav --setmaxproductlogsize 25"</span><br></pre></td></tr></table></figure>

<h5 id="开启产品事件"><a href="#开启产品事件" class="headerlink" title="开启产品事件"></a>开启产品事件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "./isecav --productlog enable"</span><br></pre></td></tr></table></figure>

<h5 id="选择完整扫描"><a href="#选择完整扫描" class="headerlink" title="选择完整扫描"></a>选择完整扫描</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "./isecav --runtask --index 2"</span><br></pre></td></tr></table></figure>

<h5 id="显示扫描列表"><a href="#显示扫描列表" class="headerlink" title="显示扫描列表"></a>显示扫描列表</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "./isecav --listtask"</span><br></pre></td></tr></table></figure>

<h5 id="查看扫描日志"><a href="#查看扫描日志" class="headerlink" title="查看扫描日志"></a>查看扫描日志</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo tail -f /var/McAfee/ens/log/tp/mfeoasmgr.log</span><br></pre></td></tr></table></figure>

<h5 id="设定规则排除该文件夹路径"><a href="#设定规则排除该文件夹路径" class="headerlink" title="设定规则排除该文件夹路径"></a>设定规则排除该文件夹路径</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c './isecav --setoasprofileconfig --profile standard --addexclusionrw --excludepaths "/root/sample*"'</span><br></pre></td></tr></table></figure>

<h5 id="列出排除规则"><a href="#列出排除规则" class="headerlink" title="列出排除规则"></a>列出排除规则</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c "./isecav --getoasconfig --exclusionlist --profile standard"</span><br></pre></td></tr></table></figure>

<h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h4><ul>
<li><p>完整扫描是会去扫描所有文件夹包括那些没有做存取动作的文件夹</p>
</li>
<li><p>非完整扫描是一直检测的但只会扫描有存取动作的文件</p>
</li>
<li><p>扫描的log : /var/McAfee/ens/log/tp/mfeoasmgr.log </p>
</li>
<li><p>设定/更新/报错的log : /var/McAfee/ens/log/tp/mfetpd</p>
</li>
<li><p>windows可以选择想扫描的文件，linux是全局扫描</p>
</li>
<li><p>其实linux用mcafee没什么效果，后面也直接下掉了。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>多个mysql</title>
    <url>/many-mysql/</url>
    <content><![CDATA[<p>一台机器安装多个mysql<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">正常安装</span></span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql3306</span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql3307</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">启动脚本要修改一下<span class="variable">$bindir</span>/mysqld_safe  这行，添加pid信息</span></span><br><span class="line"><span class="meta">$</span><span class="bash">bindir/mysqld_safe --defaults-file=<span class="string">"/etc/my3306.cnf"</span> --pid-file=<span class="string">"<span class="variable">$mysqld_pid_file_path</span>"</span> <span class="variable">$other_args</span> &gt;/dev/null &amp;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>mysql安装参考</title>
    <url>/mysql/</url>
    <content><![CDATA[<p>安装参考<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y libaio</span><br><span class="line"><span class="meta">#</span><span class="bash">因为是mini系统先安装jemalloc</span></span><br><span class="line">git clone https://github.com/jemalloc/jemalloc</span><br><span class="line">cd jemalloc/</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure </span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">mysql</span></span><br><span class="line">useradd -M -s /sbin/nologin mysql</span><br><span class="line">mkdir -p /data/mysql;chown mysql.mysql -R /data/mysql</span><br><span class="line"></span><br><span class="line">wget  https://mirrors.huaweicloud.com/mysql/Downloads/MySQL-5.7/mysql-5.7.29-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">tar  -zxvf  mysql-5.7.29-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">mv mysql-5.7.29-linux-glibc2.12-x86_64  /usr/local/mysql</span><br><span class="line"></span><br><span class="line">sed -i 's@executing mysqld_safe@executing mysqld_safe\nexport LD_PRELOAD=/usr/local/lib/libjemalloc.so@' /usr/local/mysql/bin/mysqld_safe </span><br><span class="line"></span><br><span class="line">cp  /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">sed -i "s@^basedir=.*@basedir=/usr/local/mysql@" /etc/init.d/mysqld</span><br><span class="line">sed -i "s@^datadir=.*@datadir=/data/mysql@" /etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld; chkconfig mysqld on</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt; EOF</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt="MySQL [\\d]&gt; "</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /data/mysql</span><br><span class="line">pid-file = /data/mysql/mysql.pid</span><br><span class="line">user = mysql</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line">init-connect = 'SET NAMES utf8mb4'</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line"><span class="meta">#</span><span class="bash">skip-networking</span></span><br><span class="line">back_log = 300</span><br><span class="line"></span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_open_cache = 128</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line">tmp_table_size = 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line">key_buffer_size = 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line">query_cache_type = 1</span><br><span class="line">query_cache_size = 8M</span><br><span class="line">query_cache_limit = 2M</span><br><span class="line"></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line">log_bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">expire_logs_days = 7</span><br><span class="line">log_error = /data/mysql/mysql-error.log</span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1</span><br><span class="line">slow_query_log_file = /data/mysql/mysql-slow.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">performance_schema = 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">lower_case_table_names = 1</span></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"><span class="meta">#</span><span class="bash">default-storage-engine = MyISAM</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_open_files = 500</span><br><span class="line">innodb_buffer_pool_size = 64M</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 0</span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 2M</span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">read_buffer = 4M</span><br><span class="line">write_buffer = 4M</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存16G</span></span><br><span class="line">sed -i "s@max_connections.*@max_connections = 20000@" /etc/my.cnf</span><br><span class="line">sed -i 's@^thread_cache_size.*@thread_cache_size = 64@' /etc/my.cnf</span><br><span class="line">sed -i 's@^query_cache_size.*@query_cache_size = 64M@' /etc/my.cnf</span><br><span class="line">sed -i 's@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 64M@' /etc/my.cnf</span><br><span class="line">sed -i 's@^key_buffer_size.*@key_buffer_size = 256M@' /etc/my.cnf</span><br><span class="line">sed -i 's@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 1024M@' /etc/my.cnf</span><br><span class="line">sed -i 's@^tmp_table_size.*@tmp_table_size = 128M@' /etc/my.cnf</span><br><span class="line">sed -i 's@^table_open_cache.*@table_open_cache = 1024@' /etc/my.cnf</span><br><span class="line"></span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql</span><br><span class="line">chmod 600 /etc/my.cnf</span><br><span class="line">chown mysql.mysql /data/mysql</span><br><span class="line">/etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line">/usr/local/mysql/bin/mysql -e "grant all privileges on *.* to root@'127.0.0.1' identified by \"xyz123\" with grant option;"</span><br><span class="line">/usr/local/mysql/bin/mysql -e "grant all privileges on *.* to root@'localhost' identified by \"xyz123\" with grant option;"</span><br><span class="line">/usr/local/mysql/bin/mysql -uroot -pbookan123 -e "reset master;"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo  "export PATH=/usr/local/mysql/bin:$PATH"  &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>expected key exchange group packet from server</title>
    <url>/navicat/</url>
    <content><![CDATA[<p>Navicat用ssh跳转出现expected key exchange group packet from server<a id="more"></a></p>
<p>这里先检查mysql权限，要是没有问题可能是ssh那边屏蔽不安全算法导致的（影响OpenSSH6.7以上版本）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">--------------------------</span><br><span class="line">KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1</span><br><span class="line"></span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>nf_conntrack优化解决tcp包被drop</title>
    <url>/nf-conntrack/</url>
    <content><![CDATA[<p>nf_conntrack: table full, dropping packet.<a id="more"></a></p>
<h4 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h4><p>机房redis服务器无法访问，机房监控这台服务器还有流量，但是zabbix监控显示这台服务器流量全部断掉，服务排查正常，查看日志<code>/var/log/message</code>有大量的相同报错，如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kernel: nf_conntrack: table full, dropping packet.</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>谷歌一波，和组内同事讨论一下，开始以为是tcp的问题，调整<code>nf_conntrack</code>的上线后面还是出现过，最后检测是防火墙iptables的问题，iptables是基于 netfilter的， 因为线上都是启用了iptables，开启了tcp包的追踪。追踪文件是在/proc/net/nf_conntrack，里面会跟踪每个tcp连接的状态。 </p>
<p>解决方案</p>
<ul>
<li>关闭防火墙（临时方案）</li>
<li>提高 netfilter跟踪tcp表的max值 </li>
<li>iptables里面使用<code>-j notrace</code>关闭tcp包的追踪 </li>
<li>优化程序，降低短连接的数量 </li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>nfs搭建</title>
    <url>/nfs/</url>
    <content><![CDATA[<p>内网一个文件服务器资料要共享出来，首先就想到NFS来处理<a id="more"></a>，这里是内网就不说防火墙等设置了，只是简单记录一下过程。</p>
<h5 id="共享端0-97"><a href="#共享端0-97" class="headerlink" title="共享端0.97"></a>共享端0.97</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install nfs-utils rpcbind</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里直接把/mnt/Files 文件进行共享到0.142</span></span><br><span class="line"></span><br><span class="line">vim  /etc/exports</span><br><span class="line">-----------------</span><br><span class="line">/mnt/Files 192.168.0.142/31(rw,sync)</span><br><span class="line"></span><br><span class="line">exportfs -r </span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看端口是否启动</span></span><br><span class="line">netstat -lnpt</span><br><span class="line"></span><br><span class="line">``</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#### 同步端0.142</span></span></span><br><span class="line">```shell</span><br><span class="line">yum -y install nfs-utils rpcbind</span><br><span class="line"></span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs</span><br><span class="line"></span><br><span class="line">mkdir   /mnt/Files</span><br><span class="line">showmount -e 192.168.0.97</span><br><span class="line">mount -t nfs 192.168.0.97:/mnt/Files  /mnt/Files</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# df -h</span><br><span class="line">Filesystem                   Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root       50G  3.9G   47G   8% /</span><br><span class="line">devtmpfs                     3.8G     0  3.8G   0% /dev</span><br><span class="line">tmpfs                        3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">tmpfs                        3.9G  172M  3.7G   5% /run</span><br><span class="line">tmpfs                        3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1                   1014M  142M  873M  14% /boot</span><br><span class="line">/dev/mapper/centos-home      441G  138G  304G  32% /home</span><br><span class="line">192.168.0.97:/mnt/Files     1008G  854G  104G  90% /mnt/Files</span><br><span class="line">tmpfs                        781M     0  781M   0% /run/user/0</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>nginx-proxy</title>
    <url>/nginx-proxy/</url>
    <content><![CDATA[<p>Nginx代理，方便后期查询。<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">proxy_cache_path /home/proxy_cache/123456 levels=1:2 keys_zone=caches_123456:200m inactive=30m max_size=2g use_temp_path=off;</span><br><span class="line"><span class="meta">#</span><span class="bash"> levels=1:2，表示创建两层目录缓存</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> keys_zone=caches_123456:200m 定义缓存区域名称及大小</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> inactive=30m 在指定时间内没人访问则被删除</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> max_size=2g  最大缓存空间</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use_temp_path=off</span></span><br><span class="line">upstream web_123456&#123;</span><br><span class="line">        server 127.0.0.1:8093;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  123456.com www.123456.com;</span><br><span class="line">    index index.html index.htm index.php forum.php index.asp index.jsp index.aspx;</span><br><span class="line">    access_log  /home/wwwlogs/123456.log;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://web_123456;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 定义后端访问地址</span></span><br><span class="line">		</span><br><span class="line">	proxy_set_header Accept-Encoding "";</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 清除编码</span></span><br><span class="line">		</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 定义主机头</span></span><br><span class="line">		</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 向后端传递访客ip </span></span><br><span class="line">		</span><br><span class="line">        proxy_cache caches_123456;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 缓存区名称，与前面定义的相同</span></span><br><span class="line">		</span><br><span class="line">        proxy_cache_key  $host$uri$is_args$query_string;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 缓存key的规则</span></span><br><span class="line">		</span><br><span class="line">        proxy_cache_valid  200 304 60m;</span><br><span class="line">        proxy_cache_valid  301 10m;</span><br><span class="line">        proxy_cache_valid  500 502 503 504 0s;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 状态缓存时效</span></span><br><span class="line">		</span><br><span class="line">        proxy_cache_valid any 1s;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 没有定义状态缓存1s</span></span><br><span class="line">		</span><br><span class="line">        proxy_cache_min_uses 1;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 访问1次就缓存</span></span><br><span class="line">		</span><br><span class="line">        expires 12h;</span><br><span class="line"><span class="meta">	#</span><span class="bash"> 失效时间</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>openpyxl</title>
    <url>/openpyxl/</url>
    <content><![CDATA[<p> 整理使用过程，方便以后学习。 <a id="more"></a></p>
<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p> <code>openpyxl</code>可以读写Excel表格，专门处理<code>Excel2007</code>及以上版本产生的xlsx文件，不是自带库，需要pip安装，如果涉及到图片插入还需要安装 Image库 。演示代码如下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"><span class="comment">#创建工作薄</span></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line"><span class="comment">#调用工作表</span></span><br><span class="line">ws = wb.active</span><br><span class="line"><span class="comment">#修改标签名称</span></span><br><span class="line">ws.title = <span class="string">'TEST'</span></span><br><span class="line"><span class="comment">#修改标签背景色</span></span><br><span class="line">ws.sheet_properties.tabColor = <span class="string">'0101DF'</span></span><br><span class="line"><span class="comment">#第一行添加以下列</span></span><br><span class="line">ws.append([<span class="string">'苹果'</span>,<span class="string">'橘子'</span>,<span class="string">'香蕉'</span>,<span class="string">'葡萄'</span>,<span class="string">'栗子'</span>,<span class="string">'西瓜'</span>,<span class="string">'榴莲'</span>])</span><br><span class="line"><span class="comment">#设置C的列宽</span></span><br><span class="line">ws.column_dimensions[<span class="string">'C'</span>].width = <span class="number">20</span></span><br><span class="line"><span class="comment">#设置2的行高</span></span><br><span class="line">ws.row_dimensions[<span class="number">2</span>].height = <span class="number">20</span></span><br><span class="line"><span class="comment">#设置标题颜色，居中，边框</span></span><br><span class="line">list_lie = [<span class="string">'A1'</span>,<span class="string">'B1'</span>,<span class="string">'C1'</span>,<span class="string">'D1'</span>,<span class="string">'E1'</span>,<span class="string">'F1'</span>,<span class="string">'G1'</span>]</span><br><span class="line">left, right, top, bottom = [openpyxl.styles.Side(style=<span class="string">'medium'</span>,color=<span class="string">'555555'</span>)]*<span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list_lie:</span><br><span class="line">    <span class="comment">#颜色</span></span><br><span class="line">    ws[i].fill = openpyxl.styles.PatternFill(start_color=<span class="string">'bbbbbb'</span>, fill_type=<span class="string">'solid'</span>)</span><br><span class="line">    <span class="comment">#居中</span></span><br><span class="line">    ws[i].alignment = openpyxl.styles.Alignment(horizontal=<span class="string">'center'</span>, vertical=<span class="string">'center'</span>)</span><br><span class="line">    <span class="comment">#边框</span></span><br><span class="line">    ws[i].border = openpyxl.styles.Border(left=left, right=right, top=top, bottom=bottom)</span><br><span class="line"><span class="comment">#单元格赋值</span></span><br><span class="line">ws[<span class="string">'A2'</span>] = <span class="string">'小企鹅'</span></span><br><span class="line"><span class="comment">#合并单元格</span></span><br><span class="line">ws.merge_cells(<span class="string">'A3:C3'</span>)</span><br><span class="line">ws[<span class="string">'A3'</span>] = <span class="string">'大黄鸭'</span></span><br><span class="line"><span class="comment">#设置字体大小，斜体</span></span><br><span class="line">ws[<span class="string">'A4'</span>].font = openpyxl.styles.Font(size=<span class="number">24</span>,italic=<span class="literal">True</span>)</span><br><span class="line">ws[<span class="string">'A4'</span>] = <span class="string">'jjyy'</span></span><br><span class="line"><span class="comment">#插入图片,需要Image库</span></span><br><span class="line">img = openpyxl.drawing.image.Image(<span class="string">r'C:\Users\laddin\Desktop\500432.jpg'</span>)</span><br><span class="line">ws.add_image(img,<span class="string">'A4'</span>)</span><br><span class="line"><span class="comment">#保存文件，并命名为xxooxx</span></span><br><span class="line">wb.save(<span class="string">'xxooxx.xlsx'</span>)</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>oss跨域问题</title>
    <url>/oss-cors/</url>
    <content><![CDATA[<p>CDN回源到OSS，提示<code>No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.</code><a id="more"></a><br>我已经在oss按照阿里云的提示配置了但是还是不行，后面是查找了半天发现是CDN覆盖了OSS的设置，直接在CDN设置自定义的http响应头就可以解决了。</p>
<img src="/oss-cors/001.jpg" class title="This is an example image">
<img src="/oss-cors/002.jpg" class title="This is an example image">

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>paramike</title>
    <url>/paramike/</url>
    <content><![CDATA[<p>整理使用过程，方便以后学习。 <a id="more"></a>python最常见的ssh模块。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="comment">#执行命令</span></span><br><span class="line">ssh =paramiko.SSHClient()</span><br><span class="line"><span class="comment">#第一次登陆</span></span><br><span class="line">ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line"><span class="comment">#秘钥登陆</span></span><br><span class="line">ssh.connect(hostname=<span class="string">'IP'</span>, port=<span class="number">22</span>, username=<span class="string">'username'</span>, key_filename=<span class="string">'/home/laddin/.ssh/id_rsa'</span> )</span><br><span class="line"><span class="comment">#密码登陆</span></span><br><span class="line">ssh.connect(hostname=<span class="string">'IP'</span>, port=<span class="number">22</span>, username=<span class="string">'username'</span>, password=<span class="string">'userpasswd'</span> )</span><br><span class="line"><span class="comment">#stdin, stdout, stderr分别是 标准输入 标准输出 标准错误输出</span></span><br><span class="line">stdin, stdout, stderr =ssh.exec_command(<span class="string">'ls /home/laddin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> stdout.readlines()</span><br><span class="line"><span class="keyword">print</span> stderr.readlines()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#上传下载文件</span></span><br><span class="line">t = paramiko.Transport(<span class="string">'hostname'</span>,<span class="string">'port'</span>)</span><br><span class="line">t.connect(username=<span class="string">"username"</span>,password=<span class="string">"password"</span>)</span><br><span class="line">sftp = paramiko.SFTPClient.from_transport(t)</span><br><span class="line"><span class="comment">#上传文件</span></span><br><span class="line">sftp.put(<span class="string">'本地文件路径'</span>,<span class="string">'服务器路径'</span>)</span><br><span class="line"><span class="comment">#下载文件</span></span><br><span class="line">sftp.get(<span class="string">'服务器路径'</span>,<span class="string">'本地文件路径'</span>)</span><br><span class="line"><span class="comment">#关闭连接</span></span><br><span class="line">sftp.close()</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>php7.4 gd</title>
    <url>/php7-4-gd/</url>
    <content><![CDATA[<p>php7.4 gd全部支持<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://nih.at/libzip/libzip-1.2.0.tar.gz</span><br><span class="line">tar -zxvf libzip-1.2.0.tar.gz</span><br><span class="line">cd libzip-1.2.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">wget http://www.zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">tar -xzvf zlib-1.2.11.tar.gz</span><br><span class="line">cd zlib-1.2.11</span><br><span class="line">./configure --prefix=/usr/local/zlib --enable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">wget https://download.savannah.gnu.org/releases/freetype/freetype-2.10.1.tar.gz</span><br><span class="line">tar -xzvf freetype-2.10.1.tar.gz</span><br><span class="line">cd freetype-2.10.1</span><br><span class="line">./configure --prefix=/usr/local/freetype --enable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">https://sourceforge.net/projects/libpng/files/libpng16/1.6.37/libpng-1.6.37.tar.gz/download</span><br><span class="line">tar -xzvf libpng-1.6.37.tar.gz</span><br><span class="line">cd libpng-1.6.37</span><br><span class="line">./configure --prefix=/usr/local/libpng --enable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">wget http://www.ijg.org/files/jpegsrc.v9d.tar.gz</span><br><span class="line">tar -xzvf jpegsrc.v9d.tar.gz</span><br><span class="line">cd jpeg-9d</span><br><span class="line">./configure --prefix=/usr/local/libjpeg --enable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">wget   https://github.com/libgd/libgd/releases/download/gd-2.2.5/libgd-2.2.5.tar.gz</span><br><span class="line">tar -xzvf libgd-2.2.5.tar.gz</span><br><span class="line">cd libgd-2.2.5</span><br><span class="line">./configure --enable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">cd  /usr/local/src/php-7.4.28/ext/gd/</span><br><span class="line">make clean</span><br><span class="line">phpize </span><br><span class="line">./configure --enable-gd --with-php-config=/usr/local/php-7.4.28/bin/php-config --with-jpeg=/usr/local/libjpeg   --with-freetype=/usr/local/freetype</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>巡检脚本</title>
    <url>/polling/</url>
    <content><![CDATA[<p> 整理使用过程，方便以后学习。 <a id="more"></a></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>最近部门要求每个星期做日常巡检汇总报告，刚开始是用的一个小脚本每天5点统计信息发送到服务器，然后统计整理生成表格，虽然初步解决但是不完善，不能随时获取当前服务器信息，后面改为用 paramiko 去获取服务器信息，来处理（这个方法也不合适，最终方案是用ansible来处理，这样比较安全）。</p>
<hr>
<p>简单来说，就是用<code>paramiko</code>获取服务器信息然后用<code>openpyxl</code>转换成word文件，paramiko是基于ssh的不用在服务器安装其他软件或者脚本，只需要服务器账号密码即可。脚本读取account.txt文件中的服务器信息，account.txt以空格分开，分别是ip，端口，账号，密码，脚本获得账号信息后会查找以各个ip命名的文件，分别读取不同的检测shell，远程执行，获得数据，生成word文档。如下所示。</p>
<img src="/polling/20170321213352.png" class title="This is account config">

<img src="/polling/20170321213411.png" class title="This is carry out a task">

<p> 当然每个服务器的检查项目都不是一样的，这里的shell需要自己添加，这里只是举一个栗子。 </p>
<hr>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ul>
<li>脚本需要安装paramiko与openpyxl模块，生成的word文档的地址需要自行修改 </li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line"></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line">ws = wb.active</span><br><span class="line">ws.append([<span class="string">'业务'</span>,<span class="string">'ip'</span>,<span class="string">'项目'</span>,<span class="string">'命令'</span>,<span class="string">'阈值'</span>,<span class="string">'结果'</span>,<span class="string">'备注'</span>])</span><br><span class="line"><span class="comment">#设置列宽</span></span><br><span class="line">ws.column_dimensions[<span class="string">'A'</span>].width = <span class="number">20</span></span><br><span class="line">ws.column_dimensions[<span class="string">'B'</span>].width = <span class="number">18</span></span><br><span class="line">ws.column_dimensions[<span class="string">'C'</span>].width = <span class="number">20</span></span><br><span class="line">ws.column_dimensions[<span class="string">'D'</span>].width = <span class="number">70</span></span><br><span class="line">ws.column_dimensions[<span class="string">'G'</span>].width = <span class="number">20</span></span><br><span class="line"><span class="comment">#设置标题颜色，居中，边框</span></span><br><span class="line">list_lie = [<span class="string">'A1'</span>,<span class="string">'B1'</span>,<span class="string">'C1'</span>,<span class="string">'D1'</span>,<span class="string">'E1'</span>,<span class="string">'F1'</span>,<span class="string">'G1'</span>]</span><br><span class="line">left, right, top, bottom = [openpyxl.styles.Side(style=<span class="string">'medium'</span>,color=<span class="string">'555555'</span>)]*<span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list_lie:</span><br><span class="line">    ws[i].fill = openpyxl.styles.PatternFill(start_color=<span class="string">'bbbbbb'</span>, fill_type=<span class="string">'solid'</span>)</span><br><span class="line">    ws[i].alignment = openpyxl.styles.Alignment(horizontal=<span class="string">'center'</span>, vertical=<span class="string">'center'</span>)</span><br><span class="line">    ws[i].border = openpyxl.styles.Border(left=left, right=right, top=top, bottom=bottom)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">work</span><span class="params">(work_num,work_1,work_2,work_3,work_4,work_5,work_6,work_7)</span>:</span></span><br><span class="line">    <span class="string">"""将数据转换成表格"""</span></span><br><span class="line">    ws[<span class="string">'A%s'</span> % work_num] = work_1</span><br><span class="line">    ws[<span class="string">'B%s'</span> % work_num] = work_2</span><br><span class="line">    ws[<span class="string">'C%s'</span> % work_num] = work_3</span><br><span class="line">    ws[<span class="string">'D%s'</span> % work_num] = work_4</span><br><span class="line">    <span class="comment">#ws['E%s' % work_num] = work_5</span></span><br><span class="line">    ws[<span class="string">'G%s'</span> % work_num] = work_7</span><br><span class="line">    <span class="comment">#阈值判断</span></span><br><span class="line">    opration = work_5[<span class="number">0</span>:<span class="number">1</span>]</span><br><span class="line">    opration_a = int(work_5[<span class="number">1</span>:].split(<span class="string">'%'</span>)[<span class="number">0</span>])</span><br><span class="line">    opration_b = int(work_6.split(<span class="string">'%'</span>)[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    opration_error = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> opration == <span class="string">'&gt;'</span>:</span><br><span class="line">        ws[<span class="string">'E%s'</span> % work_num] = work_5</span><br><span class="line">        <span class="keyword">if</span> opration_b &gt; opration_a:</span><br><span class="line">            opration_error = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">elif</span> opration == <span class="string">'&lt;'</span>:</span><br><span class="line">        ws[<span class="string">'E%s'</span> % work_num] = work_5</span><br><span class="line">        <span class="keyword">if</span> opration_b &lt; opration_a:</span><br><span class="line">            opration_error = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">elif</span> opration == <span class="string">'='</span>:</span><br><span class="line">        <span class="comment">#ws['E%s' % work_num] = work_5[1:]</span></span><br><span class="line">        ws[<span class="string">'E%s'</span> % work_num] = <span class="string">"等于%s"</span> % work_5[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> opration_a == opration_b:</span><br><span class="line">            opration_error = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> opration_error:</span><br><span class="line">        ws[<span class="string">'F%s'</span> % work_num] = work_6</span><br><span class="line">        ws[<span class="string">'F%s'</span> % work_num].fill = openpyxl.styles.PatternFill(start_color=<span class="string">'49da3f'</span>, fill_type=<span class="string">'solid'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ws[<span class="string">'F%s'</span> % work_num] = work_6</span><br><span class="line">        ws[<span class="string">'F%s'</span> % work_num].fill = openpyxl.styles.PatternFill(start_color=<span class="string">'ee346c'</span>, fill_type=<span class="string">'solid'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#所有数据添加边框</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> list(<span class="string">'ABCDEFG'</span>):</span><br><span class="line">        ws[x + str(work_num)].border = openpyxl.styles.Border(left=left, right=right, top=top, bottom=bottom)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">host_cmd</span><span class="params">(host,port,username,password)</span>:</span></span><br><span class="line">    <span class="string">"""传账号信息，返回结果"""</span></span><br><span class="line">    ssh = paramiko.SSHClient()</span><br><span class="line">    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    ssh.connect(host, port, username, password)</span><br><span class="line">    <span class="keyword">with</span> open(host+<span class="string">'.txt'</span>) <span class="keyword">as</span> cmding:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> cmding:</span><br><span class="line">            i = i.strip().split(<span class="string">'#'</span>)</span><br><span class="line">            stdin, stdout, stderr = ssh.exec_command(i[<span class="number">2</span>])</span><br><span class="line">            stdout_info = stdout.read().strip()</span><br><span class="line">            <span class="keyword">yield</span> i[<span class="number">0</span>],i[<span class="number">1</span>],i[<span class="number">2</span>],i[<span class="number">3</span>],stdout_info,i[<span class="number">4</span>]</span><br><span class="line">    ssh.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    work_num = <span class="number">2</span> <span class="comment">#word的行标签</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"开始执行！"</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'account.txt'</span>) <span class="keyword">as</span> df:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> df:</span><br><span class="line">            i = i.strip().split(<span class="string">' '</span>)</span><br><span class="line">            s_ip = i[<span class="number">0</span>]</span><br><span class="line">            s_port = int(i[<span class="number">1</span>])</span><br><span class="line">            s_name = i[<span class="number">2</span>]</span><br><span class="line">            s_passwd = i[<span class="number">3</span>]</span><br><span class="line">            cmd_info = host_cmd(s_ip,s_port,s_name,s_passwd)</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"获取%s的信息"</span> % s_ip</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> cmd_info:</span><br><span class="line">                work(work_num,x[<span class="number">0</span>],s_ip,x[<span class="number">1</span>],x[<span class="number">2</span>],x[<span class="number">3</span>],x[<span class="number">4</span>],x[<span class="number">5</span>])</span><br><span class="line">                work_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    wb.save(<span class="string">r'C:\Users\Jesse\Desktop\checking.xlsx'</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"执行完成！"</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p> 执行完成后会再桌面生成一个checking.xlsx的文档，截图如下 。</p>
<img src="/polling/20170321213442.png" class title="This is Result">


]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>profile.d下的脚本失效</title>
    <url>/profile-d/</url>
    <content><![CDATA[<p>在旧机器上装了个go的环境，发现重新登录后go的环境变量丢失了，需要手动source 执行/etc/profile.d脚本，脚本如下<a id="more"></a>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat  /etc/profile.d/go.sh</span><br><span class="line">-------------------------</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure>
<p>感觉这个脚本没什么问题，查看<code>/etc/profile</code>，发现文件最后重新刷新了环境变量，把go的环境变量覆盖了，/etc/profile如下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/profile</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System wide environment and startup programs, <span class="keyword">for</span> login setup</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Functions and aliases go <span class="keyword">in</span> /etc/bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> It<span class="string">'s NOT a good idea to change this file unless you know what you</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> are doing. It<span class="string">'s much better to create a custom.sh shell script in</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/profile.d/ to make custom changes to your environment, as this</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> will prevent the need <span class="keyword">for</span> merging <span class="keyword">in</span> future updates.</span></span><br><span class="line"></span><br><span class="line">pathmunge () &#123;</span><br><span class="line">    case ":$&#123;PATH&#125;:" in</span><br><span class="line">        *:"$1":*)</span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            if [ "$2" = "after" ] ; then</span><br><span class="line">                PATH=$PATH:$1</span><br><span class="line">            else</span><br><span class="line">                PATH=$1:$PATH</span><br><span class="line">            fi</span><br><span class="line">    esac</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ -x /usr/bin/id ]; then</span><br><span class="line">    if [ -z "$EUID" ]; then</span><br><span class="line">        # ksh workaround</span><br><span class="line">        EUID=`/usr/bin/id -u`</span><br><span class="line">        UID=`/usr/bin/id -ru`</span><br><span class="line">    fi</span><br><span class="line">    USER="`/usr/bin/id -un`"</span><br><span class="line">    LOGNAME=$USER</span><br><span class="line">    MAIL="/var/spool/mail/$USER"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Path manipulation</span></span><br><span class="line">if [ "$EUID" = "0" ]; then</span><br><span class="line">    pathmunge /usr/sbin</span><br><span class="line">    pathmunge /usr/local/sbin</span><br><span class="line">else</span><br><span class="line">    pathmunge /usr/local/sbin after</span><br><span class="line">    pathmunge /usr/sbin after</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">HOSTNAME=`/usr/bin/hostname 2&gt;/dev/null`</span><br><span class="line">HISTSIZE=1000</span><br><span class="line">if [ "$HISTCONTROL" = "ignorespace" ] ; then</span><br><span class="line">    export HISTCONTROL=ignoreboth</span><br><span class="line">else</span><br><span class="line">    export HISTCONTROL=ignoredups</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> By default, we want <span class="built_in">umask</span> to get <span class="built_in">set</span>. This sets it <span class="keyword">for</span> login shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Current threshold <span class="keyword">for</span> system reserved uid/gids is 200</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You could check uidgid reservation validity <span class="keyword">in</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /usr/share/doc/setup-*/uidgid file</span></span><br><span class="line">if [ $UID -gt 199 ] &amp;&amp; [ "`/usr/bin/id -gn`" = "`/usr/bin/id -un`" ]; then</span><br><span class="line">    umask 002</span><br><span class="line">else</span><br><span class="line">    umask 022</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">for i in /etc/profile.d/*.sh /etc/profile.d/sh.local ; do</span><br><span class="line">    if [ -r "$i" ]; then</span><br><span class="line">        if [ "$&#123;-#*i&#125;" != "$-" ]; then </span><br><span class="line">            . "$i"</span><br><span class="line">        else</span><br><span class="line">            . "$i" &gt;/dev/null</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">unset i</span><br><span class="line">unset -f pathmunge</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/php-7.4.21/bin</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/php-7.4.21/bin:/root/bin:/usr/local/cmake/bin</span><br></pre></td></tr></table></figure>
<p>这里把php和cmake的环境变量删除，然后把变量写到profile.d下面即可。    </p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>prometheus+grafana</title>
    <url>/prometheus/</url>
    <content><![CDATA[<p>普罗米修斯和grafana安装<a id="more"></a></p>
<ul>
<li>go：1.14.4</li>
<li>prometheus： 2.19.0</li>
<li>grafana：7.0.3</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget  https://github.com/prometheus/prometheus/releases/download/v2.19.0/prometheus-2.19.0.linux-amd64.tar.gz</span><br><span class="line">wget https://dl.grafana.com/oss/release/grafana-7.0.3-1.x86_64.rpm</span><br><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf prometheus-2.19.0.linux-amd64.tar.gz -C /usr/local</span><br><span class="line">tar -zxvf node_exporter-1.0.0.linux-amd64.tar.gz -C /usr/local</span><br><span class="line">yum localinstall grafana-7.0.3-1.x86_64.rpm  -y</span><br><span class="line">systemctl start grafana-server</span><br><span class="line"></span><br><span class="line">vim  /usr/lib/systemd/system/node_exporter.service</span><br><span class="line">--------------------------------------------------</span><br><span class="line">[Unit]</span><br><span class="line">Description=node_exporter</span><br><span class="line">Documentation=https://prometheus.io</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/node_exporter-1.0.0.linux-amd64/node_exporter</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim /usr/lib/systemd/system/prometheus.service</span><br><span class="line">----------------------------------------------</span><br><span class="line">[Unit]</span><br><span class="line">Description=prometheus</span><br><span class="line">Documentation=https://prometheus.io</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/prometheus-2.19.0.linux-amd64/prometheus  --config.file=/usr/local/prometheus-2.19.0.linux-amd64/prometheus.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl start prometheus.service</span><br><span class="line">systemctl start node_exporter.service</span><br><span class="line"></span><br><span class="line">systemctl enable prometheus.service</span><br><span class="line">systemctl enable node_exporter.service</span><br><span class="line">systemctl enable grafana-server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim /usr/local/prometheus-2.19.0.linux-amd64/prometheus.yml</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">scrape_configs:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  - job_name: 'prometheus'</span><br><span class="line"></span><br><span class="line">    # metrics_path defaults to '/metrics'</span><br><span class="line">    # scheme defaults to 'http'.</span><br><span class="line"></span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: ['localhost:9090']</span><br><span class="line"></span><br><span class="line">  - job_name: 'server'</span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: ['localhost:9100']</span><br></pre></td></tr></table></figure>



<p>这里node_exporter监控节点都需要systemd来守护进程，然后操作prometheus.yml 添加相关机器信息.</p>
]]></content>
      <categories>
        <category>prometheus</category>
      </categories>
  </entry>
  <entry>
    <title>nginx重试机制</title>
    <url>/proxy-next-upstream/</url>
    <content><![CDATA[<p>nginx通过proxy_next_upstream实现容灾<a id="more"></a>，2台服务器，一台是旧数据，一台是新数据，如果旧数据没有就请求新数据那台服务器，代码如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">upstream apiServer&#123;</span><br><span class="line">        server 192.168.122.100:8084;</span><br><span class="line">        server 192.168.122.110:8084 backup;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location  /api/&#123;</span><br><span class="line">            proxy_next_upstream error timeout invalid_header http_500 http_503 http_404 non_idempotent;</span><br><span class="line">            proxy_pass http://apiServer;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">            add_header Access-Control-Allow-Origin *;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>代理ip</title>
    <url>/proxyip/</url>
    <content><![CDATA[<p> 整理使用过程，方便以后学习。 <a id="more"></a>（现在抓ip的网站已经关闭，by20200405）， 有时候爬虫需要用到代理ip，将之前的脚本重新整理了一下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf-8'</span>)</span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">HEADER = &#123;<span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">          <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">          <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">          <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko)'</span>,</span><br><span class="line">          <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">          <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">          <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8'</span>,</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">robustCrawl</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorate</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">u"sorry, 抓取出错。错误原因:"</span></span><br><span class="line">            <span class="keyword">print</span> e</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decorate</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHtmlTree</span><span class="params">(url, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> requests</span><br><span class="line">    <span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">    header = &#123;<span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">              <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">              <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">              <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko)'</span>,</span><br><span class="line">              <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">              <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">              <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8'</span>,</span><br><span class="line">              &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        html = requests.get(url=url, headers=header, timeout=<span class="number">30</span>).content</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> etree.HTML(html)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetFreeProxy</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @robustCrawl</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">freeProxyFirst</span><span class="params">(page=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        抓取快代理IP http://www.kuaidaili.com/</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        url_list = (<span class="string">'http://www.kuaidaili.com/proxylist/&#123;page&#125;/'</span>.format(page=page) <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, page + <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">            tree = getHtmlTree(url)</span><br><span class="line">            proxy_list = tree.xpath(<span class="string">'.//div[@id="index_free_list"]//tbody/tr'</span>)</span><br><span class="line">            <span class="keyword">for</span> proxy <span class="keyword">in</span> proxy_list:</span><br><span class="line">                <span class="keyword">yield</span> <span class="string">':'</span>.join(proxy.xpath(<span class="string">'./td/text()'</span>)[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @robustCrawl</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">freeProxySecond</span><span class="params">(proxy_number=<span class="number">100</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        抓取代理66 http://www.66ip.cn/</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        url = <span class="string">"http://m.66ip.cn/mo.php?sxb=&amp;tqsl=&#123;&#125;&amp;port=&amp;export=&amp;ktip=&amp;sxa=&amp;submit=%CC%E1++%C8%A1&amp;textarea="</span>.format(</span><br><span class="line">            proxy_number)</span><br><span class="line">        html = requests.get(url, headers=HEADER).content</span><br><span class="line">        <span class="keyword">for</span> proxy <span class="keyword">in</span> re.findall(<span class="string">r'\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;:\d&#123;1,5&#125;'</span>, html):</span><br><span class="line">            <span class="keyword">yield</span> proxy</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @robustCrawl</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">freeProxyThird</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        抓取西刺代理 http://api.xicidaili.com/free2016.txt</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        url_list = [<span class="string">'http://www.xicidaili.com/nn'</span>,  <span class="comment"># 高匿</span></span><br><span class="line">                    <span class="string">'http://www.xicidaili.com/nt'</span>,  <span class="comment"># 透明</span></span><br><span class="line">                    ]</span><br><span class="line">        <span class="keyword">for</span> each_url <span class="keyword">in</span> url_list:</span><br><span class="line">            tree = getHtmlTree(each_url)</span><br><span class="line">            proxy_list = tree.xpath(<span class="string">'.//table[@id="ip_list"]//tr'</span>)</span><br><span class="line">            <span class="keyword">for</span> proxy <span class="keyword">in</span> proxy_list:</span><br><span class="line">                <span class="keyword">yield</span> <span class="string">':'</span>.join(proxy.xpath(<span class="string">'./td/text()'</span>)[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @robustCrawl</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">freeProxyFourth</span><span class="params">(page=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        抓取酷伯伯代理 http://www.coobobo.com/free-http-proxy</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        url_list = (<span class="string">"http://www.coobobo.com/free-http-proxy/&#123;page&#125;/"</span>.format(page=page) <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, page+<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">            tree = getHtmlTree(url)</span><br><span class="line">            proxy_list = tree.xpath(<span class="string">'.//div[@class="col-md-12"]//tbody/tr'</span>)</span><br><span class="line">            <span class="keyword">for</span> proxy <span class="keyword">in</span> proxy_list:</span><br><span class="line">                prot =  proxy.xpath(<span class="string">'./td/text()'</span>)[<span class="number">1</span>:<span class="number">2</span>][<span class="number">0</span>]</span><br><span class="line">                ip = proxy.xpath(<span class="string">'./td/script/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">                ip = <span class="string">"."</span>.join(re.findall(<span class="string">'\d+'</span>,ip))</span><br><span class="line">                <span class="keyword">yield</span> <span class="string">"&#123;ip&#125;:&#123;prot&#125;"</span>.format(ip=ip, prot=prot)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @robustCrawl</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">freeProxyFifth</span><span class="params">(page=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        抓取开心代理 http://www.kxdaili.com/dailiip/1/1.html#ip</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        url_list = (<span class="string">"http://www.kxdaili.com/dailiip/1/&#123;page&#125;.html#ip"</span>.format(page=page) <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, page+<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">            tree = getHtmlTree(url)</span><br><span class="line">            proxy_list = tree.xpath(<span class="string">'.//table[@class="ui table segment"]//tbody/tr'</span>)</span><br><span class="line">            <span class="keyword">for</span> proxy <span class="keyword">in</span> proxy_list:</span><br><span class="line">                <span class="keyword">yield</span> <span class="string">":"</span>.join(proxy.xpath(<span class="string">'./td/text()'</span>)[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @robustCrawl</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">freeProxySixth</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        抓取ip181  http://www.ip181.com/</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        url = <span class="string">"http://www.ip181.com/"</span></span><br><span class="line">        tree = getHtmlTree(url)</span><br><span class="line">        proxy_list = tree.xpath(<span class="string">'.//div[@class="col-md-12"]//tbody/tr'</span>)</span><br><span class="line">        <span class="keyword">for</span> proxy <span class="keyword">in</span> proxy_list[<span class="number">1</span>:]:</span><br><span class="line">            <span class="keyword">yield</span> <span class="string">":"</span>.join(proxy.xpath(<span class="string">'./td/text()'</span>)[:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    gg = GetFreeProxy()</span><br><span class="line">    <span class="comment">#for x in gg.freeProxyFirst():</span></span><br><span class="line">    <span class="comment">#    print x</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#for y in gg.freeProxySecond():</span></span><br><span class="line">    <span class="comment">#   print y</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#for z in gg.freeProxyThird(1):</span></span><br><span class="line">    <span class="comment">#    print z</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#for o in gg.freeProxyFourth():</span></span><br><span class="line">    <span class="comment">#    print o</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#for p in gg.freeProxyFifth(1):</span></span><br><span class="line">    <span class="comment">#    print p</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> q <span class="keyword">in</span> gg.freeProxySixth():</span><br><span class="line">        <span class="keyword">print</span> q</span><br></pre></td></tr></table></figure>






]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>pt-table-sync修复</title>
    <url>/pt-table-sync/</url>
    <content><![CDATA[<p>mysql数据不一致修复<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">tab=(</span><br><span class="line">tables1</span><br><span class="line">tables2</span><br><span class="line">tables3</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">log_path=/home/pt-sync/log.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i in "$&#123;tab[@]&#125;";do</span><br><span class="line">    date  &gt;&gt; $log_path</span><br><span class="line">    pt-table-sync --execute --charset=utf8 --transaction --databases=app --tables=$i u=root,p=主库密码,h=主库地址,P=3306 u=root,p=从库密码,h=127.0.0.1,P=3306  --no-check-slave --verbose &gt;&gt; $log_path</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>–transaction    锁表操作(LOCK TABLES)不会执行，<br>–no-check-slave    不检查目标服务器是否是从库<br>–verbose    打印详细的操作信息</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>pure-ftp部署</title>
    <url>/pureftp/</url>
    <content><![CDATA[<p>记录安装过程，方便以后学习。<a id="more"></a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这里yum安装，前提是已经安装过epel</span></span><br><span class="line">[root@localhost ~]# yum install -y epel-release</span><br><span class="line">[root@localhost ~]# yum install -y pure-ftpd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份配置</span></span><br><span class="line">[root@localhost ~]#cp /etc/pure-ftpd/pure-ftpd.conf&#123;,_bak&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">配置参考</span></span><br><span class="line">[root@localhost ~]#cat /etc/pure-ftpd/pure-ftpd.conf</span><br><span class="line">ChrootEveryone yes                   </span><br><span class="line">BrokenClientsCompatibility yes       </span><br><span class="line">Daemonize yes                        </span><br><span class="line">MaxClientsNumber 50                  </span><br><span class="line">MaxClientsPerIP 50                   </span><br><span class="line">VerboseLog yes                       </span><br><span class="line">DisplayDotFiles no                   </span><br><span class="line">AnonymousOnly no                     </span><br><span class="line">NoAnonymous yes                      </span><br><span class="line">SyslogFacility none                  </span><br><span class="line">DontResolve yes                      </span><br><span class="line">MaxIdleTime 15                       </span><br><span class="line">LimitRecursion 2000 8                </span><br><span class="line">AnonymousCanCreateDirs no            </span><br><span class="line">MaxLoad 4                            </span><br><span class="line">AntiWarez yes                        </span><br><span class="line">Umask 113:002                        </span><br><span class="line">MinUID 100                           </span><br><span class="line">AllowUserFXP no                      </span><br><span class="line">AllowAnonymousFXP no                 </span><br><span class="line">ProhibitDotFilesWrite no             </span><br><span class="line">ProhibitDotFilesRead no              </span><br><span class="line">AutoRename no                        </span><br><span class="line">AnonymousCantUpload yes              </span><br><span class="line">AltLog /var/log/pureftpd.log         </span><br><span class="line">PureDB /etc/pure-ftpd/pureftpd.pdb   </span><br><span class="line">MaxDiskUsage 99                      </span><br><span class="line">CreateHomeDir yes                    </span><br><span class="line">CustomerProof yes</span><br></pre></td></tr></table></figure>

<hr>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">ChrootEveryone yes</td>
<td align="left">将每个用户限制在自己的home目录下</td>
</tr>
<tr>
<td align="left">BrokenClientsCompatibility yes</td>
<td align="left">兼容ie等比较非正规化的ftp客户端</td>
</tr>
<tr>
<td align="left">Daemonize yes</td>
<td align="left">守护进程模式（后台模式）</td>
</tr>
<tr>
<td align="left">MaxClientsNumber 50</td>
<td align="left">最大的客户端数量</td>
</tr>
<tr>
<td align="left">MaxClientsPerIP 50</td>
<td align="left">同一个IP允许的连接数</td>
</tr>
<tr>
<td align="left">VerboseLog yes</td>
<td align="left">记录所有客户端命令</td>
</tr>
<tr>
<td align="left">DisplayDotFiles no</td>
<td align="left">不显示隐藏文件</td>
</tr>
<tr>
<td align="left">AnonymousOnly no</td>
<td align="left">不允许验证用户，只作为匿名ftp服务器</td>
</tr>
<tr>
<td align="left">NoAnonymous yes</td>
<td align="left">不允许匿名用户连接</td>
</tr>
<tr>
<td align="left">SyslogFacility none</td>
<td align="left">将何种类型的日志同步写入到syslog中，none为禁用</td>
</tr>
<tr>
<td align="left">DontResolve yes</td>
<td align="left">在日志文件中不解析主机名</td>
</tr>
<tr>
<td align="left">MaxIdleTime 15</td>
<td align="left">客户端允许的最大的空闲时间为15分钟</td>
</tr>
<tr>
<td align="left">LimitRecursion 2000 8</td>
<td align="left">ls命令的递归限制 第一个是文件显示的最大数目，第二个是最大的子目录深度</td>
</tr>
<tr>
<td align="left">AnonymousCanCreateDirs no</td>
<td align="left">是否允许匿名用户创建目录</td>
</tr>
<tr>
<td align="left">MaxLoad 4</td>
<td align="left">如果系统被 loaded 超过下面的值，匿名用户会被禁止下载</td>
</tr>
<tr>
<td align="left">PassivePortRange 45000 50000</td>
<td align="left">在被动连接模式下为其分配的端口范围</td>
</tr>
<tr>
<td align="left">AnonymousRatio 1 10</td>
<td align="left">匿名用户上传/下载比率</td>
</tr>
<tr>
<td align="left">UserRatio 1 10</td>
<td align="left">所有用户上传/下载比率</td>
</tr>
<tr>
<td align="left">AntiWarez yes</td>
<td align="left">禁止下载所有者为‘ftp’的文件</td>
</tr>
<tr>
<td align="left">AnonymousBandwidth 200</td>
<td align="left">匿名用户最大带宽限制，单位 KB/s</td>
</tr>
<tr>
<td align="left">UserBandwidth 8</td>
<td align="left">所有用户的最大带宽限制（包括匿名）单位 KB/s</td>
</tr>
<tr>
<td align="left">Umask 113:002</td>
<td align="left">新建文件默认掩码. &lt;文件掩码&gt;:&lt;目录掩码&gt;</td>
</tr>
<tr>
<td align="left">MinUID 100</td>
<td align="left">认证用户允许登陆的最小组ID（UID）</td>
</tr>
<tr>
<td align="left">AllowUserFXP no</td>
<td align="left">仅允许认证用户进行FXP传输</td>
</tr>
<tr>
<td align="left">AllowAnonymousFXP no</td>
<td align="left">对匿名用户和非匿名用户允许进行匿名FXP传输</td>
</tr>
<tr>
<td align="left">ProhibitDotFilesWrite no</td>
<td align="left">用户不能删除/写入隐藏文件，即便是文件的拥有者也不允许</td>
</tr>
<tr>
<td align="left">ProhibitDotFilesRead no</td>
<td align="left">禁止读取隐藏文件(如 .history, .ssh…)</td>
</tr>
<tr>
<td align="left">AutoRename no</td>
<td align="left">允许覆盖文件</td>
</tr>
<tr>
<td align="left">AnonymousCantUpload yes</td>
<td align="left">不允许匿名用户上传文件 (no = 允许上传)</td>
</tr>
<tr>
<td align="left">AltLog /var/log/pureftpd.log</td>
<td align="left">这个日志文件可以被www流量分析工具来处理</td>
</tr>
<tr>
<td align="left">PureDB /etc/pure-ftpd/pureftpd.pdb</td>
<td align="left">PureDB用户数据库</td>
</tr>
<tr>
<td align="left">MaxDiskUsage 99</td>
<td align="left">磁盘空间来保护日志文件。当所在磁盘分区使用超过百分之99时，将不在接受新的上传</td>
</tr>
<tr>
<td align="left">CreateHomeDir yes</td>
<td align="left">用户主目录不存在的话，自动创建目录</td>
</tr>
<tr>
<td align="left">CustomerProof yes</td>
<td align="left">阻止普通用户因误操作而执行的错误命令如’chmod 0 public_html’</td>
</tr>
</tbody></table>
<hr>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>下面我们开始对账号的配置，然后输入虚拟用户的密码(输入2次) </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]#pure-pw useradd test1 -u peng -g peng -d /data/www/ -m</span><br></pre></td></tr></table></figure>

<p> <code>pure-pw useradd</code> 是创建虚拟用户名，也就是test1咯<br><code>-u peng -g peng</code> 这里是寄生到那个系统的用户名，以你实际情况为准<br><code>-d</code> 就是你的FTP目录<br><code>-m</code> 把用户密码加入PDB数据库中，不需要重启FTP </p>
<hr>
<p>下面给一些常用的参数，大家可以按照需求组合使用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-t 下载带宽限制</span><br><span class="line">-T 上传带宽限制</span><br><span class="line">-n 最大文件数目</span><br><span class="line">-N 磁盘配额(单位M)</span><br><span class="line">-q 上传速度限制</span><br><span class="line">-Q 下载速度限制</span><br><span class="line">-r 允许某些ip/网段的客户端访问</span><br><span class="line">-R 拒绝某些ip/网段的客户端访问</span><br><span class="line">-i 允许本地某些ip/网段访问(allow local host)</span><br><span class="line">-I 拒绝本地某些ip/网段访问(deny local host)</span><br><span class="line">-y 同时最大连接数目</span><br><span class="line">-z 允许连接服务器的时间段，格式hhmm-hhmm，如 -z 0412-1618代表用户只能在凌 晨4点12分至下午4点18分连接服务器</span><br><span class="line">-f passwd_file</span><br><span class="line">-F puredb_file</span><br><span class="line">-m 不必重启Pure-FTPd以及重新生成puredb_file文件</span><br><span class="line">如果进行帐户操作时，没有带-m 参数，那就应该手动更新一下pdb数据：</span><br><span class="line">/usr/local/stow/pure-ftpd-1.0.21/bin/pure-pw mkdb pureftpd.pdb</span><br></pre></td></tr></table></figure>

<hr>
<p>这里介绍一些pure-pw的其他用法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pure-pw useradd 添加用户</span><br><span class="line">pure-pw userdel 删除用户</span><br><span class="line">pure-pw usermod 修改用户</span><br><span class="line">pure-pw show 查看用户详细信息</span><br><span class="line">pure-pw list 查看所有用户设置</span><br><span class="line">pure-pw mkdb 生成数据文件</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云安全组自动更新(上)</title>
    <url>/py0127/</url>
    <content><![CDATA[<p>由于办公室没有固定ip，这里参考阿里云文档写了个自动更新防火墙的小脚本<a id="more"></a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> aliyunsdkcore.client <span class="keyword">import</span> AcsClient</span><br><span class="line"><span class="keyword">from</span> aliyunsdkecs.request.v20140526.AuthorizeSecurityGroupRequest <span class="keyword">import</span> AuthorizeSecurityGroupRequest</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_ip</span><span class="params">()</span>:</span></span><br><span class="line">    headers=&#123;<span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">              <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">              <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">              <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko)'</span>,</span><br><span class="line">              <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">              <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">              <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8'</span>,</span><br><span class="line">              &#125;</span><br><span class="line">    ip_html = requests.get(<span class="string">"https://api.ip.sb/ip"</span>,headers=headers)</span><br><span class="line">    ip = ip_html.text</span><br><span class="line">    ip = ip.encode(<span class="string">'gbk'</span>)</span><br><span class="line">    <span class="keyword">return</span> ip.strip()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_aliy</span><span class="params">(SourceCidrIp,Description)</span>:</span></span><br><span class="line">    client = AcsClient(<span class="string">'&lt;accessKeyId&gt;'</span>, <span class="string">'&lt;accessSecret&gt;'</span>, <span class="string">'cn-qingdao'</span>)</span><br><span class="line"></span><br><span class="line">    request = AuthorizeSecurityGroupRequest()</span><br><span class="line">    request.set_accept_format(<span class="string">'json'</span>)</span><br><span class="line"></span><br><span class="line">    request.set_SecurityGroupId(<span class="string">"安全组ID"</span>)</span><br><span class="line">    request.set_IpProtocol(<span class="string">"tcp"</span>)</span><br><span class="line">    request.set_PortRange(<span class="string">"3306/3306"</span>)</span><br><span class="line">    request.set_SourceCidrIp(SourceCidrIp)</span><br><span class="line">    request.set_Description(Description)</span><br><span class="line"></span><br><span class="line">    response = client.do_action_with_exception(request)</span><br><span class="line">    print(response)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    ip_file = os.path.exists(<span class="string">'ip.txt'</span>)</span><br><span class="line">    now_time =time.strftime(<span class="string">"%Y-%m-%d"</span>, time.localtime())</span><br><span class="line">    <span class="keyword">if</span> ip_file <span class="keyword">is</span> <span class="literal">False</span>:</span><br><span class="line">        <span class="comment">#没有文件，获取外网ip并写入文件</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'ip.txt'</span>,<span class="string">'w+'</span>) <span class="keyword">as</span> df:</span><br><span class="line">            ip= get_ip()</span><br><span class="line">            df.write(ip)</span><br><span class="line">        upload_aliy(ip,<span class="string">"办公室&#123;&#125;"</span>.format(now_time))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment">#有文件，读取文件与现在的ip对比</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'ip.txt'</span>,<span class="string">'w+'</span>) <span class="keyword">as</span> df:</span><br><span class="line">            old_ip = df.read()</span><br><span class="line">        new_ip = get_ip()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> new_ip != old_ip:</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">'ip.txt'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> df:</span><br><span class="line">                df.write(new_ip)</span><br><span class="line">            upload_aliy(new_ip, <span class="string">"办公室&#123;&#125;"</span>.format(now_time))</span><br></pre></td></tr></table></figure>
<p>这个暂时还不完美，不能删除之前无效ip，没有容错机制，等后续有时间在补充。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云安全组自动更新(下)</title>
    <url>/py0803/</url>
    <content><![CDATA[<p>完善之前脚本，添加删除无效的ip，添加polardb防火墙<a id="more"></a>，由于办公室有2条出网ip，环境问题我在自己虚拟机直接请求那2台服务器的地址来获取当前外网ip（用计划任务每分钟定时向文件写入最新ip地址），阿里云的防火墙白名单组名必须为<code>bgs</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">将办公室2个出网ip添加到相关阿里云服务的白名单</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> aliyunsdkecs.request.v20140526.AuthorizeSecurityGroupRequest <span class="keyword">import</span> AuthorizeSecurityGroupRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkecs.request.v20140526.RevokeSecurityGroupRequest <span class="keyword">import</span> RevokeSecurityGroupRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkcore.client <span class="keyword">import</span> AcsClient</span><br><span class="line"><span class="keyword">from</span> aliyunsdkecs.request.v20140526.DescribeSecurityGroupAttributeRequest <span class="keyword">import</span> DescribeSecurityGroupAttributeRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkpolardb.request.v20170801.DescribeDBClusterAccessWhitelistRequest <span class="keyword">import</span> DescribeDBClusterAccessWhitelistRequest</span><br><span class="line"><span class="keyword">from</span> aliyunsdkpolardb.request.v20170801.ModifyDBClusterAccessWhitelistRequest <span class="keyword">import</span> ModifyDBClusterAccessWhitelistRequest</span><br><span class="line"><span class="comment"># 钉钉通知</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DingMessage</span><span class="params">()</span>:</span></span><br><span class="line">    webhook = <span class="string">"钉钉webhook"</span></span><br><span class="line"></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">        <span class="string">"Charset"</span>: <span class="string">"UTF-8"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tex = <span class="string">"##### 办公室阿里云白名单 出现异常! "</span></span><br><span class="line">    message = &#123;</span><br><span class="line">        <span class="string">"msgtype"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">        <span class="string">"markdown"</span>: &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"aliy iptables"</span>,</span><br><span class="line">            <span class="string">"text"</span>: tex</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"at"</span>: &#123;</span><br><span class="line">            <span class="string">"atMobiles"</span>: [<span class="string">"110"</span>],</span><br><span class="line">            <span class="string">"isAtAll"</span>: <span class="literal">False</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    message_json = json.dumps(message)</span><br><span class="line">    requests.post(url=webhook, data=message_json, headers=header)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_ip</span><span class="params">()</span>:</span></span><br><span class="line">    ip_list =[]</span><br><span class="line">    ip_html1 = requests.get(<span class="string">"http://192.168.0.110"</span>)</span><br><span class="line">    ip1 = ip_html1.text</span><br><span class="line">    ip_list.append(ip1.strip())</span><br><span class="line">    ip_html2 = requests.get(<span class="string">"http://192.168.0.120"</span>)</span><br><span class="line">    ip2 = ip_html2.text</span><br><span class="line">    ip_list.append(ip2.strip())</span><br><span class="line">    <span class="keyword">if</span> len(ip_list) != <span class="number">2</span>:</span><br><span class="line">        DingMessage()</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> ip_list</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ecs</span>:</span></span><br><span class="line">    <span class="comment"># ecs的安全组3306添加</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,ip_list)</span>:</span></span><br><span class="line">        self.ip_list = ip_list</span><br><span class="line">        self.iptablesid = <span class="string">"安全组ID"</span></span><br><span class="line">        self.select_ip_list = []</span><br><span class="line">        self.client = AcsClient(<span class="string">'&lt;accessKeyId&gt;'</span>, <span class="string">'&lt;accessSecret&gt;'</span>, <span class="string">'cn-qingdao'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_ecsip</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        request = DescribeSecurityGroupAttributeRequest()</span><br><span class="line">        request.set_accept_format(<span class="string">'json'</span>)</span><br><span class="line"></span><br><span class="line">        request.set_SecurityGroupId(self.iptablesid)</span><br><span class="line"></span><br><span class="line">        response = self.client.do_action_with_exception(request)</span><br><span class="line">        ipinfo = json.loads(response)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> ipinfo[<span class="string">"Permissions"</span>][<span class="string">"Permission"</span>]:</span><br><span class="line">            <span class="keyword">if</span> i[<span class="string">"Description"</span>] == <span class="string">'bgs'</span>:</span><br><span class="line">                self.select_ip_list.append(i[<span class="string">"SourceCidrIp"</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ecsip</span><span class="params">(self,ip)</span>:</span></span><br><span class="line">        request = RevokeSecurityGroupRequest()</span><br><span class="line">        request.set_accept_format(<span class="string">'json'</span>)</span><br><span class="line"></span><br><span class="line">        request.set_SecurityGroupId(self.iptablesid)</span><br><span class="line">        request.set_PortRange(<span class="string">"3306/3306"</span>)</span><br><span class="line">        request.set_IpProtocol(<span class="string">"tcp"</span>)</span><br><span class="line">        request.set_Description(<span class="string">"bgs"</span>)</span><br><span class="line">        request.set_SourceCidrIp(ip)</span><br><span class="line"></span><br><span class="line">        self.client.do_action_with_exception(request)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_ecsip</span><span class="params">(self,ip)</span>:</span></span><br><span class="line">        request = AuthorizeSecurityGroupRequest()</span><br><span class="line">        request.set_accept_format(<span class="string">'json'</span>)</span><br><span class="line"></span><br><span class="line">        request.set_SecurityGroupId(self.iptablesid)</span><br><span class="line">        request.set_IpProtocol(<span class="string">"tcp"</span>)</span><br><span class="line">        request.set_PortRange(<span class="string">"3306/3306"</span>)</span><br><span class="line">        request.set_SourceCidrIp(ip)</span><br><span class="line">        request.set_Description(<span class="string">'bgs'</span>)</span><br><span class="line"></span><br><span class="line">        self.client.do_action_with_exception(request)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deals</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_ecsip()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 加入</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self.ip_list:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> self.select_ip_list:</span><br><span class="line">                self.add_ecsip(i)</span><br><span class="line">        <span class="comment"># 删除</span></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> self.select_ip_list:</span><br><span class="line">            <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> self.ip_list:</span><br><span class="line">                self.delete_ecsip(x)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">rds</span>:</span></span><br><span class="line">    <span class="comment"># polardb数据库添加办公室ip</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,ip_list)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.ip_list= ip_list</span><br><span class="line">        self.crmdbid= <span class="string">"数据库ID"</span></span><br><span class="line">        self.client = AcsClient(<span class="string">'&lt;accessKeyId&gt;'</span>, <span class="string">'&lt;accessSecret&gt;'</span>, <span class="string">'cn-qingdao'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取数据库的bgs ip list</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_rdsip</span><span class="params">(self)</span>:</span></span><br><span class="line">        request = DescribeDBClusterAccessWhitelistRequest()</span><br><span class="line">        request.set_accept_format(<span class="string">'json'</span>)</span><br><span class="line">        request.set_DBClusterId(self.crmdbid)</span><br><span class="line">        response = self.client.do_action_with_exception(request)</span><br><span class="line">        IpInfo = json.loads(response)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>  i  <span class="keyword">in</span>  IpInfo[<span class="string">"Items"</span>][<span class="string">"DBClusterIPArray"</span>]:</span><br><span class="line">            <span class="keyword">if</span> i[<span class="string">"DBClusterIPArrayName"</span>] == <span class="string">'bgs'</span>:</span><br><span class="line">                self.iplist = i[<span class="string">"SecurityIps"</span>].split(<span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># mode :Append | Delete  追加|删除</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_rdsip</span><span class="params">(self,ip,mode)</span>:</span></span><br><span class="line">        request = ModifyDBClusterAccessWhitelistRequest()</span><br><span class="line">        request.set_accept_format(<span class="string">'json'</span>)</span><br><span class="line"></span><br><span class="line">        request.set_DBClusterId(self.crmdbid)</span><br><span class="line">        request.set_DBClusterIPArrayName(<span class="string">"bgs"</span>)</span><br><span class="line">        request.set_SecurityIps(ip)</span><br><span class="line">        request.set_ModifyMode(mode)</span><br><span class="line">        self.client.do_action_with_exception(request)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deals</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_rdsip()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self.ip_list:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> self.iplist:</span><br><span class="line">                self.upload_rdsip(i,<span class="string">"Append"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> self.iplist:</span><br><span class="line">            <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> self.ip_list:</span><br><span class="line">                self.upload_rdsip(x,<span class="string">"Delete"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    ip_list =  get_ip()</span><br><span class="line">    print(ip_list)</span><br><span class="line">    ecs(ip_list).deals()</span><br><span class="line">    rds(ip_list).deals()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>python go exe压缩</title>
    <url>/pyGUI/</url>
    <content><![CDATA[<p>python，go exe压缩。<a id="more"></a></p>
<h5 id="python"><a href="#python" class="headerlink" title="python"></a>python</h5><p>用pipenv安装的依赖，然后用pyintaller打包工具进行打包，完成后用upx软件进行压缩</p>
<h5 id="go"><a href="#go" class="headerlink" title="go"></a>go</h5><p><code>go build -ldflags=&quot;-s -w -H windowsgui&quot; main.go</code><br><code>-ldflags</code>:参数<br><code>-s</code>:去掉符号信息<br><code>-w</code>:去掉DWARF调试信息<br><code>-H windowsgui</code>:以windows gui形式打包，不带dos窗口<br>完成后在用upx软件进行压缩</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>pyenv版本控制</title>
    <url>/pyenv/</url>
    <content><![CDATA[<p> 整理使用过程，方便以后学习。 <a id="more"></a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul>
<li>需要git， readline可以解决pyhton命令行界面的backpack无法使用的问题。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line"><span class="comment">#如果是mini环境需要安装以下</span></span><br><span class="line">yum groupinstall <span class="string">"Development Tools"</span></span><br><span class="line">yum -y install zlib*</span><br><span class="line">yum install bzip2-devel bzip2-libs -y</span><br><span class="line">yum install -y openssl-devel</span><br><span class="line">yum install sqlite-devel -y</span><br><span class="line">yum -y install readline-devel</span><br><span class="line"></span><br><span class="line">git clone https://github.com/yyuu/pyenv.git ~/.pyenv</span><br><span class="line">echo <span class="string">'export PYENV_ROOT="$HOME/.pyenv"'</span> &gt;&gt; ~/.bashrc</span><br><span class="line">echo <span class="string">'export PATH="$PYENV_ROOT/bin:$PATH"'</span> &gt;&gt; ~/.bashrc</span><br><span class="line">echo <span class="string">'eval "$(pyenv init -)"'</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="keyword">exec</span> $SHELL</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装virtualenv模块</span></span><br><span class="line">git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看以安装的版本</span></span><br><span class="line">pyenv versions</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看可安装的版本</span></span><br><span class="line">pyenv install -list</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装指定的版本</span></span><br><span class="line">pyenv install <span class="number">3.5</span><span class="number">.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.5.3命名为env3.5</span></span><br><span class="line">pyenv virtualenv <span class="number">3.5</span><span class="number">.3</span> env3<span class="number">.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建测试目录</span></span><br><span class="line">mkdir /home/test_python</span><br><span class="line">cd /home/test_python</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换版本到env3.5</span></span><br><span class="line">pyenv local env3<span class="number">.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新</span></span><br><span class="line">pyenv rehash</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line"></span><br><span class="line">[root@zabbix ~ <span class="number">13</span>:<span class="number">51</span>:<span class="number">35</span>&amp;&amp;<span class="number">19</span>]$cd /home/test_python</span><br><span class="line">[root@zabbix /home/test_python <span class="number">13</span>:<span class="number">52</span>:<span class="number">38</span>&amp;&amp;<span class="number">21</span>]$python -V</span><br><span class="line">Python <span class="number">3.5</span><span class="number">.3</span></span><br><span class="line">[root@zabbix /home/test_python <span class="number">13</span>:<span class="number">52</span>:<span class="number">47</span>&amp;&amp;<span class="number">22</span>]$cd ..</span><br><span class="line">[root@zabbix /home <span class="number">13</span>:<span class="number">52</span>:<span class="number">53</span>&amp;&amp;<span class="number">23</span>]$pwd</span><br><span class="line">/home</span><br><span class="line">[root@zabbix /home <span class="number">13</span>:<span class="number">52</span>:<span class="number">57</span>&amp;&amp;<span class="number">24</span>]$python -V</span><br><span class="line">Python <span class="number">2.7</span><span class="number">.13</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载</span></span><br><span class="line">pyenv uninstall <span class="number">2.7</span><span class="number">.13</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#切换回系统原版本</span></span><br><span class="line">pyenv local system</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>python安装</title>
    <url>/python-install/</url>
    <content><![CDATA[<p>安装3.7.1<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum  groupinstall Development tools -y</span><br><span class="line">wget https://mirrors.huaweicloud.com/python/3.7.1/Python-3.7.1.tgz</span><br><span class="line">tar  xf  Python-3.7.1.tgz</span><br><span class="line">cd  Python-3.7.1</span><br><span class="line">yum install zlib* -y</span><br><span class="line">yum install libffi-devel -y</span><br><span class="line">yum install openssl-devel -y</span><br><span class="line">./configure --with-ssl</span><br><span class="line">make  </span><br><span class="line">make install</span><br><span class="line">pip3 install pipenv</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>redis-sentinel</title>
    <url>/redis-sentinel/</url>
    <content><![CDATA[<p>记录使用过程，方便后期查询。<a id="more"></a></p>
<h4 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h4><p>采用5哨兵，3redis的模式。</p>
<table>
<thead>
<tr>
<th>IP地址</th>
<th>软件</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>192.168.1.78</td>
<td>哨兵</td>
<td></td>
</tr>
<tr>
<td>192.168.1.79</td>
<td>哨兵</td>
<td></td>
</tr>
<tr>
<td>192.168.1.80</td>
<td>哨兵，redis</td>
<td>主</td>
</tr>
<tr>
<td>192.168.1.81</td>
<td>哨兵，redis</td>
<td>副</td>
</tr>
<tr>
<td>192.168.1.82</td>
<td>哨兵，redis</td>
<td>副</td>
</tr>
</tbody></table>
<h5 id="redis主配置"><a href="#redis主配置" class="headerlink" title="redis主配置"></a>redis主配置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bind 0.0.0.0</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile "/var/run/redis_6379.pid"</span><br><span class="line">loglevel notice</span><br><span class="line">logfile "/var/log/redis/redis_6379.log"</span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename "dump_6379.rdb"</span><br><span class="line">dir "/opt/redis"</span><br><span class="line">masterauth "redistestpw"</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">requirepass "redistestpw"</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">slave-lazy-flush no</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble no</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events ""</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br></pre></td></tr></table></figure>

<h5 id="redis副配置"><a href="#redis副配置" class="headerlink" title="redis副配置"></a>redis副配置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bind 0.0.0.0</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile "/var/run/redis_6379.pid"</span><br><span class="line">loglevel notice</span><br><span class="line">logfile "/var/log/redis/redis_6379.log"</span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename "dump_6379.rdb"</span><br><span class="line">dir "/opt/redis"</span><br><span class="line">masterauth "redistestpw"</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">requirepass "redistestpw"</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">slave-lazy-flush no</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble no</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events ""</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">slaveof 192.168.1.80 6379</span><br></pre></td></tr></table></figure>

<h5 id="哨兵配置"><a href="#哨兵配置" class="headerlink" title="哨兵配置"></a>哨兵配置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bind 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line">daemonize yes</span><br><span class="line">port 26379</span><br><span class="line">loglevel notice</span><br><span class="line">logfile "/var/log/redis/sentinel.log"</span><br><span class="line">sentinel monitor mymaster 192.168.1.80 6379 2</span><br><span class="line">sentinel down-after-milliseconds mymaster 5000</span><br><span class="line">sentinel failover-timeout mymaster 8000</span><br><span class="line">sentinel auth-pass mymaster redistestpw</span><br><span class="line">sentinel parallel-syncs mymaster 1</span><br></pre></td></tr></table></figure>

<h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><p> 配置好了重启即可，防火墙注意配置端口的访问，最后在主写入测试，在从查看是否存在key即可。 </p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>redis的坑</title>
    <url>/redis/</url>
    <content><![CDATA[<p>常见的一些redis坑<a id="more"></a></p>
<ol>
<li><p>key过期时间丢失</p>
<p>用set设置key-value 之外，还可以设置 key 的过期时间，但是你想修改key的值，单纯的使用set 不加上过期时间参数，那这个key的值就会被刷新为永不过期</p>
</li>
<li><p>del 阻塞redis</p>
<ul>
<li>key 是 String 类型，DEL 时间复杂度是 O(1)</li>
<li>key 是 List/Hash/Set/ZSet 类型，DEL 时间复杂度是 O(M)，M 为元素数量</li>
</ul>
<p>如果是一个非string类型的key，这个key的元素非常多，那么执行del的时间就会越久。可以用LLEN/HLEN/SCARD/ZCARD 来返回列表/哈希表/集合/有序集的数量，如果元素少直接del删除，如果元素多可以采用 LRANGE/HSCAN/SSCAN/ZSCAN + LPOP/RPOP/HDEL/SREM/ZREM 的方式删除。</p>
</li>
<li><p>randomkey 阻塞redis</p>
<p>为什么随机查看一个key有可能会阻塞redis捏，这是因为redis的机制，randomkey 在随机拿出一个 key 后，首先会先检查这个 key 是否已过期。如果该 key 已经过期，那么 Redis 会删除它，这个过程就是<strong>懒惰清理</strong>。清理完了然后在随机拿个key在进行检查过期，直到找到一个未过期的key返回给客户端，如果你redis有大量key已经过期没有清理，用randomkey 就有可能会循环很久。如果你是在slave节点执行，那问题就会更严重，应为slave是不会清理过期key的，（key过期了，master会先清理然后向slave发送del，告诉slave也清理掉，达到主从一致性）。</p>
</li>
<li><p>执行monitor 导致redis OOM</p>
<p> 当你在执行 monitor 命令时，redis 会把每一条命令写到客户端的输出缓冲区，然后客户端从这个缓冲区读取服务端返回的结果。如果QPS很高，这将会导致这个输出缓冲区内存持续增长，占用 Redis 大量的内存资源，如果你的机器的内存资源不足，那 redis 实例就会面临被 OOM 的风险。</p>
</li>
<li><p>持久化的坑</p>
<ul>
<li><p>RDB 数据快照</p>
</li>
<li><p>AOF 记录每一个写命令到日志文件中</p>
<p>如果redis是用supervisor 这种软件管理，有可能会出现master 宕机，哨兵还未发起切换，此时 master 进程立即被 supervisor 自动拉起，但是这个时候master还没有开启任何数据持久化，启动是个空实例，slave会和master保持一致，会自动清空数据</p>
</li>
</ul>
<p> 1.redis实例不使用进程管理工具自动拉起<br> 2.master 宕机后，让哨兵发起切换，把 slave 提升为 master<br> 3.切换完成后，再重启 master，让其退化成 slave</p>
</li>
<li><p>主从库返回结果不同</p>
<p> 如果一个 key 已过期，但这个 key 还未被 master 清理，此时在 slave 上查询这个 key，会返回什么结果呢？有可能是NULL也有可能是返回key的值，如果在3.2的版本以下，只要这个 key 还未被 master 清理，那么，在 slave 上查询这个 key，它会返回 value。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>nginx记录POST信息</title>
    <url>/request-body/</url>
    <content><![CDATA[<p>使用request_body记录POST信息<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">log_format access escape=json '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">'$status $body_bytes_sent $request_body "$http_referer" '</span><br><span class="line">'"$http_user_agent" $http_x_forwarded_for';</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>rsync</title>
    <url>/rsync/</url>
    <content><![CDATA[<p> 整理使用过程，方便以后学习。 <a id="more"></a></p>
<h4 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h4><ul>
<li>centos 6.8 x64</li>
<li>推送端IP：192.168.0.10</li>
<li>接收端IP：192.168.0.20</li>
</ul>
<hr>
<h4 id="接收端"><a href="#接收端" class="headerlink" title="接收端"></a>接收端</h4><p> 下面先在192.168.0.20上进行操作，添加配置文件和密码文件，需要注意的是密码文件权限必须为<code>600</code>，密码文件格式是<code>账号</code>:<code>密码</code>，这里的账号可以不是password里面的账号。 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@test2 ~]# vim /etc/rsync.passwd</span><br><span class="line">[root@test2 ~]# chmod 600 /etc/rsync.passwd</span><br><span class="line">[root@test2 ~]# cat /etc/rsync.passwd </span><br><span class="line">leoo:leo1314leo</span><br><span class="line"></span><br><span class="line">[root@test2 ~]# cat /etc/rsyncd.conf</span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 50</span><br><span class="line">timeout = 600</span><br><span class="line">strict modes = yes</span><br><span class="line">port = 873</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsyncd.lock</span><br><span class="line">log file = /var/run/rsyncd.log</span><br><span class="line"></span><br><span class="line">[demo_web]				</span><br><span class="line">path =/home</span><br><span class="line">read only = no</span><br><span class="line">list = yes</span><br><span class="line">auth users = leoo</span><br><span class="line">secrets file = /etc/rsyncd.secrets</span><br></pre></td></tr></table></figure>

<p> 这里只是一个简单的配置示例，配置文件中还能写很多的规则，这里就不一一介绍了，有其他需求时google走起，下面启动服务，顺便查看本机是否开放873端口和检查防火墙策略。 </p>
<hr>
<h4 id="推送端"><a href="#推送端" class="headerlink" title="推送端"></a>推送端</h4><p> 192.168.0.10安装好rsync就可以了，直接av选项走起。这里要注意的是密码文件，必须为<code>600</code>权限，直接写入192.168.0.20配置文件的密码即可，演示如下。 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@test1 ~]# touch rsync_test.txt</span><br><span class="line">[root@test1 ~]# cat /etc/rsync.password </span><br><span class="line">leo1314leo</span><br><span class="line"></span><br><span class="line">[root@test1 ~]# rsync -av --progress --delete --password-file=rsync.pass rsync_test.txt  leoo@192.168.0.20::demo_web</span><br><span class="line">sending incremental file list</span><br><span class="line">rsync_test.txt</span><br><span class="line">           0 100%    0.00kB/s    0:00:00 (xfer#1， to-check=0/1)</span><br><span class="line"></span><br><span class="line">sent 75 bytes  received 27 bytes  68.00 bytes/sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br></pre></td></tr></table></figure>

<p>在接收端 <code>192.168.0.20</code> 上查看是否有推送到<code>demo_web</code>的目录下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@test2 ~]# ll /home</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r-- 1 test test 0 2月  20 00:51 rsync_test.txt</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="Win操作"><a href="#Win操作" class="headerlink" title="Win操作"></a>Win操作</h4><p> 还有一些情况是需要在win上进行传送的，下载rsync程序<a href="https://github.com/laddin/pro_file/raw/98e693bab9d17e1f672e868d1fbfc8d660c01256/cwRsync-v5.5.0.zip" target="_blank" rel="noopener">下载地址</a>，直接解压，我是放到F盘的，然后创建一个etc目录，将密码<code>leo1314leo</code>写到etc目录下面的密码文件，在cdm中就可以直接运行rsync命令了（ win和linux环境不一样，<code>/cygdrive/f/laddin/CNAME</code>这个代表的是F盘下面的laddin这个目录的CNAME这个文件。 ）。 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\laddin&gt;F:\cwRsync_5.5.0_x86_Free\bin\rsync.exe  -avzcrP --delete  --password-file=/cygdrive/f/cwRsync_5.5.0_x86_Free/etc/rsync.pass  /cygdrive/f/laddin/CNAME leoo@192.168.254.11::demo_web</span><br><span class="line">sending incremental file list</span><br><span class="line">CNAME</span><br><span class="line">              9 100%    0.00kB/s    0:00:00 (xfr#1， to-chk=0/1)</span><br><span class="line"></span><br><span class="line">sent 126 bytes  received 34 bytes  106.67 bytes/sec</span><br><span class="line">total size is 9  speedup is 0.06</span><br><span class="line"></span><br><span class="line">C:\Users\laddin&gt;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>挂载硬盘无法识别</title>
    <url>/scsi-home/</url>
    <content><![CDATA[<p>linux 挂载硬盘fdisk无法识别。<a id="more"></a>这个一般可以通过重启来处理，不重启需要刷新SCSI总线。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ls   /sys/class/scsi_host/</span><br><span class="line">host0  host1  host2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里显示有3个设备，需要刷新3个</span></span><br><span class="line">[root@localhost ~]# echo  "- - -"   /sys/class/scsi_host/host0/scan</span><br><span class="line">- - - /sys/class/scsi_host/host0/scan</span><br><span class="line">[root@localhost ~]# echo  "- - -"   /sys/class/scsi_host/host1/scan</span><br><span class="line">- - - /sys/class/scsi_host/host1/scan</span><br><span class="line">[root@localhost ~]# echo  "- - -"   /sys/class/scsi_host/host2/scan</span><br><span class="line">- - - /sys/class/scsi_host/host2/scan</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">然后在fdisk -l  就有新硬盘信息了</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>权限问题</title>
    <url>/skill001/</url>
    <content><![CDATA[<p>记一次特殊权限问题<a id="more"></a>，线上某个项目需要调用nginx重启，但是nginx是root启动的，程序是www用户启动的百度了一波可以用setuid来处理。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chown root:www /usr/local/nginx/sbin/nginx</span><br><span class="line">chmod +s /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ssh秘钥认证失败</title>
    <url>/ssh/</url>
    <content><![CDATA[<p>今天用ansible添加一个机器节点，秘钥发送后死活连接不上，提示输入密码<a id="more"></a><br>有以下几个原因会影响秘钥连接<br>1.selinux开启了<br>2.sshd_config配置禁止秘钥登录了<br>3..ssh的目录权限不为700<br>4.authorized_keys文件权限不为600</p>
<p>检查客户端authorized_keys是否有key，宿主机ssh -v 配合客户端/var/log/secure 日志一起查看</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>ssh连接服务器慢</title>
    <url>/sshslow/</url>
    <content><![CDATA[<p>连接服务器响应慢，连接上去后正常<a id="more"></a>，可以检查一下DNS认证是否开启</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">------------------------</span><br><span class="line">GSSAPIAuthentication no</span><br><span class="line">UseDNS no</span><br></pre></td></tr></table></figure>
<p>将上面2个配置改为<code>No</code>，关闭DNS认证，然后重启sshd服务即可。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>turtle保存为png</title>
    <url>/svgtopng/</url>
    <content><![CDATA[<p>2种方式，一种是eps用PIL转换为png，一种是svg转换为png<a id="more"></a>，svg的效果要好些测试代码如下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> canvasvg</span><br><span class="line"><span class="keyword">import</span> cairosvg</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Skip</span><span class="params">(step)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    抬起画笔，向前运动一段距离,放下</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.forward(step)</span><br><span class="line">    turtle.pendown()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SetupClock</span><span class="params">(radius)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    画表盘</span></span><br><span class="line"><span class="string">    radius 半径的值</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    turtle.dot(<span class="number">5</span>)</span><br><span class="line">    turtle.pensize(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">60</span>):</span><br><span class="line">        Skip(radius)</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">            turtle.forward(<span class="number">15</span>)</span><br><span class="line">            Skip(-radius - <span class="number">15</span>)</span><br><span class="line">            Skip(radius + <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                turtle.write(int(<span class="number">12</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="number">30</span>:</span><br><span class="line">                Skip(<span class="number">20</span>)</span><br><span class="line">                turtle.write(int(i / <span class="number">5</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">                Skip(<span class="number">-20</span>)</span><br><span class="line">            <span class="keyword">elif</span> (i == <span class="number">25</span> <span class="keyword">or</span> i == <span class="number">35</span>):</span><br><span class="line">                Skip(<span class="number">15</span>)</span><br><span class="line">                turtle.write(int(i / <span class="number">5</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">                Skip(<span class="number">-15</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                turtle.write(int(i / <span class="number">5</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">            Skip(-radius - <span class="number">15</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            turtle.dot(<span class="number">5</span>)</span><br><span class="line">            Skip(-radius)</span><br><span class="line">        turtle.right(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">turtle.tracer(<span class="literal">False</span>)</span><br><span class="line">turtle.mode(<span class="string">"logo"</span>)</span><br><span class="line">SetupClock(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># svg to png</span></span><br><span class="line">file_name = <span class="string">"2020test"</span></span><br><span class="line">nameSav = file_name + <span class="string">".svg"</span></span><br><span class="line">ts = turtle.getscreen().getcanvas()</span><br><span class="line">canvasvg.saveall(nameSav, ts)</span><br><span class="line">cairosvg.svg2png(url=nameSav, write_to=file_name + <span class="string">".png"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># eps to png</span></span><br><span class="line"><span class="comment"># img = turtle.getscreen()</span></span><br><span class="line"><span class="comment"># img.getcanvas().postscript(file="pic.eps")</span></span><br><span class="line"><span class="comment"># im = Image.open("pic.eps")</span></span><br><span class="line"><span class="comment"># im.save("pic.png")</span></span><br></pre></td></tr></table></figure>
<img src="/svgtopng/pic.png" class title="This is eps to png">
<img src="/svgtopng/2020test.png" class title="This is svg to png">


]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>svn迁移到gitlab保留Commits</title>
    <url>/svn-git/</url>
    <content><![CDATA[<p>记录一下保存commit的方法<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y git-svn</span><br><span class="line"></span><br><span class="line">git  svn  clone  SVN仓库</span><br><span class="line"><span class="meta">#</span><span class="bash">输入svn账号密码</span></span><br><span class="line"></span><br><span class="line">cd SVN仓库</span><br><span class="line"></span><br><span class="line">git remote add origin gitlab仓库</span><br><span class="line"><span class="meta">#</span><span class="bash">输入gitlab账号密码</span></span><br><span class="line"></span><br><span class="line">git pull origin master </span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>swap扩展</title>
    <url>/swap/</url>
    <content><![CDATA[<p>swap在线扩容<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看新硬盘是否被发现</span></span><br><span class="line">[root@192-168-1-131 ~]# fdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 214.7 GB, 214748364800 bytes, 419430400 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x000a82b6</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200   419430399   208665600   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-root: 53.7 GB, 53687091200 bytes, 104857600 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-swap: 16.9 GB, 16911433728 bytes, 33030144 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-home: 143.1 GB, 143067709440 bytes, 279429120 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 75.2 GB, 75161927680 bytes, 146800640 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">这里注意类型为82</span></span><br><span class="line">[root@192-168-1-131 ~]# fdisk /dev/sdb </span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">Building a new DOS disklabel with disk identifier 0xfef90f89.</span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (2048-146800639, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-146800639, default 146800639):</span><br><span class="line">Using default value 146800639</span><br><span class="line">Partition 1 of type Linux and of size 70 GiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): t</span><br><span class="line">Selected partition 1</span><br><span class="line">Hex code (type L to list all codes): 82</span><br><span class="line">Changed type of partition 'Linux' to 'Linux swap / Solaris'</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">制作swap</span></span><br><span class="line">[root@192-168-1-131 ~]# mkswap /dev/sdb1</span><br><span class="line">Setting up swapspace version 1, size = 1048572 KiB</span><br><span class="line">no label, UUID=bb893344-6d9d-4c03-b818-5ddcc4a55502</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">挂载</span></span><br><span class="line">[root@192-168-1-131 ~]# vim  /etc/fstab </span><br><span class="line">-----------------------------------------</span><br><span class="line">UUID=bb893344-6d9d-4c03-b818-5ddcc4a55502 swap	swap	defaults	0 0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">激活</span></span><br><span class="line">[root@192-168-1-131 ~]# swapon </span><br><span class="line">NAME      TYPE       SIZE   USED PRIO</span><br><span class="line">/dev/dm-1 partition 15.8G 395.7M   -2</span><br><span class="line">[root@192-168-1-131 ~]# swapon -a</span><br><span class="line">[root@192-168-1-131 ~]# swapon </span><br><span class="line">NAME      TYPE       SIZE   USED PRIO</span><br><span class="line">/dev/dm-1 partition 15.8G 395.7M   -2</span><br><span class="line">/dev/sdb1 partition   70G     0B   -3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看</span></span><br><span class="line">[root@192-168-1-131 ~]# free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          32010       20467       11353           1         189       11218</span><br><span class="line">Swap:         87806        3721       84085</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>systemctl整理</title>
    <url>/systemctl/</url>
    <content><![CDATA[<p>systemctl整理。<a id="more"></a></p>
<h5 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">开机启动</span></span><br><span class="line">systemctl enable nginx.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">停止开机启动</span></span><br><span class="line">systemctl disable nginx.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看开机启动</span></span><br><span class="line">systemctl is-enabled nginx.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">启动/关闭/重启</span></span><br><span class="line">systemctl start/stop/restart nginx.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看服务状态</span></span><br><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure>

<h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>一般在<code>/usr/lib/systemd/system/</code>下创建新的<code>service文件</code>，然后<code>systemctl daemon-reload</code>刷新生效，以下是常用的配置选项</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">以firewalld为例子</span></span><br><span class="line"></span><br><span class="line">[Unit]									#启动顺序和依赖</span><br><span class="line">Description=firewalld - dynamic firewall daemon				#描述</span><br><span class="line">Before=network-pre.target						#启动顺序</span><br><span class="line">Wants=network-pre.target						#启动顺序</span><br><span class="line">After=dbus.service							#启动顺序</span><br><span class="line">After=polkit.service							#启动顺序</span><br><span class="line"><span class="meta">#</span><span class="bash">冲突，以下这些服务在运行就不运行firewalld</span></span><br><span class="line">Conflicts=iptables.service ip6tables.service ebtables.service ipset.service	</span><br><span class="line">Documentation=man:firewalld(1)						#文档位置</span><br><span class="line"></span><br><span class="line">[Service]										#启动行为</span><br><span class="line">EnvironmentFile=-/etc/sysconfig/firewalld						#环境参数文件</span><br><span class="line">ExecStart=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS				#启动执行命令</span><br><span class="line">ExecReload=/bin/kill -HUP $MAINPID							#重启执行命令</span><br><span class="line"><span class="meta">#</span><span class="bash">还有以下这些常用的</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ExecStop	停止服务时执行的命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ExecStartPre	启动服务之前执行的命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ExecStartPost	启动服务之后执行的命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ExecStopPost	停止服务之后执行的命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash">WorkingDirectory 工作目录，处理相对路径问题</span></span><br><span class="line">StandardOutput=null	#标准输出</span><br><span class="line">StandardError=null	#标准错误输出</span><br><span class="line">Type=dbus		#启动类型</span><br><span class="line"><span class="meta">#</span><span class="bash">启动类型介绍</span></span><br><span class="line"><span class="meta">#</span><span class="bash">simple		默认值，ExecStart字段启动的进程为主进程</span></span><br><span class="line"><span class="meta">#</span><span class="bash">forking	ExecStart字段将以fork()方式启动，此时父进程将会退出，子进程将成为主进程</span></span><br><span class="line"><span class="meta">#</span><span class="bash">oneshot	类似于simple，但只执行一次，Systemd 会等它执行完，才启动其他服务</span></span><br><span class="line"><span class="meta">#</span><span class="bash">dbus		类似于simple，但会等待 D-Bus 信号后启动</span></span><br><span class="line"><span class="meta">#</span><span class="bash">notify		类似于simple，启动结束后会发出通知信号，然后 Systemd 再启动其他服务</span></span><br><span class="line"><span class="meta">#</span><span class="bash">idle		类似于simple，但是要等到其他任务都执行完，才会启动该服务。一种使用场合是为让该服务的输出，不与其他服务的输出相混合</span></span><br><span class="line"></span><br><span class="line">BusName=org.fedoraproject.FirewallD1	#服务通信使用的 D-Bus 名称</span><br><span class="line">KillMode=mixed				#定义如何停止firewalld,还有以下参数</span><br><span class="line"><span class="meta">#</span><span class="bash">control-group		默认值，当前控制组里面的所有子进程，都会被杀掉</span></span><br><span class="line"><span class="meta">#</span><span class="bash">process		只杀主进程</span></span><br><span class="line"><span class="meta">#</span><span class="bash">mixed			主进程将收到 SIGTERM 信号，子进程收到 SIGKILL 信号</span></span><br><span class="line"><span class="meta">#</span><span class="bash">none			没有进程会被杀掉，只是执行服务的 stop 命令。</span></span><br><span class="line"></span><br><span class="line">[Install]						#如何安装，开机启动</span><br><span class="line">WantedBy=multi-user.target				#属于哪个服务组</span><br><span class="line">Alias=dbus-org.fedoraproject.FirewallD1.service		#服务别名信息</span><br></pre></td></tr></table></figure>
<p>还有一些<code>[Service]</code>常用的模块</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PIDFile		#指定该服务的 PID 文件路径</span><br><span class="line">Environment	#指定 Key=Value 的环境配置</span><br><span class="line">User		#指定用户</span><br><span class="line">Group		#指定用户组</span><br><span class="line">Restart		#当服务进程 正常退出、异常退出、被杀死、超时的时候， 是否重新启动该服务，选项如下</span><br><span class="line"><span class="meta">#</span><span class="bash">no		默认值,退出后不会重启</span></span><br><span class="line"><span class="meta">#</span><span class="bash">on-success	只有正常退出时（退出状态码为0），才会重启</span></span><br><span class="line"><span class="meta">#</span><span class="bash">on-failure	非正常退出时（退出状态码非0），包括被信号终止和超时，才会重启</span></span><br><span class="line"><span class="meta">#</span><span class="bash">on-abnormal	只有被信号终止和超时，才会重启</span></span><br><span class="line"><span class="meta">#</span><span class="bash">on-abort	只有在收到没有捕捉到的信号终止时，才会重启</span></span><br><span class="line"><span class="meta">#</span><span class="bash">on-watchdog	超时退出，才会重启</span></span><br><span class="line"><span class="meta">#</span><span class="bash">always		不管是什么退出原因，总是重启</span></span><br><span class="line">RestartSec		#多久后重启</span><br><span class="line">StartLimitBurst		#启动的最大次数限制，超过后停止继续重启</span><br><span class="line">StartLimitInterval	#启动时间的最大间隔</span><br></pre></td></tr></table></figure>
<p>还有资源限制</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>等价的 ulimit 命令</th>
<th>单位</th>
</tr>
</thead>
<tbody><tr>
<td>LimitCPU</td>
<td>ulimit -t</td>
<td>秒</td>
</tr>
<tr>
<td>LimitFSIZE</td>
<td>ulimit -f</td>
<td>字节</td>
</tr>
<tr>
<td>LimitDATA</td>
<td>ulimit -d</td>
<td>字节</td>
</tr>
<tr>
<td>LimitSTACK</td>
<td>ulimit -s</td>
<td>字节</td>
</tr>
<tr>
<td>LimitCORE</td>
<td>ulimit -c</td>
<td>字节</td>
</tr>
<tr>
<td>LimitRSS</td>
<td>ulimit -m</td>
<td>字节</td>
</tr>
<tr>
<td>LimitNOFILE</td>
<td>ulimit -n</td>
<td>文件描述符的数量</td>
</tr>
<tr>
<td>LimitAS</td>
<td>ulimit -v</td>
<td>字节</td>
</tr>
<tr>
<td>LimitNPROC</td>
<td>ulimit -u</td>
<td>进程的数量</td>
</tr>
<tr>
<td>LimitMEMLOCK</td>
<td>ulimit -l</td>
<td>字节</td>
</tr>
<tr>
<td>LimitLOCKS</td>
<td>ulimit -x</td>
<td>锁的数量</td>
</tr>
<tr>
<td>LimitSIGPENDING</td>
<td>ulimit -i</td>
<td>信号队列的长度(排队的信号数量)</td>
</tr>
<tr>
<td>LimitMSGQUEUE</td>
<td>ulimit -q</td>
<td>字节</td>
</tr>
<tr>
<td>LimitNICE</td>
<td>ulimit -e</td>
<td>谦让度</td>
</tr>
<tr>
<td>LimitRTPRIO</td>
<td>ulimit -r</td>
<td>实时优先级</td>
</tr>
</tbody></table>
<p>给一个线上go程序的启动脚本参考</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]	</span><br><span class="line">Description=go-api	</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">Environment=ROBOT_APP_ENV=pro</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory= /data/robot/go</span><br><span class="line">ExecStart=/data/robot/go/go-api </span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=20s</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>优化tcp减少TIME_WAIT</title>
    <url>/tcp-01/</url>
    <content><![CDATA[<p>优化TCP减少TIME_WAIT。<a id="more"></a></p>
<h4 id="TIME-WAIT"><a href="#TIME-WAIT" class="headerlink" title="TIME_WAIT"></a>TIME_WAIT</h4><p>TIME_WAIT是TCP连接中的一个状态，每一个TCP连接都会在内存中维护一个控制块TCB(Transmission Control Block），用来记录TCP连接的IP和端口等信息。TIME_WAIT状态会维持2个MSL时间(MSL：<code>Maximum Segment Lifetime 最大分节生命期</code>，不同系统时间也不一样，大概是2分钟左右），以确保这段时间内不会有相同的IP和端口号的新连接，目的是为了预防，上一个连接的分组包延迟到达，而被新的连接接受而导致TCP流被破坏。 但是TIME_WAIT状态的TCP连接过多也会造成性能问题，比如我们的可用源端口只有60000个，而在2MSL内是无法被重用的，也就是说我们的tcp连接率就限制在了在60000/120 = 500次/秒。</p>
<hr>
<h4 id="计算TCP并发"><a href="#计算TCP并发" class="headerlink" title="计算TCP并发"></a>计算TCP并发</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看可用端口数目</span></span><br><span class="line">cat /proc/sys/net/ipv4/ip_local_port_range</span><br><span class="line">32768   60999</span><br><span class="line"><span class="meta">#</span><span class="bash"> 计算tcp并发数</span></span><br><span class="line">echo "(60999-32768)/60"|bc</span><br><span class="line">470</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><ul>
<li><p>增加可用端口范围，如上计算tcp并发</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65535</span><br></pre></td></tr></table></figure>
</li>
<li><p>对tcp进行优化</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用tcp的时间戳配置，只有启用这个，下面reuse和recycle才生效。</span></span><br><span class="line">net.ipv4.tcp_timestamps = 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许TIME_WAIT SOCKETS重新用于新的TCP连接，依赖开启tcp优化中的tcp_timestamp</span></span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启TCP连接中的TIME_WAIT SOCKETS快速回收，依赖开启tcp优化中的tcp_timestamp</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nat网络下不建议开，自行谷歌</span></span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改FIN_WAIT2状态tcp的超时时间为30s</span></span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>关于 sysctl每一项优化请查看<a href="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt" target="_blank" rel="noopener">官方文档</a>。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>tcpdump简单用法</title>
    <url>/tcpdump/</url>
    <content><![CDATA[<p>常用抓包命令<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 抓取 eth1网卡22端口的数据 </span></span><br><span class="line">tcpdump -s 0 -i eth1 port 22</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 抓取 eth1网卡 8.8.8.8这个ip的详细数据</span></span><br><span class="line">tcpdump -s 0 -i eth1 -vvv dst 8.8.8.8</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 抓取所有接口数据保存到test.cap文件，这里可以用Wireshark工具查看</span></span><br><span class="line">tcpdump -i any -s 0 -w test.cap</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>故障排查思路</title>
    <url>/thinking/</url>
    <content><![CDATA[<h4 id="故障排查"><a href="#故障排查" class="headerlink" title="故障排查"></a>故障排查</h4><p> 网站出现突发故障， 如果领导同事在旁边围观，心里素质不强，会出现手足无措，不知如何下手的感觉，这里介绍一些我工作上的故障排查思路 。<a id="more"></a></p>
<hr>
<h4 id="方法如下"><a href="#方法如下" class="headerlink" title="方法如下"></a>方法如下</h4><ul>
<li>先了解问题<ul>
<li>是多用户反馈还是单独用户异常</li>
<li>是否是机房，CDN厂商的故障</li>
<li>尽量了解问题发生的前因后果，方便下一步排查</li>
</ul>
</li>
<li>定位问题<ul>
<li>定位问题是否属于代码问题还是别的问题，检查前一次的代码更新时间</li>
<li>查看监控，查询内部运维平台是否有类似故障</li>
<li>查看服务器log，程序log，看是否有异常记录</li>
<li>如果没有异常log，模拟用户操作，复现问题</li>
</ul>
</li>
<li>问题解决<ul>
<li>根据那方面的问题，找相关人员进行修复或者自行处理</li>
</ul>
</li>
</ul>
<hr>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>遇事不要谎，思路要清晰，不用的xshell直接闭掉，免得操作错误，处理之前问一下有其他人员在同时处理吗，最后善用Google搜索引擎。 </p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>nginx try_files</title>
    <url>/try-files/</url>
    <content><![CDATA[<p>nginx判断文件是否存在可以用<code>try_files</code>模块来进行处理<a id="more"></a>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">	try_files  $uri  $uri/index.html  @mongrel;</span><br><span class="line">&#125;</span><br><span class="line">location @mongrel &#123;</span><br><span class="line">               proxy_pass http://127.0.0.1:8080;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>
<p>当用户请求 <a href="http://localhost/example" target="_blank" rel="noopener">http://localhost/example</a> 时，这里的 $uri 就是 /example。 try_files 会到硬盘里尝试找这个文件，如果存在名为 /$root/example的文件，就直接把这个文件的内容发送给用户。 如果没有就返回 example/index.html ，如果还是没有就代理到8080端口了。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>turtle画时钟生成png</title>
    <url>/turtle/</url>
    <content><![CDATA[<p>turtle画时钟生成svg转换为png盘<a id="more"></a></p>
<img src="/turtle/clock.jpg" class title="This is clock image">
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> canvasvg</span><br><span class="line"><span class="keyword">import</span> cairosvg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Skip</span><span class="params">(step)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    抬起画笔，向前运动一段距离,放下</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.forward(step)</span><br><span class="line">    turtle.pendown()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Goto</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    抬起画笔，前往坐标,放下</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pendown()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SetupClock</span><span class="params">(radius, watchpin=False, minhand=<span class="number">0</span>, hurhand=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    画表盘</span></span><br><span class="line"><span class="string">    radius 半径的值</span></span><br><span class="line"><span class="string">    watchpin 是否画表针</span></span><br><span class="line"><span class="string">    minhand 分钟</span></span><br><span class="line"><span class="string">    hurhand 时钟</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    turtle.dot(<span class="number">5</span>)</span><br><span class="line">    turtle.pensize(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">60</span>):</span><br><span class="line">        Skip(radius)</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">            turtle.forward(<span class="number">15</span>)</span><br><span class="line">            Skip(-radius - <span class="number">15</span>)</span><br><span class="line">            Skip(radius + <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                turtle.write(int(<span class="number">12</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="number">30</span>:</span><br><span class="line">                Skip(<span class="number">20</span>)</span><br><span class="line">                turtle.write(int(i / <span class="number">5</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">                Skip(<span class="number">-20</span>)</span><br><span class="line">            <span class="keyword">elif</span> (i == <span class="number">25</span> <span class="keyword">or</span> i == <span class="number">35</span>):</span><br><span class="line">                Skip(<span class="number">15</span>)</span><br><span class="line">                turtle.write(int(i / <span class="number">5</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">                Skip(<span class="number">-15</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                turtle.write(int(i / <span class="number">5</span>), align=<span class="string">"center"</span>, font=(<span class="string">"Courier"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">            Skip(-radius - <span class="number">15</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            turtle.dot(<span class="number">5</span>)</span><br><span class="line">            Skip(-radius)</span><br><span class="line">        turtle.right(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> watchpin:</span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        画表针</span></span><br><span class="line"><span class="string">        minhand 分针 1分钟6度</span></span><br><span class="line"><span class="string">        hurhand 时针 1小时30度 1分钟0.5度</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        minangle = minhand * <span class="number">6</span></span><br><span class="line">        hurangle = hurhand * <span class="number">30</span> + minhand * <span class="number">0.5</span></span><br><span class="line">        turtle.right(minangle)</span><br><span class="line">        turtle.forward(<span class="number">80</span>)</span><br><span class="line">        Skip(<span class="number">-80</span>)</span><br><span class="line">        turtle.left(minangle)</span><br><span class="line">        turtle.right(hurangle)</span><br><span class="line">        turtle.forward(<span class="number">50</span>)</span><br><span class="line">        Skip(<span class="number">-50</span>)</span><br><span class="line">        turtle.left(hurangle)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetClock</span><span class="params">(x_axis, y_axis, watchpin, minhand, hurhand,clocktime)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    画时钟</span></span><br><span class="line"><span class="string">    x_axis x轴</span></span><br><span class="line"><span class="string">    y_axis y轴</span></span><br><span class="line"><span class="string">    watchpin=False 默认不画表针</span></span><br><span class="line"><span class="string">    minhand watchpin为True才设置，分钟</span></span><br><span class="line"><span class="string">    hurhand watchpin为True才设置,时钟</span></span><br><span class="line"><span class="string">    clocktime watchpin为False才设置,时间数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> watchpin:</span><br><span class="line">        Goto(x_axis, y_axis - <span class="number">180</span>)</span><br><span class="line">        turtle.write(<span class="string">"_"</span>*<span class="number">25</span>, align=<span class="string">"center"</span>, font=(<span class="string">"Arial"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Goto(x_axis, y_axis - <span class="number">170</span>)</span><br><span class="line">        turtle.write(clocktime, align=<span class="string">"center"</span>, font=(<span class="string">"Arial"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">        Goto(x_axis, y_axis - <span class="number">180</span>)</span><br><span class="line">        turtle.write(<span class="string">"_"</span> * <span class="number">25</span>, align=<span class="string">"center"</span>, font=(<span class="string">"Arial"</span>, <span class="number">10</span>, <span class="string">"bold"</span>))</span><br><span class="line">    Goto(x_axis, y_axis)</span><br><span class="line">    SetupClock( radius=<span class="number">100</span>,watchpin=watchpin, minhand=minhand, hurhand=hurhand)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">turtle.tracer(<span class="literal">False</span>)</span><br><span class="line">turtle.mode(<span class="string">"logo"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GetClock(<span class="number">-375</span>, <span class="number">200</span>,<span class="literal">False</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">"3:54"</span>)</span><br><span class="line">GetClock(<span class="number">-125</span>, <span class="number">200</span>,<span class="literal">False</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">"4:00"</span>)</span><br><span class="line">GetClock(<span class="number">125</span>, <span class="number">200</span>,<span class="literal">False</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">"5:10"</span>)</span><br><span class="line">GetClock(<span class="number">375</span>, <span class="number">200</span>,<span class="literal">False</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">"6:30"</span>)</span><br><span class="line">GetClock(<span class="number">-375</span>, <span class="number">-200</span>,<span class="literal">True</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="string">""</span>)</span><br><span class="line">GetClock(<span class="number">-125</span>, <span class="number">-200</span>,<span class="literal">True</span>,<span class="number">9</span>,<span class="number">19</span>,<span class="string">""</span>)</span><br><span class="line">GetClock(<span class="number">125</span>, <span class="number">-200</span>,<span class="literal">True</span>,<span class="number">8</span>,<span class="number">39</span>,<span class="string">""</span>)</span><br><span class="line">GetClock(<span class="number">375</span>, <span class="number">-200</span>,<span class="literal">True</span>,<span class="number">7</span>,<span class="number">29</span>,<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#turtle.done()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">name = <span class="string">"clocktime"</span></span><br><span class="line">nameSav = name + <span class="string">".svg"</span></span><br><span class="line">ts = turtle.getscreen().getcanvas()</span><br><span class="line">canvasvg.saveall(nameSav, ts)</span><br><span class="line">cairosvg.svg2png(url=nameSav, write_to=name + <span class="string">".png"</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>普通用户无法执行ulimit</title>
    <url>/ulimit-01/</url>
    <content><![CDATA[<p>由于公司已经使用堡垒机进行权限控制，现在都是使用运维账号进行日常管理，今天在执行ulimit，提示异常Operation not permitted<a id="more"></a>，记录如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ulimit -c unlimited</span><br><span class="line">-bash: ulimit: core file size: cannot modify limit: Operation not permitted</span><br></pre></td></tr></table></figure>

<p> 在man page中发现hard limit和soft limit ，意思是root账号可以设置hard limit，所有用户的soft limit不能超过root设置的值</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">A hard limit cannot be increased by a non-root user once it is set;</span><br><span class="line">a soft limit may be increased up to the value of the hard limit.</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建<span class="built_in">test</span>用户</span></span><br><span class="line">useradd test</span><br><span class="line">cat /etc/passwd|grep test</span><br><span class="line">test:x:501:502::/home/test:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> root下设置hard <span class="built_in">limit</span></span></span><br><span class="line">ulimit -Hc 51200</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">test</span>用户测试</span></span><br><span class="line">su - test</span><br><span class="line">ulimit -c 51201</span><br><span class="line">-bash: ulimit: core file size: cannot modify limit: Operation not permitted</span><br><span class="line"></span><br><span class="line">ulimit -c 51200</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>Too many open files</title>
    <url>/ulimit/</url>
    <content><![CDATA[<p>centos7 处理方案<a id="more"></a><br>centos7 Tomcat 拋 Too many open files 异常，和centos6解决方案不一样，这里记录一下。</p>
<hr>
<h4 id="服务环境"><a href="#服务环境" class="headerlink" title="服务环境"></a>服务环境</h4><ul>
<li>CentOS 7.5 </li>
<li>JDK 1.7.0_79 </li>
<li>Tomcat 7.0.96 </li>
</ul>
<hr>
<h4 id="ulimit"><a href="#ulimit" class="headerlink" title="ulimit"></a>ulimit</h4><p>ulimit 分为硬件限制和软件限制，硬件限制是实际的限制，软件限制只是warning限制，Tomcat是直接调用硬件限制产数的（文件：<code>/etc/security/limits.conf</code>，默认值：<code>4096</code>，这个值的最大阈值是由<code>/proc/sys/fs/nr_open</code>文件来决定的，如果你设置的值超nr_open，ssh就会出现无法登陆，修改limits.conf 后退出当前ssh，ulimit的硬件限制就可以生效）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ulimit -Ha 硬件限制</span><br><span class="line">ulimit -Sa 软件限制</span><br></pre></td></tr></table></figure>

<p>limits.conf 这个配置文件只是配置单个程序启用的最大文件句柄数，而整个服务器同时最大打开的文件数的配置是<code>/proc/sys/fs/file-max</code>（要调整这个参数可以在<code>/etc/sysctl.conf</code>里面配置 <code>fs.file-max = 6553560</code> 然后 <code>sysctl -p</code>刷新， 最大值是取决于内存的）</p>
<p> 与limits.conf 有关的还有一个 <code>/etc/security/limits.d/20-nproc.conf</code> 这个文件是限制<code>进程数</code>的，系统会先读limits.conf然后在读20-nproc.conf，20-nproc.conf会覆盖前面的配置,但是实际测试是以2个文件中那个最小的值为准（进程数的默认值是通过内存计算出来的，公式是<code>/proc/meminfo |grep MemTotal /128/2</code>，内存 的物理页面会内存一些关键数据，所以实际的比计算出来的要小点点。），如下 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">limits.conf 数值大 20-nproc.conf数值小 会以20-nproc.conf为准   </span><br><span class="line">limits.conf 数值小 20-nproc.conf数值大 会以limits.conf为准</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h4><p>在CentOS7的系统中，使用Systemd替代了之前的SysV，因此<code>/etc/security/limits.conf</code>文件的配置作用域缩小了一些，limits.conf这里的配置只适用于通过<a href="https://www.cnblogs.com/yinzhengjie/p/8395279.html" target="_blank" rel="noopener">PAM</a>认证登录用户的资源限制，它对systemd的service的资源限制是不生效的。<br>全局的配置在<code>/etc/systemd/system.conf</code>和 <code>/etc/systemd/user.conf</code>中，system.conf是系统级实例使用的，user.conf是用户级别使用的（非常少），这里我们直接修改system.conf将<code>DefaultLimitNOFILE</code>修改为10000，然后<code>systemctl daemon-reexec</code>刷新，在用systemctl启动Tomcat，查看<code>/proc/{tomcat_pid}/limits</code> ，这里Max open files 显示为10000。</p>
<hr>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>如果你用systemctl启动的服务，用之前centos6的方法修改ulimit是不生效的，这里推荐直接修改<code>/etc/systemd/system.conf</code>配置。</p>
<p> limits.conf这个是设置单个程序启动使用的最大文件句柄数,而整个服务器同时最大打开的文件数是由这个 <code>/proc/sys/fs/file-max</code> 文件来决定的,要调整file-max可以在 <code>/etc/sysctl.conf</code> 里面配置 <code>fs.file-max = 6553560</code> 然后 <code>sysctl -p</code>刷新，这里的最大值取决于内存。 </p>
<p> 与limits.conf 有关的还有一个 <code>/etc/security/limits.d/20-nproc.conf</code> 这个文件是限制<code>进程数</code>的，系统会先读limits.conf然后在读20-nproc.conf，20-nproc.conf会覆盖前面的配置,但是实际测试是以2个文件中那个最小的值为准，如下 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">limits.conf 数值大 20-nproc.conf数值小 会以20-nproc.conf为准   </span><br><span class="line">limits.conf 数值小 20-nproc.conf数值大 会以limits.conf为准</span><br></pre></td></tr></table></figure>

<p> 而进程数的默认值是由内存计算出来的,<code>ulimit -u</code>的值是由<code>/proc/meminfo |grep MemTotal /128/2</code> ,内存的物理页面会内存一些关键数据，所以实际的比计算出来的要小点点。 </p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>unhide</title>
    <url>/unhide/</url>
    <content><![CDATA[<p><code>unhide</code>是一个小巧的网络取证工具，能够发现那些借助rootkit，LKM及其它技术隐藏的进程和TCP / UDP端口<a id="more"></a>。由于linux一切皆文件，<code>ps</code>、<code>top</code>工作原理都是遍历<code>/proc</code>目录的，<code>unhide</code>的工作原理和<code>ps</code>不一样，可以使用他来找出隐藏的进程。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install unhide</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查找隐藏进程</span></span><br><span class="line">unhide proc</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>漏洞批量更新</title>
    <url>/upgrade/</url>
    <content><![CDATA[<p>centos7 只维护到2024年，把线上部分服务已经切换到阿里云的<code>Alibaba Cloud Linux</code>，这里有一个方便的漏洞升级操作<a id="more"></a>，如下演示。<a href="https://help.aliyun.com/document_detail/161297.html" target="_blank" rel="noopener">官网资料</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Critical：高风险，必须更新</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Important：较高风险，强烈建议更新</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Moderate：中等风险，推荐更新</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Low：低风险，可选更新</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Alibaba Cloud Linux 2</span></span><br><span class="line">yum upgrade --security --secseverity=Critical,Important,Moderate</span><br><span class="line"><span class="meta">#</span><span class="bash"> Alibaba Cloud Linux 3</span></span><br><span class="line">yum upgrade --security --secseverity=&#123;Critical,Important,Moderate&#125;</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">Loaded plugins: fastestmirror, langpacks, update-motd</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-219-78.4.al7.3.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libcom_err-devel-1.43.5-8.2.al7.x86_64 from @plus removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libstoragemgmt-1.8.1-2.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-sysv-219-78.4.al7.3.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 14:libpcap-devel-1.5.3-13.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> gtk-update-icon-cache-3.22.30-8.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 14:libpcap-1.5.3-13.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 14:libpcap-devel-1.5.3-12.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libss-1.43.5-8.3.al7.x86_64 from plus removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kbd-legacy-1.15.5-15.1.al7.noarch from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libsss_nss_idmap-1.16.5-10.1.al7.13.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libcom_err-1.43.5-8.2.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> ImageMagick-devel-6.9.10.68-6.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> bash-4.2.46-35.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libcom_err-1.43.5-8.3.al7.x86_64 from plus removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:openssl-devel-1.0.2k-25.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kpartx-0.4.9-135.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> alinux-release-2.1903-9.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> e2fsprogs-libs-1.43.5-8.3.al7.x86_64 from plus removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libsss_nss_idmap-1.16.5-10.1.al7.12.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> tzdata-java-2022c-1.1.al7.noarch from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kbd-1.15.5-15.1.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:nfs-utils-1.3.0-0.68.1.al7.2.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> tzdata-2022c-1.1.al7.noarch from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-sysv-219-78.5.al7.3.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libstoragemgmt-1.8.1-1.1.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> msodbcsql17-17.9.1.1-1.x86_64 from @packages-microsoft-com-prod removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:openssl-1.0.2k-23.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:nfs-utils-1.3.0-0.68.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> e2fsprogs-1.43.5-8.2.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-python-219-78.5.al7.3.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> epel-release-7-13.noarch from @epel removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> ImageMagick-devel-6.9.10.68-5.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> alinux-release-2.1903-11.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libstoragemgmt-python-clibs-1.8.1-1.1.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libstoragemgmt-python-clibs-1.8.1-2.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> sos-3.9-5.1.al7.4.noarch from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kbd-1.15.5-16.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kbd-legacy-1.15.5-16.1.al7.noarch from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kpartx-0.4.9-134.1.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> ImageMagick-6.9.10.68-5.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> bash-4.2.46-34.1.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> e2fsprogs-libs-1.43.5-8.2.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> epel-release-7-14.noarch from epel removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kbd-misc-1.15.5-16.1.al7.noarch from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-libs-219-78.5.al7.3.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> sos-3.9-5.1.al7.11.noarch from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> sssd-client-1.16.5-10.1.al7.12.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 14:libpcap-1.5.3-12.1.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libsss_idmap-1.16.5-10.1.al7.12.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> mssql-tools-17.9.1.1-1.x86_64 from @packages-microsoft-com-prod removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> gtk-update-icon-cache-3.22.30-6.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> ca-certificates-2021.2.50-72.1.al7.noarch from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libss-1.43.5-8.2.al7.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 2:microcode_ctl-2.1-73.13.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> mdadm-4.1-7.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libcom_err-devel-1.43.5-8.3.al7.x86_64 from plus removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> kbd-misc-1.15.5-15.1.al7.noarch from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> sssd-client-1.16.5-10.1.al7.13.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libsss_idmap-1.16.5-10.1.al7.13.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:openssl-devel-1.0.2k-23.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:java-1.8.0-openjdk-headless-1.8.0.332.b09-1.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> mdadm-4.1-9.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:openssl-libs-1.0.2k-25.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-219-78.5.al7.3.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:java-1.8.0-openjdk-1.8.0.332.b09-1.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> ca-certificates-2020.2.41-70.0.1.al7.noarch from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:java-1.8.0-openjdk-1.8.0.342.b07-1.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> mssql-tools-17.10.1.1-1.x86_64 from packages-microsoft-com-prod removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-python-219-78.4.al7.3.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libstoragemgmt-python-1.8.1-1.1.al7.noarch from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> libstoragemgmt-python-1.8.1-2.1.al7.noarch from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:java-1.8.0-openjdk-headless-1.8.0.342.b07-1.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> tzdata-java-2021e-1.1.al7.noarch from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> ImageMagick-6.9.10.68-6.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 2:microcode_ctl-2.1-73.14.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:openssl-1.0.2k-25.1.al7.x86_64 from updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> tzdata-2021a-1.1.al7.noarch from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> systemd-libs-219-78.4.al7.3.x86_64 from @anaconda removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> 1:openssl-libs-1.0.2k-23.1.al7.x86_64 from @updates removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> msodbcsql17-17.10.1.1-1.x86_64 from packages-microsoft-com-prod removed (updateinfo)</span></span><br><span class="line"><span class="meta"> --&gt;</span><span class="bash"> e2fsprogs-1.43.5-8.3.al7.x86_64 from plus removed (updateinfo)</span></span><br><span class="line">16 package(s) needed (+0 related) for security, out of 57 available</span><br><span class="line">Resolving Dependencies</span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Running transaction check</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package gzip.x86_64 0:1.5-10.1.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package gzip.x86_64 0:1.5-11.1.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel.x86_64 0:4.19.91-26.3.al7 will be installed</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel-devel.x86_64 0:4.19.91-26.3.al7 will be installed</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel-headers.x86_64 0:4.19.91-25.8.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel-headers.x86_64 0:4.19.91-26.3.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel-tools.x86_64 0:4.19.91-25.8.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel-tools.x86_64 0:4.19.91-26.3.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel-tools-libs.x86_64 0:4.19.91-25.8.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package kernel-tools-libs.x86_64 0:4.19.91-26.3.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package oniguruma.x86_64 0:6.8.2-1.el7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package oniguruma.x86_64 0:6.8.2-2.el7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package oniguruma-devel.x86_64 0:6.8.2-1.el7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package oniguruma-devel.x86_64 0:6.8.2-2.el7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package python.x86_64 0:2.7.5-90.2.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package python.x86_64 0:2.7.5-92.1.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package python-libs.x86_64 0:2.7.5-90.2.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package python-libs.x86_64 0:2.7.5-92.1.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package python-perf.x86_64 0:4.19.91-25.8.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package python-perf.x86_64 0:4.19.91-26.3.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package rsync.x86_64 0:3.1.2-10.1.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package rsync.x86_64 0:3.1.2-11.1.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package rsyslog.x86_64 0:8.24.0-57.1.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package rsyslog.x86_64 0:8.24.0-57.1.al7.3 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package xz.x86_64 0:5.2.2-1.1.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package xz.x86_64 0:5.2.2-2.1.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package xz-devel.x86_64 0:5.2.2-1.1.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package xz-devel.x86_64 0:5.2.2-2.1.al7 will be an update</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package xz-libs.x86_64 0:5.2.2-1.1.al7 will be updated</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package xz-libs.x86_64 0:5.2.2-2.1.al7 will be an update</span></span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Finished Dependency Resolution</span></span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">============================================================================================================================================================</span><br><span class="line"> Package                                   Arch                           Version                                     Repository                       Size</span><br><span class="line">============================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> kernel                                    x86_64                         4.19.91-26.3.al7                            plus                             44 M</span><br><span class="line"> kernel-devel                              x86_64                         4.19.91-26.3.al7                            plus                             12 M</span><br><span class="line">Updating:</span><br><span class="line"> gzip                                      x86_64                         1.5-11.1.al7                                updates                         130 k</span><br><span class="line"> kernel-headers                            x86_64                         4.19.91-26.3.al7                            plus                            1.4 M</span><br><span class="line"> kernel-tools                              x86_64                         4.19.91-26.3.al7                            plus                            320 k</span><br><span class="line"> kernel-tools-libs                         x86_64                         4.19.91-26.3.al7                            plus                            218 k</span><br><span class="line"> oniguruma                                 x86_64                         6.8.2-2.el7                                 epel                            181 k</span><br><span class="line"> oniguruma-devel                           x86_64                         6.8.2-2.el7                                 epel                             41 k</span><br><span class="line"> python                                    x86_64                         2.7.5-92.1.al7                              updates                          96 k</span><br><span class="line"> python-libs                               x86_64                         2.7.5-92.1.al7                              updates                         5.6 M</span><br><span class="line"> python-perf                               x86_64                         4.19.91-26.3.al7                            plus                            314 k</span><br><span class="line"> rsync                                     x86_64                         3.1.2-11.1.al7                              updates                         408 k</span><br><span class="line"> rsyslog                                   x86_64                         8.24.0-57.1.al7.3                           updates                         622 k</span><br><span class="line"> xz                                        x86_64                         5.2.2-2.1.al7                               updates                         229 k</span><br><span class="line"> xz-devel                                  x86_64                         5.2.2-2.1.al7                               updates                          46 k</span><br><span class="line"> xz-libs                                   x86_64                         5.2.2-2.1.al7                               updates                         103 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================================================================================================</span><br><span class="line">Install   2 Packages</span><br><span class="line">Upgrade  14 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 65 M</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">Delta RPMs disabled because /usr/bin/applydeltarpm not installed.</span><br><span class="line">(1/16): gzip-1.5-11.1.al7.x86_64.rpm                                                                                                 | 130 kB  00:00:00     </span><br><span class="line">(2/16): kernel-devel-4.19.91-26.3.al7.x86_64.rpm                                                                                     |  12 MB  00:00:00     </span><br><span class="line">(3/16): kernel-headers-4.19.91-26.3.al7.x86_64.rpm                                                                                   | 1.4 MB  00:00:00     </span><br><span class="line">(4/16): kernel-tools-4.19.91-26.3.al7.x86_64.rpm                                                                                     | 320 kB  00:00:00     </span><br><span class="line">(5/16): kernel-tools-libs-4.19.91-26.3.al7.x86_64.rpm                                                                                | 218 kB  00:00:00     </span><br><span class="line">(6/16): oniguruma-devel-6.8.2-2.el7.x86_64.rpm                                                                                       |  41 kB  00:00:00     </span><br><span class="line">(7/16): python-libs-2.7.5-92.1.al7.x86_64.rpm                                                                                        | 5.6 MB  00:00:00     </span><br><span class="line">(8/16): python-2.7.5-92.1.al7.x86_64.rpm                                                                                             |  96 kB  00:00:00     </span><br><span class="line">(9/16): oniguruma-6.8.2-2.el7.x86_64.rpm                                                                                             | 181 kB  00:00:00     </span><br><span class="line">(10/16): rsync-3.1.2-11.1.al7.x86_64.rpm                                                                                             | 408 kB  00:00:00     </span><br><span class="line">(11/16): python-perf-4.19.91-26.3.al7.x86_64.rpm                                                                                     | 314 kB  00:00:00     </span><br><span class="line">(12/16): rsyslog-8.24.0-57.1.al7.3.x86_64.rpm                                                                                        | 622 kB  00:00:00     </span><br><span class="line">(13/16): xz-5.2.2-2.1.al7.x86_64.rpm                                                                                                 | 229 kB  00:00:00     </span><br><span class="line">(14/16): xz-devel-5.2.2-2.1.al7.x86_64.rpm                                                                                           |  46 kB  00:00:00     </span><br><span class="line">(15/16): xz-libs-5.2.2-2.1.al7.x86_64.rpm                                                                                            | 103 kB  00:00:00     </span><br><span class="line">(16/16): kernel-4.19.91-26.3.al7.x86_64.rpm                                                                                          |  44 MB  00:00:01     </span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                                        37 MB/s |  65 MB  00:00:01     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Updating   : python-libs-2.7.5-92.1.al7.x86_64                                                                                                       1/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Updating   : xz-libs-5.2.2-2.1.al7.x86_64                                                                                                            2/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Updating   : python-2.7.5-92.1.al7.x86_64                                                                                                            3/30 </span><br><span class="line">  Updating   : oniguruma-6.8.2-2.el7.x86_64                                                                                                            4/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Updating   : kernel-tools-libs-4.19.91-26.3.al7.x86_64                                                                                               5/30 </span><br><span class="line">  Updating   : kernel-tools-4.19.91-26.3.al7.x86_64                                                                                                    6/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Updating   : oniguruma-devel-6.8.2-2.el7.x86_64                                                                                                      7/30 </span><br><span class="line">  Updating   : python-perf-4.19.91-26.3.al7.x86_64                                                                                                     8/30 </span><br><span class="line">  Updating   : xz-5.2.2-2.1.al7.x86_64                                                                                                                 9/30 </span><br><span class="line">  Updating   : xz-devel-5.2.2-2.1.al7.x86_64                                                                                                          10/30 </span><br><span class="line">  Updating   : kernel-headers-4.19.91-26.3.al7.x86_64                                                                                                 11/30 </span><br><span class="line">  Installing : kernel-4.19.91-26.3.al7.x86_64                                                                                                         12/30 </span><br><span class="line">  Updating   : rsyslog-8.24.0-57.1.al7.3.x86_64                                                                                                       13/30 </span><br><span class="line">  Installing : kernel-devel-4.19.91-26.3.al7.x86_64                                                                                                   14/30 </span><br><span class="line">  Updating   : rsync-3.1.2-11.1.al7.x86_64                                                                                                            15/30 </span><br><span class="line">  Updating   : gzip-1.5-11.1.al7.x86_64                                                                                                               16/30 </span><br><span class="line">  Cleanup    : oniguruma-devel-6.8.2-1.el7.x86_64                                                                                                     17/30 </span><br><span class="line">  Cleanup    : xz-devel-5.2.2-1.1.al7.x86_64                                                                                                          18/30 </span><br><span class="line">  Cleanup    : python-perf-4.19.91-25.8.al7.x86_64                                                                                                    19/30 </span><br><span class="line">  Cleanup    : python-2.7.5-90.2.al7.x86_64                                                                                                           20/30 </span><br><span class="line">  Cleanup    : kernel-tools-4.19.91-25.8.al7.x86_64                                                                                                   21/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Cleanup    : xz-5.2.2-1.1.al7.x86_64                                                                                                                22/30 </span><br><span class="line">  Cleanup    : kernel-headers-4.19.91-25.8.al7.x86_64                                                                                                 23/30 </span><br><span class="line">  Cleanup    : xz-libs-5.2.2-1.1.al7.x86_64                                                                                                           24/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Cleanup    : kernel-tools-libs-4.19.91-25.8.al7.x86_64                                                                                              25/30 </span><br><span class="line">  Cleanup    : python-libs-2.7.5-90.2.al7.x86_64                                                                                                      26/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Cleanup    : oniguruma-6.8.2-1.el7.x86_64                                                                                                           27/30 </span><br><span class="line">/sbin/ldconfig: /usr/local/lib64/libstdc++.so.6.0.24-gdb.py is not an ELF file - it has the wrong magic bytes at the start.</span><br><span class="line"></span><br><span class="line">  Cleanup    : rsyslog-8.24.0-57.1.al7.x86_64                                                                                                         28/30 </span><br><span class="line">  Cleanup    : rsync-3.1.2-10.1.al7.x86_64                                                                                                            29/30 </span><br><span class="line">  Cleanup    : gzip-1.5-10.1.al7.x86_64                                                                                                               30/30 </span><br><span class="line">  Verifying  : xz-5.2.2-2.1.al7.x86_64                                                                                                                 1/30 </span><br><span class="line">  Verifying  : kernel-tools-4.19.91-26.3.al7.x86_64                                                                                                    2/30 </span><br><span class="line">  Verifying  : gzip-1.5-11.1.al7.x86_64                                                                                                                3/30 </span><br><span class="line">  Verifying  : xz-devel-5.2.2-2.1.al7.x86_64                                                                                                           4/30 </span><br><span class="line">  Verifying  : oniguruma-devel-6.8.2-2.el7.x86_64                                                                                                      5/30 </span><br><span class="line">  Verifying  : python-2.7.5-92.1.al7.x86_64                                                                                                            6/30 </span><br><span class="line">  Verifying  : rsync-3.1.2-11.1.al7.x86_64                                                                                                             7/30 </span><br><span class="line">  Verifying  : xz-libs-5.2.2-2.1.al7.x86_64                                                                                                            8/30 </span><br><span class="line">  Verifying  : kernel-tools-libs-4.19.91-26.3.al7.x86_64                                                                                               9/30 </span><br><span class="line">  Verifying  : kernel-devel-4.19.91-26.3.al7.x86_64                                                                                                   10/30 </span><br><span class="line">  Verifying  : python-libs-2.7.5-92.1.al7.x86_64                                                                                                      11/30 </span><br><span class="line">  Verifying  : rsyslog-8.24.0-57.1.al7.3.x86_64                                                                                                       12/30 </span><br><span class="line">  Verifying  : python-perf-4.19.91-26.3.al7.x86_64                                                                                                    13/30 </span><br><span class="line">  Verifying  : oniguruma-6.8.2-2.el7.x86_64                                                                                                           14/30 </span><br><span class="line">  Verifying  : kernel-4.19.91-26.3.al7.x86_64                                                                                                         15/30 </span><br><span class="line">  Verifying  : kernel-headers-4.19.91-26.3.al7.x86_64                                                                                                 16/30 </span><br><span class="line">  Verifying  : python-libs-2.7.5-90.2.al7.x86_64                                                                                                      17/30 </span><br><span class="line">  Verifying  : gzip-1.5-10.1.al7.x86_64                                                                                                               18/30 </span><br><span class="line">  Verifying  : xz-5.2.2-1.1.al7.x86_64                                                                                                                19/30 </span><br><span class="line">  Verifying  : kernel-tools-4.19.91-25.8.al7.x86_64                                                                                                   20/30 </span><br><span class="line">  Verifying  : xz-devel-5.2.2-1.1.al7.x86_64                                                                                                          21/30 </span><br><span class="line">  Verifying  : kernel-headers-4.19.91-25.8.al7.x86_64                                                                                                 22/30 </span><br><span class="line">  Verifying  : python-perf-4.19.91-25.8.al7.x86_64                                                                                                    23/30 </span><br><span class="line">  Verifying  : oniguruma-devel-6.8.2-1.el7.x86_64                                                                                                     24/30 </span><br><span class="line">  Verifying  : xz-libs-5.2.2-1.1.al7.x86_64                                                                                                           25/30 </span><br><span class="line">  Verifying  : rsync-3.1.2-10.1.al7.x86_64                                                                                                            26/30 </span><br><span class="line">  Verifying  : rsyslog-8.24.0-57.1.al7.x86_64                                                                                                         27/30 </span><br><span class="line">  Verifying  : python-2.7.5-90.2.al7.x86_64                                                                                                           28/30 </span><br><span class="line">  Verifying  : kernel-tools-libs-4.19.91-25.8.al7.x86_64                                                                                              29/30 </span><br><span class="line">  Verifying  : oniguruma-6.8.2-1.el7.x86_64                                                                                                           30/30 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  kernel.x86_64 0:4.19.91-26.3.al7                                          kernel-devel.x86_64 0:4.19.91-26.3.al7                                         </span><br><span class="line"></span><br><span class="line">Updated:</span><br><span class="line">  gzip.x86_64 0:1.5-11.1.al7                            kernel-headers.x86_64 0:4.19.91-26.3.al7           kernel-tools.x86_64 0:4.19.91-26.3.al7          </span><br><span class="line">  kernel-tools-libs.x86_64 0:4.19.91-26.3.al7           oniguruma.x86_64 0:6.8.2-2.el7                     oniguruma-devel.x86_64 0:6.8.2-2.el7            </span><br><span class="line">  python.x86_64 0:2.7.5-92.1.al7                        python-libs.x86_64 0:2.7.5-92.1.al7                python-perf.x86_64 0:4.19.91-26.3.al7           </span><br><span class="line">  rsync.x86_64 0:3.1.2-11.1.al7                         rsyslog.x86_64 0:8.24.0-57.1.al7.3                 xz.x86_64 0:5.2.2-2.1.al7                       </span><br><span class="line">  xz-devel.x86_64 0:5.2.2-2.1.al7                       xz-libs.x86_64 0:5.2.2-2.1.al7                    </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>upstart</title>
    <url>/upstart/</url>
    <content><![CDATA[<p>由于有个go的项目需要支持centos6，记录一下upstart进程管理。<a id="more"></a>在<code>/etc/init</code>下面建一个<code>mirror.conf</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">description     "mirror"	#描述</span><br><span class="line"></span><br><span class="line">start on runlevel [2345]	#开机启动</span><br><span class="line">stop on runlevel [!2345]</span><br><span class="line"></span><br><span class="line">respawn				#异常重启</span><br><span class="line">chdir /data/golang		#工作目录</span><br><span class="line"></span><br><span class="line">exec /data/golang/main		#执行</span><br></pre></td></tr></table></figure>

<p>可以参考nginx官方的脚本进行修改</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> http://wiki.nginx.org/upstart</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nginx</span></span><br><span class="line"></span><br><span class="line">description "nginx http daemon"</span><br><span class="line">author "George Shammas &lt;georgyo@gmail.com&gt;"</span><br><span class="line"></span><br><span class="line">start on (filesystem and net-device-up IFACE!=lo) 两个条件 文件系统和网络设备启动以后</span><br><span class="line">stop on runlevel [!2345]</span><br><span class="line"></span><br><span class="line">env DAEMON=/usr/sbin/nginx</span><br><span class="line">env PID=/var/run/nginx.pid</span><br><span class="line"></span><br><span class="line">expect fork</span><br><span class="line">respawn</span><br><span class="line">respawn limit 10 5</span><br><span class="line"><span class="meta">#</span><span class="bash">oom never</span></span><br><span class="line"></span><br><span class="line">pre-start script</span><br><span class="line">        $DAEMON -t</span><br><span class="line">        if [ $? -ne 0 ] 判断nginx -t命令的返回值是否是0(不是EXIT_SUCCESS)</span><br><span class="line">                then exit $?</span><br><span class="line">        fi</span><br><span class="line">end script</span><br><span class="line"></span><br><span class="line">exec $DAEMON</span><br></pre></td></tr></table></figure>
<p><code>start|restart|stop mirror</code> 来进行启动重启关闭。<a href="http://blog.fens.me/linux-upstart/" target="_blank" rel="noopener">参考资料</a> <a href="http://upstart.ubuntu.com/cookbook/#ordering-of-stop-start-operations" target="_blank" rel="noopener">官方文档</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>zookeeper-install</title>
    <url>/zk-install/</url>
    <content><![CDATA[<p>记录安装过程，方便后期查询。<a id="more"></a></p>
<h4 id="zookeep安装脚本"><a href="#zookeep安装脚本" class="headerlink" title="zookeep安装脚本"></a>zookeep安装脚本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> desc: zookeeper安装脚本</span></span><br><span class="line">set -e</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载zookeeper最新稳定版</span></span><br><span class="line">ZOOBASE=/home/server</span><br><span class="line">ZOOVERS=3.4.12</span><br><span class="line">ZOODATA=$ZOOBASE/zookeeper-$&#123;ZOOVERS&#125;/data</span><br><span class="line"></span><br><span class="line">mkdir -p $ZOOBASE</span><br><span class="line">cd $ZOOBASE</span><br><span class="line">wget http://www-eu.apache.org/dist/zookeeper/stable/zookeeper-$&#123;ZOOVERS&#125;.tar.gz</span><br><span class="line">tar zxvf zookeeper-$&#123;ZOOVERS&#125;.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据目录</span></span><br><span class="line">mkdir $ZOODATA</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置<span class="built_in">log</span>，特别注意jdk版本和jvm堆内存参数，堆内存分配尽量为内存的80%，不可超过系统内存大小导致频繁swap</span></span><br><span class="line">sed -i '27a ZOO_LOG_DIR=$&#123;ZOOBINDIR&#125;/../logs' $&#123;ZOOBASE&#125;/zookeeper-$&#123;ZOOVERS&#125;/bin/zkEnv.sh</span><br><span class="line">sed -i '28a ZOO_LOG4J_PROP="INFO,CONSOLE"' $&#123;ZOOBASE&#125;/zookeeper-$&#123;ZOOVERS&#125;/bin/zkEnv.sh</span><br><span class="line">mkdir $&#123;ZOOBASE&#125;/zookeeper-$&#123;ZOOVERS&#125;/logs</span><br><span class="line"></span><br><span class="line">cat &gt; $&#123;ZOOBASE&#125;/zookeeper-$&#123;ZOOVERS&#125;/conf/java.env &lt;&lt; EOF</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_144</span><br><span class="line">export JVMFLAGS="-Xms512m -Xmx1024m $JVMFLAGS"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="根据节点调整"><a href="#根据节点调整" class="headerlink" title="根据节点调整"></a>根据节点调整</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd zookeeper-$&#123;ZOOVERS&#125;</span><br><span class="line"></span><br><span class="line">cat &gt; conf/zoo.cfg &lt;&lt; EOF</span><br><span class="line">tickTime=2000</span><br><span class="line">dataDir=/home/server/data</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">maxClientCnxns=1000</span><br><span class="line">minSessionTimeout=30000</span><br><span class="line">maxSessionTimeout=60000</span><br><span class="line">server.1=127.0.0.17:2888:3888</span><br><span class="line">server.2=127.0.0.18:2888:3888</span><br><span class="line">server.3=127.0.0.19:2888:3888</span><br><span class="line">server.4=127.0.0.20:2888:3888</span><br><span class="line">server.5=127.0.0.21:2888:3888</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建myid文件来让zookeeper识别server身份,集群每个机器不一致</span></span><br><span class="line">echo "1" &gt; $ZOODATA/data/myid</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="重启脚本"><a href="#重启脚本" class="headerlink" title="重启脚本"></a>重启脚本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/init.d/zookeeper &lt;&lt; EOF</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">chkconfig:2345 20 90</span></span><br><span class="line"><span class="meta">#</span><span class="bash">description:zookeeper</span></span><br><span class="line"><span class="meta">#</span><span class="bash">processname:zookeeper</span></span><br><span class="line"></span><br><span class="line">case \$1 in</span><br><span class="line">    start)   /home/server/zookeeper-3.4.12/bin/zkServer.sh start ;;</span><br><span class="line">    stop)    /home/server/zookeeper-3.4.12/bin/zkServer.sh stop ;;</span><br><span class="line">    status)  /home/server/zookeeper-3.4.12/bin/zkServer.sh status ;;</span><br><span class="line">    restart) /home/server/zookeeper-3.4.12/bin/zkServer.sh restart ;;</span><br><span class="line">    *)       echo "require start|stop|status|restart" ;;</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod 755 /etc/init.d/zookeeper</span><br><span class="line">chkconfig zookeeper on</span><br><span class="line">service zookeeper restart</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h4><ul>
<li>tickTime:心跳的时间间隔</li>
<li>dataDir:数据目录</li>
<li>clientPort:客户端连接zk的端口</li>
<li>initLimit:初始化连接时最长能忍受多少个心跳时间间隔数</li>
<li>syncLimit: Leader 与 Follower 之间发送消息不能超过多少个tickTime</li>
<li>maxClientCnxns:限制连接到 ZooKeeper 的客户端的数量</li>
<li>minSessionTimeout:最小会话时间</li>
<li>maxSessionTimeout:最长会话时间 </li>
</ul>
<p>ps:从3.4.0开始，zookeeper提供了自动清理snapshot和事务日志的功能，通过配置 autopurge.snapRetainCount 和 autopurge.purgeInterval 这两个参数能够实现定时清理了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim zoo.cfg</span><br><span class="line">----------</span><br><span class="line">tickTime=2000</span><br><span class="line">dataDir=/home/server/data</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">maxClientCnxns=1000</span><br><span class="line">minSessionTimeout=30000</span><br><span class="line">maxSessionTimeout=60000</span><br><span class="line">server.1=127.0.0.17:2888:3888</span><br><span class="line">server.2=127.0.0.18:2888:3888</span><br><span class="line">server.3=127.0.0.19:2888:3888</span><br><span class="line">server.4=127.0.0.20:2888:3888</span><br><span class="line">server.5=127.0.0.21:2888:3888</span><br><span class="line">autopurge.purgeInterval=48</span><br><span class="line">autopurge.snapRetainCount=10</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>kill zombie</title>
    <url>/zombie/</url>
    <content><![CDATA[<p>今天无意发现一台服务器上有僵尸进程存在，记录一下处理方法<a id="more"></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ps aux  |grep  defunc   |grep -v grep</span><br><span class="line">-------------------------------------</span><br><span class="line">root       425  0.0  0.0      0     0 ?        Z    Jul08   0:00 [sendmail] &lt;defunct&gt;</span><br><span class="line">root      3972  0.0  0.0      0     0 ?        Z    May01   0:00 [sendmail] &lt;defunct&gt;</span><br><span class="line"></span><br><span class="line">ps -o  ppid 425</span><br><span class="line">---------------</span><br><span class="line"> PPID</span><br><span class="line">  373</span><br><span class="line"></span><br><span class="line">ps aux  |grep  373</span><br><span class="line">-----------------</span><br><span class="line">root       373  0.0  0.0 180676  1196 ?        S    Jul08   0:00 /usr/sbin/CROND -n</span><br><span class="line"></span><br><span class="line">kill  -9  373</span><br></pre></td></tr></table></figure>
<p>用ppid获取父进程的pid，查看父进程是什么程序，这里显示是计划任务所以我直接kill掉了，也可以用<code>kill -s SIGCHLD 373</code>来向父进程发送SIGCHLD信号来处理。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
</search>
